//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SureNkap.EsameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SureNkap.EsameService.Medecins))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SureNkap.EsameService.Patients))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SureNkap.EsameService.Agence))]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Adresse1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Adresse2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmailConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Genre SexeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.AccountStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.UserType TypeField;
        
        private int IdField;
        
        private string AdressEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse1 {
            get {
                return this.Adresse1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Adresse1Field, value) != true)) {
                    this.Adresse1Field = value;
                    this.RaisePropertyChanged("Adresse1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse2 {
            get {
                return this.Adresse2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Adresse2Field, value) != true)) {
                    this.Adresse2Field = value;
                    this.RaisePropertyChanged("Adresse2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmailConfirmed {
            get {
                return this.IsEmailConfirmedField;
            }
            set {
                if ((this.IsEmailConfirmedField.Equals(value) != true)) {
                    this.IsEmailConfirmedField = value;
                    this.RaisePropertyChanged("IsEmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Genre Sexe {
            get {
                return this.SexeField;
            }
            set {
                if ((this.SexeField.Equals(value) != true)) {
                    this.SexeField = value;
                    this.RaisePropertyChanged("Sexe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.AccountStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public string AdressEmail {
            get {
                return this.AdressEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressEmailField, value) != true)) {
                    this.AdressEmailField = value;
                    this.RaisePropertyChanged("AdressEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medecins", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Medecins : SureNkap.EsameService.Users {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttestAssuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillingAuthorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeFinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesCabinetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesDossierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesTeleconsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesUrgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeesWriteReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IbanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLabeledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegulatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalRefenceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Medecins.ProfileStatus ProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiretField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttestAssurance {
            get {
                return this.AttestAssuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.AttestAssuranceField, value) != true)) {
                    this.AttestAssuranceField = value;
                    this.RaisePropertyChanged("AttestAssurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bic {
            get {
                return this.BicField;
            }
            set {
                if ((object.ReferenceEquals(this.BicField, value) != true)) {
                    this.BicField = value;
                    this.RaisePropertyChanged("Bic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BillingAuthorization {
            get {
                return this.BillingAuthorizationField;
            }
            set {
                if ((this.BillingAuthorizationField.Equals(value) != true)) {
                    this.BillingAuthorizationField = value;
                    this.RaisePropertyChanged("BillingAuthorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Certificate {
            get {
                return this.CertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateField, value) != true)) {
                    this.CertificateField = value;
                    this.RaisePropertyChanged("Certificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeFiness {
            get {
                return this.CodeFinessField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeFinessField, value) != true)) {
                    this.CodeFinessField = value;
                    this.RaisePropertyChanged("CodeFiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeesCabinet {
            get {
                return this.FeesCabinetField;
            }
            set {
                if ((this.FeesCabinetField.Equals(value) != true)) {
                    this.FeesCabinetField = value;
                    this.RaisePropertyChanged("FeesCabinet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeesConsultation {
            get {
                return this.FeesConsultationField;
            }
            set {
                if ((this.FeesConsultationField.Equals(value) != true)) {
                    this.FeesConsultationField = value;
                    this.RaisePropertyChanged("FeesConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeesDossier {
            get {
                return this.FeesDossierField;
            }
            set {
                if ((this.FeesDossierField.Equals(value) != true)) {
                    this.FeesDossierField = value;
                    this.RaisePropertyChanged("FeesDossier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeesTeleconsultation {
            get {
                return this.FeesTeleconsultationField;
            }
            set {
                if ((this.FeesTeleconsultationField.Equals(value) != true)) {
                    this.FeesTeleconsultationField = value;
                    this.RaisePropertyChanged("FeesTeleconsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeesUrgency {
            get {
                return this.FeesUrgencyField;
            }
            set {
                if ((this.FeesUrgencyField.Equals(value) != true)) {
                    this.FeesUrgencyField = value;
                    this.RaisePropertyChanged("FeesUrgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeesWriteReport {
            get {
                return this.FeesWriteReportField;
            }
            set {
                if ((this.FeesWriteReportField.Equals(value) != true)) {
                    this.FeesWriteReportField = value;
                    this.RaisePropertyChanged("FeesWriteReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iban {
            get {
                return this.IbanField;
            }
            set {
                if ((object.ReferenceEquals(this.IbanField, value) != true)) {
                    this.IbanField = value;
                    this.RaisePropertyChanged("Iban");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLabeled {
            get {
                return this.IsLabeledField;
            }
            set {
                if ((this.IsLabeledField.Equals(value) != true)) {
                    this.IsLabeledField = value;
                    this.RaisePropertyChanged("IsLabeled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivate {
            get {
                return this.IsPrivateField;
            }
            set {
                if ((this.IsPrivateField.Equals(value) != true)) {
                    this.IsPrivateField = value;
                    this.RaisePropertyChanged("IsPrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegulator {
            get {
                return this.IsRegulatorField;
            }
            set {
                if ((this.IsRegulatorField.Equals(value) != true)) {
                    this.IsRegulatorField = value;
                    this.RaisePropertyChanged("IsRegulator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalRefenceCode {
            get {
                return this.MedicalRefenceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalRefenceCodeField, value) != true)) {
                    this.MedicalRefenceCodeField = value;
                    this.RaisePropertyChanged("MedicalRefenceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Medecins.ProfileStatus Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((this.ProfileField.Equals(value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Siret {
            get {
                return this.SiretField;
            }
            set {
                if ((object.ReferenceEquals(this.SiretField, value) != true)) {
                    this.SiretField = value;
                    this.RaisePropertyChanged("Siret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Medecins.ProfileStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum ProfileStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Private = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Public = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Reserved = -1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patients", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Patients : SureNkap.EsameService.Users {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssurancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BloodGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencyContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencyContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MutuelleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PharmacieContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PharmacieEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PharmacieNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateOfBirthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Assurances {
            get {
                return this.AssurancesField;
            }
            set {
                if ((object.ReferenceEquals(this.AssurancesField, value) != true)) {
                    this.AssurancesField = value;
                    this.RaisePropertyChanged("Assurances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodGroup {
            get {
                return this.BloodGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodGroupField, value) != true)) {
                    this.BloodGroupField = value;
                    this.RaisePropertyChanged("BloodGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cv {
            get {
                return this.CvField;
            }
            set {
                if ((object.ReferenceEquals(this.CvField, value) != true)) {
                    this.CvField = value;
                    this.RaisePropertyChanged("Cv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doctor {
            get {
                return this.DoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorField, value) != true)) {
                    this.DoctorField = value;
                    this.RaisePropertyChanged("Doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencyContactName {
            get {
                return this.EmergencyContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencyContactNameField, value) != true)) {
                    this.EmergencyContactNameField = value;
                    this.RaisePropertyChanged("EmergencyContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencyContactPhone {
            get {
                return this.EmergencyContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencyContactPhoneField, value) != true)) {
                    this.EmergencyContactPhoneField = value;
                    this.RaisePropertyChanged("EmergencyContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mutuelle {
            get {
                return this.MutuelleField;
            }
            set {
                if ((object.ReferenceEquals(this.MutuelleField, value) != true)) {
                    this.MutuelleField = value;
                    this.RaisePropertyChanged("Mutuelle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PharmacieContact {
            get {
                return this.PharmacieContactField;
            }
            set {
                if ((object.ReferenceEquals(this.PharmacieContactField, value) != true)) {
                    this.PharmacieContactField = value;
                    this.RaisePropertyChanged("PharmacieContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PharmacieEmail {
            get {
                return this.PharmacieEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PharmacieEmailField, value) != true)) {
                    this.PharmacieEmailField = value;
                    this.RaisePropertyChanged("PharmacieEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PharmacieName {
            get {
                return this.PharmacieNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PharmacieNameField, value) != true)) {
                    this.PharmacieNameField = value;
                    this.RaisePropertyChanged("PharmacieName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Profession {
            get {
                return this.ProfessionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionField, value) != true)) {
                    this.ProfessionField = value;
                    this.RaisePropertyChanged("Profession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfBirthField, value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Agence", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Agence : SureNkap.EsameService.Users {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RCCMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyNames {
            get {
                return this.CompanyNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNamesField, value) != true)) {
                    this.CompanyNamesField = value;
                    this.RaisePropertyChanged("CompanyNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RCCM {
            get {
                return this.RCCMField;
            }
            set {
                if ((object.ReferenceEquals(this.RCCMField, value) != true)) {
                    this.RCCMField = value;
                    this.RaisePropertyChanged("RCCM");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Genre", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum Genre : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Homme = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Femme = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum AccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Patients = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medecins = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Agence = -1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Responses")]
    [System.SerializableAttribute()]
    public partial class PatientViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Adresse1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegulatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Genre SexeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse1 {
            get {
                return this.Adresse1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Adresse1Field, value) != true)) {
                    this.Adresse1Field = value;
                    this.RaisePropertyChanged("Adresse1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegulated {
            get {
                return this.IsRegulatedField;
            }
            set {
                if ((this.IsRegulatedField.Equals(value) != true)) {
                    this.IsRegulatedField = value;
                    this.RaisePropertyChanged("IsRegulated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Genre Sexe {
            get {
                return this.SexeField;
            }
            set {
                if ((this.SexeField.Equals(value) != true)) {
                    this.SexeField = value;
                    this.RaisePropertyChanged("Sexe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedecinPatients", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class MedecinPatients : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegulatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.MedecinPatients.RequestStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegulated {
            get {
                return this.IsRegulatedField;
            }
            set {
                if ((this.IsRegulatedField.Equals(value) != true)) {
                    this.IsRegulatedField = value;
                    this.RaisePropertyChanged("IsRegulated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.MedecinPatients.RequestStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="MedecinPatients.RequestStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum RequestStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Accepted = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Pending = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Rejected = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotSent = -2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordResetData", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class PasswordResetData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReturnCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReturnCode {
            get {
                return this.ReturnCodeField;
            }
            set {
                if ((this.ReturnCodeField.Equals(value) != true)) {
                    this.ReturnCodeField = value;
                    this.RaisePropertyChanged("ReturnCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expertises", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Expertises : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Consent2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuardianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GuardianConsentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubmittedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Consent {
            get {
                return this.ConsentField;
            }
            set {
                if ((this.ConsentField.Equals(value) != true)) {
                    this.ConsentField = value;
                    this.RaisePropertyChanged("Consent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Consent2 {
            get {
                return this.Consent2Field;
            }
            set {
                if ((this.Consent2Field.Equals(value) != true)) {
                    this.Consent2Field = value;
                    this.RaisePropertyChanged("Consent2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromId {
            get {
                return this.FromIdField;
            }
            set {
                if ((this.FromIdField.Equals(value) != true)) {
                    this.FromIdField = value;
                    this.RaisePropertyChanged("FromId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guardian {
            get {
                return this.GuardianField;
            }
            set {
                if ((object.ReferenceEquals(this.GuardianField, value) != true)) {
                    this.GuardianField = value;
                    this.RaisePropertyChanged("Guardian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GuardianConsent {
            get {
                return this.GuardianConsentField;
            }
            set {
                if ((this.GuardianConsentField.Equals(value) != true)) {
                    this.GuardianConsentField = value;
                    this.RaisePropertyChanged("GuardianConsent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Objet {
            get {
                return this.ObjetField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjetField, value) != true)) {
                    this.ObjetField = value;
                    this.RaisePropertyChanged("Objet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resume {
            get {
                return this.ResumeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResumeField, value) != true)) {
                    this.ResumeField = value;
                    this.RaisePropertyChanged("Resume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Submitted {
            get {
                return this.SubmittedField;
            }
            set {
                if ((this.SubmittedField.Equals(value) != true)) {
                    this.SubmittedField = value;
                    this.RaisePropertyChanged("Submitted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class CaseViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpertiseFiles", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ExpertiseFiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilesViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class FilesViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fichiers", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Fichiers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttarchmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Fichiers.FilesType FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attarchment {
            get {
                return this.AttarchmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttarchmentField, value) != true)) {
                    this.AttarchmentField = value;
                    this.RaisePropertyChanged("Attarchment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FileIdField, value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Fichiers.FilesType FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((this.FileTypeField.Equals(value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReport {
            get {
                return this.IsReportField;
            }
            set {
                if ((this.IsReportField.Equals(value) != true)) {
                    this.IsReportField = value;
                    this.RaisePropertyChanged("IsReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Fichiers.FilesType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum FilesType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotAssigned = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            RadioStandard = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Echo = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Scanner = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Imagérie = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ExamensBio = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Certificats = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Courriers = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Autres = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Explorations = 9,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTask", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class FileTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateCreatedField, value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileAccessStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class FileAccessStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FistnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Access {
            get {
                return this.AccessField;
            }
            set {
                if ((this.AccessField.Equals(value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fistname {
            get {
                return this.FistnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FistnameField, value) != true)) {
                    this.FistnameField = value;
                    this.RaisePropertyChanged("Fistname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Consultations", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Consultations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestDoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiagnostiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float GlycemieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegultatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifMeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PoidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoulsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymptomesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TailleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.ConsultationType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProchainRendezVousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.ConsultationStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinsIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avis {
            get {
                return this.AvisField;
            }
            set {
                if ((object.ReferenceEquals(this.AvisField, value) != true)) {
                    this.AvisField = value;
                    this.RaisePropertyChanged("Avis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Conference {
            get {
                return this.ConferenceField;
            }
            set {
                if ((this.ConferenceField.Equals(value) != true)) {
                    this.ConferenceField = value;
                    this.RaisePropertyChanged("Conference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestDoctorId {
            get {
                return this.DestDoctorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DestDoctorIdField, value) != true)) {
                    this.DestDoctorIdField = value;
                    this.RaisePropertyChanged("DestDoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnostique {
            get {
                return this.DiagnostiqueField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnostiqueField, value) != true)) {
                    this.DiagnostiqueField = value;
                    this.RaisePropertyChanged("Diagnostique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Glycemie {
            get {
                return this.GlycemieField;
            }
            set {
                if ((this.GlycemieField.Equals(value) != true)) {
                    this.GlycemieField = value;
                    this.RaisePropertyChanged("Glycemie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Histoire {
            get {
                return this.HistoireField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoireField, value) != true)) {
                    this.HistoireField = value;
                    this.RaisePropertyChanged("Histoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegultated {
            get {
                return this.IsRegultatedField;
            }
            set {
                if ((this.IsRegultatedField.Equals(value) != true)) {
                    this.IsRegultatedField = value;
                    this.RaisePropertyChanged("IsRegultated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifMe {
            get {
                return this.NotifMeField;
            }
            set {
                if ((this.NotifMeField.Equals(value) != true)) {
                    this.NotifMeField = value;
                    this.RaisePropertyChanged("NotifMe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Poids {
            get {
                return this.PoidsField;
            }
            set {
                if ((this.PoidsField.Equals(value) != true)) {
                    this.PoidsField = value;
                    this.RaisePropertyChanged("Poids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pouls {
            get {
                return this.PoulsField;
            }
            set {
                if ((this.PoulsField.Equals(value) != true)) {
                    this.PoulsField = value;
                    this.RaisePropertyChanged("Pouls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sato {
            get {
                return this.SatoField;
            }
            set {
                if ((this.SatoField.Equals(value) != true)) {
                    this.SatoField = value;
                    this.RaisePropertyChanged("Sato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symptomes {
            get {
                return this.SymptomesField;
            }
            set {
                if ((object.ReferenceEquals(this.SymptomesField, value) != true)) {
                    this.SymptomesField = value;
                    this.RaisePropertyChanged("Symptomes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ta {
            get {
                return this.TaField;
            }
            set {
                if ((object.ReferenceEquals(this.TaField, value) != true)) {
                    this.TaField = value;
                    this.RaisePropertyChanged("Ta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Taille {
            get {
                return this.TailleField;
            }
            set {
                if ((this.TailleField.Equals(value) != true)) {
                    this.TailleField = value;
                    this.RaisePropertyChanged("Taille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Temp {
            get {
                return this.TempField;
            }
            set {
                if ((this.TempField.Equals(value) != true)) {
                    this.TempField = value;
                    this.RaisePropertyChanged("Temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.ConsultationType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public System.DateTime DateConsultation {
            get {
                return this.DateConsultationField;
            }
            set {
                if ((this.DateConsultationField.Equals(value) != true)) {
                    this.DateConsultationField = value;
                    this.RaisePropertyChanged("DateConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public bool ProchainRendezVous {
            get {
                return this.ProchainRendezVousField;
            }
            set {
                if ((this.ProchainRendezVousField.Equals(value) != true)) {
                    this.ProchainRendezVousField = value;
                    this.RaisePropertyChanged("ProchainRendezVous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public SureNkap.EsameService.ConsultationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public int MedecinsId {
            get {
                return this.MedecinsIdField;
            }
            set {
                if ((this.MedecinsIdField.Equals(value) != true)) {
                    this.MedecinsIdField = value;
                    this.RaisePropertyChanged("MedecinsId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsultationType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    public enum ConsultationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Request = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Appointement = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Teleconsultation = -1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsultationStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    public enum ConsultationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fermé = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Encours = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminé = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Régulations = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Brouillons = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Refered = -2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsultationViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ConsultationViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegulatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegulated {
            get {
                return this.IsRegulatedField;
            }
            set {
                if ((this.IsRegulatedField.Equals(value) != true)) {
                    this.IsRegulatedField = value;
                    this.RaisePropertyChanged("IsRegulated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecins {
            get {
                return this.MedecinsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinsField, value) != true)) {
                    this.MedecinsField = value;
                    this.RaisePropertyChanged("Medecins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Next {
            get {
                return this.NextField;
            }
            set {
                if ((object.ReferenceEquals(this.NextField, value) != true)) {
                    this.NextField = value;
                    this.RaisePropertyChanged("Next");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Patientid {
            get {
                return this.PatientidField;
            }
            set {
                if ((this.PatientidField.Equals(value) != true)) {
                    this.PatientidField = value;
                    this.RaisePropertyChanged("Patientid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintReportViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class PrintReportViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsultationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsultationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiagnostiqueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlycemieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotifField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoulsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RppsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SatoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiretField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TailleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TensionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avis {
            get {
                return this.AvisField;
            }
            set {
                if ((object.ReferenceEquals(this.AvisField, value) != true)) {
                    this.AvisField = value;
                    this.RaisePropertyChanged("Avis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsultationDate {
            get {
                return this.ConsultationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsultationDateField, value) != true)) {
                    this.ConsultationDateField = value;
                    this.RaisePropertyChanged("ConsultationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsultationTime {
            get {
                return this.ConsultationTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsultationTimeField, value) != true)) {
                    this.ConsultationTimeField = value;
                    this.RaisePropertyChanged("ConsultationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnostique {
            get {
                return this.DiagnostiqueField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnostiqueField, value) != true)) {
                    this.DiagnostiqueField = value;
                    this.RaisePropertyChanged("Diagnostique");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dob {
            get {
                return this.DobField;
            }
            set {
                if ((object.ReferenceEquals(this.DobField, value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Finess {
            get {
                return this.FinessField;
            }
            set {
                if ((object.ReferenceEquals(this.FinessField, value) != true)) {
                    this.FinessField = value;
                    this.RaisePropertyChanged("Finess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Glycemie {
            get {
                return this.GlycemieField;
            }
            set {
                if ((object.ReferenceEquals(this.GlycemieField, value) != true)) {
                    this.GlycemieField = value;
                    this.RaisePropertyChanged("Glycemie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Histoire {
            get {
                return this.HistoireField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoireField, value) != true)) {
                    this.HistoireField = value;
                    this.RaisePropertyChanged("Histoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinAddress {
            get {
                return this.MedecinAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinAddressField, value) != true)) {
                    this.MedecinAddressField = value;
                    this.RaisePropertyChanged("MedecinAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Motif {
            get {
                return this.MotifField;
            }
            set {
                if ((object.ReferenceEquals(this.MotifField, value) != true)) {
                    this.MotifField = value;
                    this.RaisePropertyChanged("Motif");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAddress {
            get {
                return this.PatientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAddressField, value) != true)) {
                    this.PatientAddressField = value;
                    this.RaisePropertyChanged("PatientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAge {
            get {
                return this.PatientAgeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAgeField, value) != true)) {
                    this.PatientAgeField = value;
                    this.RaisePropertyChanged("PatientAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poids {
            get {
                return this.PoidsField;
            }
            set {
                if ((object.ReferenceEquals(this.PoidsField, value) != true)) {
                    this.PoidsField = value;
                    this.RaisePropertyChanged("Poids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pouls {
            get {
                return this.PoulsField;
            }
            set {
                if ((object.ReferenceEquals(this.PoulsField, value) != true)) {
                    this.PoulsField = value;
                    this.RaisePropertyChanged("Pouls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrintDate {
            get {
                return this.PrintDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PrintDateField, value) != true)) {
                    this.PrintDateField = value;
                    this.RaisePropertyChanged("PrintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpps {
            get {
                return this.RppsField;
            }
            set {
                if ((object.ReferenceEquals(this.RppsField, value) != true)) {
                    this.RppsField = value;
                    this.RaisePropertyChanged("Rpps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sato {
            get {
                return this.SatoField;
            }
            set {
                if ((object.ReferenceEquals(this.SatoField, value) != true)) {
                    this.SatoField = value;
                    this.RaisePropertyChanged("Sato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Siret {
            get {
                return this.SiretField;
            }
            set {
                if ((object.ReferenceEquals(this.SiretField, value) != true)) {
                    this.SiretField = value;
                    this.RaisePropertyChanged("Siret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Taille {
            get {
                return this.TailleField;
            }
            set {
                if ((object.ReferenceEquals(this.TailleField, value) != true)) {
                    this.TailleField = value;
                    this.RaisePropertyChanged("Taille");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temp {
            get {
                return this.TempField;
            }
            set {
                if ((object.ReferenceEquals(this.TempField, value) != true)) {
                    this.TempField = value;
                    this.RaisePropertyChanged("Temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tension {
            get {
                return this.TensionField;
            }
            set {
                if ((object.ReferenceEquals(this.TensionField, value) != true)) {
                    this.TensionField = value;
                    this.RaisePropertyChanged("Tension");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Messages", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Messages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notes", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Notes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsultationFiles", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ConsultationFiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BilanViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class BilanViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Users MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Users PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.BilanType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSigned {
            get {
                return this.IsSignedField;
            }
            set {
                if ((this.IsSignedField.Equals(value) != true)) {
                    this.IsSignedField = value;
                    this.RaisePropertyChanged("IsSigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Users Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Users Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RC {
            get {
                return this.RCField;
            }
            set {
                if ((object.ReferenceEquals(this.RCField, value) != true)) {
                    this.RCField = value;
                    this.RaisePropertyChanged("RC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resultats {
            get {
                return this.ResultatsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultatsField, value) != true)) {
                    this.ResultatsField = value;
                    this.RaisePropertyChanged("Resultats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.BilanType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BilanType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    public enum BilanType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radiologie = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Biologie = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Autres = -1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bilans", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Bilans : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.BilanType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSigned {
            get {
                return this.IsSignedField;
            }
            set {
                if ((this.IsSignedField.Equals(value) != true)) {
                    this.IsSignedField = value;
                    this.RaisePropertyChanged("IsSigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RC {
            get {
                return this.RCField;
            }
            set {
                if ((object.ReferenceEquals(this.RCField, value) != true)) {
                    this.RCField = value;
                    this.RaisePropertyChanged("RC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resultats {
            get {
                return this.ResultatsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultatsField, value) != true)) {
                    this.ResultatsField = value;
                    this.RaisePropertyChanged("Resultats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.BilanType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BilanPrintViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class BilanPrintViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Examens[] ExamensField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientSurnamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RppsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiretField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dob {
            get {
                return this.DobField;
            }
            set {
                if ((object.ReferenceEquals(this.DobField, value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Examens[] Examens {
            get {
                return this.ExamensField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamensField, value) != true)) {
                    this.ExamensField = value;
                    this.RaisePropertyChanged("Examens");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Finess {
            get {
                return this.FinessField;
            }
            set {
                if ((object.ReferenceEquals(this.FinessField, value) != true)) {
                    this.FinessField = value;
                    this.RaisePropertyChanged("Finess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinAddress {
            get {
                return this.MedecinAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinAddressField, value) != true)) {
                    this.MedecinAddressField = value;
                    this.RaisePropertyChanged("MedecinAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAge {
            get {
                return this.PatientAgeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAgeField, value) != true)) {
                    this.PatientAgeField = value;
                    this.RaisePropertyChanged("PatientAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientNames {
            get {
                return this.PatientNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNamesField, value) != true)) {
                    this.PatientNamesField = value;
                    this.RaisePropertyChanged("PatientNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientSurnames {
            get {
                return this.PatientSurnamesField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientSurnamesField, value) != true)) {
                    this.PatientSurnamesField = value;
                    this.RaisePropertyChanged("PatientSurnames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rpps {
            get {
                return this.RppsField;
            }
            set {
                if ((object.ReferenceEquals(this.RppsField, value) != true)) {
                    this.RppsField = value;
                    this.RaisePropertyChanged("Rpps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Siret {
            get {
                return this.SiretField;
            }
            set {
                if ((object.ReferenceEquals(this.SiretField, value) != true)) {
                    this.SiretField = value;
                    this.RaisePropertyChanged("Siret");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Examens", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Examens : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Indications {
            get {
                return this.IndicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.IndicationsField, value) != true)) {
                    this.IndicationsField = value;
                    this.RaisePropertyChanged("Indications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Certificats", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Certificats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DureeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.TypeCertificat TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((object.ReferenceEquals(this.DateEndField, value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((object.ReferenceEquals(this.DateStartField, value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duree {
            get {
                return this.DureeField;
            }
            set {
                if ((this.DureeField.Equals(value) != true)) {
                    this.DureeField = value;
                    this.RaisePropertyChanged("Duree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Medecinid {
            get {
                return this.MedecinidField;
            }
            set {
                if ((this.MedecinidField.Equals(value) != true)) {
                    this.MedecinidField = value;
                    this.RaisePropertyChanged("Medecinid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.TypeCertificat Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeCertificat", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    public enum TypeCertificat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Traitements = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prolongations = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CertificatsPrintModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class CertificatsPrintModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiretField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateEnd {
            get {
                return this.DateEndField;
            }
            set {
                if ((object.ReferenceEquals(this.DateEndField, value) != true)) {
                    this.DateEndField = value;
                    this.RaisePropertyChanged("DateEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateStart {
            get {
                return this.DateStartField;
            }
            set {
                if ((object.ReferenceEquals(this.DateStartField, value) != true)) {
                    this.DateStartField = value;
                    this.RaisePropertyChanged("DateStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Finess {
            get {
                return this.FinessField;
            }
            set {
                if ((object.ReferenceEquals(this.FinessField, value) != true)) {
                    this.FinessField = value;
                    this.RaisePropertyChanged("Finess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Jours {
            get {
                return this.JoursField;
            }
            set {
                if ((this.JoursField.Equals(value) != true)) {
                    this.JoursField = value;
                    this.RaisePropertyChanged("Jours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedecinAdresse {
            get {
                return this.MedecinAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinAdresseField, value) != true)) {
                    this.MedecinAdresseField = value;
                    this.RaisePropertyChanged("MedecinAdresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Siret {
            get {
                return this.SiretField;
            }
            set {
                if ((object.ReferenceEquals(this.SiretField, value) != true)) {
                    this.SiretField = value;
                    this.RaisePropertyChanged("Siret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingAdress", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class BillingAdress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedecinsTraitants", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class MedecinsTraitants : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Addresse {
            get {
                return this.AddresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AddresseField, value) != true)) {
                    this.AddresseField = value;
                    this.RaisePropertyChanged("Addresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Noms {
            get {
                return this.NomsField;
            }
            set {
                if ((object.ReferenceEquals(this.NomsField, value) != true)) {
                    this.NomsField = value;
                    this.RaisePropertyChanged("Noms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenoms {
            get {
                return this.PrenomsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomsField, value) != true)) {
                    this.PrenomsField = value;
                    this.RaisePropertyChanged("Prenoms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationDto", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OperationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriptions {
            get {
                return this.DescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionsField, value) != true)) {
                    this.DescriptionsField = value;
                    this.RaisePropertyChanged("Descriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceIdField, value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Statut {
            get {
                return this.StatutField;
            }
            set {
                if ((this.StatutField.Equals(value) != true)) {
                    this.StatutField = value;
                    this.RaisePropertyChanged("Statut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DossierRequestViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class DossierRequestViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DossierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DossierId {
            get {
                return this.DossierIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DossierIdField, value) != true)) {
                    this.DossierIdField = value;
                    this.RaisePropertyChanged("DossierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointementViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class AppointementViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string End {
            get {
                return this.EndField;
            }
            set {
                if ((object.ReferenceEquals(this.EndField, value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Start {
            get {
                return this.StartField;
            }
            set {
                if ((object.ReferenceEquals(this.StartField, value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ordonnances", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Ordonnances : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prescriptions", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Prescriptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SignedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Periode {
            get {
                return this.PeriodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodeField, value) != true)) {
                    this.PeriodeField = value;
                    this.RaisePropertyChanged("Periode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prise {
            get {
                return this.PriseField;
            }
            set {
                if ((object.ReferenceEquals(this.PriseField, value) != true)) {
                    this.PriseField = value;
                    this.RaisePropertyChanged("Prise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quand {
            get {
                return this.QuandField;
            }
            set {
                if ((object.ReferenceEquals(this.QuandField, value) != true)) {
                    this.QuandField = value;
                    this.RaisePropertyChanged("Quand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Signed {
            get {
                return this.SignedField;
            }
            set {
                if ((this.SignedField.Equals(value) != true)) {
                    this.SignedField = value;
                    this.RaisePropertyChanged("Signed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdonnancePrintViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OrdonnancePrintViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Medecins MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Patients PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Prescriptions[] PrescriptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Medecins Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Patients Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAge {
            get {
                return this.PatientAgeField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAgeField, value) != true)) {
                    this.PatientAgeField = value;
                    this.RaisePropertyChanged("PatientAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Prescriptions[] Prescriptions {
            get {
                return this.PrescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrescriptionsField, value) != true)) {
                    this.PrescriptionsField = value;
                    this.RaisePropertyChanged("Prescriptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdonnanceDetails", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OrdonnanceDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrdonnanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Ordered {
            get {
                return this.OrderedField;
            }
            set {
                if ((this.OrderedField.Equals(value) != true)) {
                    this.OrderedField = value;
                    this.RaisePropertyChanged("Ordered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrdonnanceId {
            get {
                return this.OrdonnanceIdField;
            }
            set {
                if ((this.OrdonnanceIdField.Equals(value) != true)) {
                    this.OrdonnanceIdField = value;
                    this.RaisePropertyChanged("OrdonnanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prise {
            get {
                return this.PriseField;
            }
            set {
                if ((object.ReferenceEquals(this.PriseField, value) != true)) {
                    this.PriseField = value;
                    this.RaisePropertyChanged("Prise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiaryViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class DiaryViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string End {
            get {
                return this.EndField;
            }
            set {
                if ((object.ReferenceEquals(this.EndField, value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodType {
            get {
                return this.PeriodTypeField;
            }
            set {
                if ((this.PeriodTypeField.Equals(value) != true)) {
                    this.PeriodTypeField = value;
                    this.RaisePropertyChanged("PeriodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Start {
            get {
                return this.StartField;
            }
            set {
                if ((object.ReferenceEquals(this.StartField, value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Periods", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Periods : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Periods.PeriodStatus StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Periods.TypeHorraire TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfirmed {
            get {
                return this.IsConfirmedField;
            }
            set {
                if ((this.IsConfirmedField.Equals(value) != true)) {
                    this.IsConfirmedField = value;
                    this.RaisePropertyChanged("IsConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Periods.PeriodStatus State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Periods.TypeHorraire Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Periods.PeriodStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum PeriodStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Active = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Expired = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Processing = -1,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Periods.TypeHorraire", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum TypeHorraire : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Cabinet = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Urgence = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Teleconsultation = 0,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class PeriodViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Periods.PeriodStatus StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Periods.TypeHorraire TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfirmed {
            get {
                return this.IsConfirmedField;
            }
            set {
                if ((this.IsConfirmedField.Equals(value) != true)) {
                    this.IsConfirmedField = value;
                    this.RaisePropertyChanged("IsConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Periods.PeriodStatus State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Periods.TypeHorraire Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Countries", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Countries : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Iso3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iso {
            get {
                return this.IsoField;
            }
            set {
                if ((object.ReferenceEquals(this.IsoField, value) != true)) {
                    this.IsoField = value;
                    this.RaisePropertyChanged("Iso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NiceName {
            get {
                return this.NiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NiceNameField, value) != true)) {
                    this.NiceNameField = value;
                    this.RaisePropertyChanged("NiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Iso3 {
            get {
                return this.Iso3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Iso3Field, value) != true)) {
                    this.Iso3Field = value;
                    this.RaisePropertyChanged("Iso3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string NumCode {
            get {
                return this.NumCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NumCodeField, value) != true)) {
                    this.NumCodeField = value;
                    this.RaisePropertyChanged("NumCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PhoneCode {
            get {
                return this.PhoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneCodeField, value) != true)) {
                    this.PhoneCodeField = value;
                    this.RaisePropertyChanged("PhoneCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cim2015", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Cim2015 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Code1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Code2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NiveauField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code1 {
            get {
                return this.Code1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Code1Field, value) != true)) {
                    this.Code1Field = value;
                    this.RaisePropertyChanged("Code1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code2 {
            get {
                return this.Code2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Code2Field, value) != true)) {
                    this.Code2Field = value;
                    this.RaisePropertyChanged("Code2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriptions {
            get {
                return this.DescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionsField, value) != true)) {
                    this.DescriptionsField = value;
                    this.RaisePropertyChanged("Descriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Niveau {
            get {
                return this.NiveauField;
            }
            set {
                if ((this.NiveauField.Equals(value) != true)) {
                    this.NiveauField = value;
                    this.RaisePropertyChanged("Niveau");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prices", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Prices : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormuleId {
            get {
                return this.FormuleIdField;
            }
            set {
                if ((this.FormuleIdField.Equals(value) != true)) {
                    this.FormuleIdField = value;
                    this.RaisePropertyChanged("FormuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodeId {
            get {
                return this.PeriodeIdField;
            }
            set {
                if ((this.PeriodeIdField.Equals(value) != true)) {
                    this.PeriodeIdField = value;
                    this.RaisePropertyChanged("PeriodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Symptomes", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Symptomes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSettings", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ProductSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarqueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prise {
            get {
                return this.PriseField;
            }
            set {
                if ((object.ReferenceEquals(this.PriseField, value) != true)) {
                    this.PriseField = value;
                    this.RaisePropertyChanged("Prise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((object.ReferenceEquals(this.QtyField, value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quand {
            get {
                return this.QuandField;
            }
            set {
                if ((object.ReferenceEquals(this.QuandField, value) != true)) {
                    this.QuandField = value;
                    this.RaisePropertyChanged("Quand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarque {
            get {
                return this.RemarqueField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarqueField, value) != true)) {
                    this.RemarqueField = value;
                    this.RaisePropertyChanged("Remarque");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specialites", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Specialites : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationSettings", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ApplicationSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ConfSessionPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultTimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ConfSessionPrice {
            get {
                return this.ConfSessionPriceField;
            }
            set {
                if ((this.ConfSessionPriceField.Equals(value) != true)) {
                    this.ConfSessionPriceField = value;
                    this.RaisePropertyChanged("ConfSessionPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultTimeZone {
            get {
                return this.DefaultTimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultTimeZoneField, value) != true)) {
                    this.DefaultTimeZoneField = value;
                    this.RaisePropertyChanged("DefaultTimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DropList", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class DropList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Formules", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Formules : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descriptions {
            get {
                return this.DescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionsField, value) != true)) {
                    this.DescriptionsField = value;
                    this.RaisePropertyChanged("Descriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Group {
            get {
                return this.GroupField;
            }
            set {
                if ((this.GroupField.Equals(value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Periodes", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Periodes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormuleViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class FormuleViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Prices[] PricesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isGroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Prices[] Prices {
            get {
                return this.PricesField;
            }
            set {
                if ((object.ReferenceEquals(this.PricesField, value) != true)) {
                    this.PricesField = value;
                    this.RaisePropertyChanged("Prices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isGroup {
            get {
                return this.isGroupField;
            }
            set {
                if ((this.isGroupField.Equals(value) != true)) {
                    this.isGroupField = value;
                    this.RaisePropertyChanged("isGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtraServices", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ExtraServices : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.ExtraServices.ServiceType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.ExtraServices.ServiceType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitQuantity {
            get {
                return this.UnitQuantityField;
            }
            set {
                if ((this.UnitQuantityField.Equals(value) != true)) {
                    this.UnitQuantityField = value;
                    this.RaisePropertyChanged("UnitQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ExtraServices.ServiceType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum ServiceType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SMS = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Storage = 0,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryCodes", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class CountryCodes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Services", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Services : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AgendaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvisMedicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallSessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GeolocalisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PharmaciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TeleconsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UrgencesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Agenda {
            get {
                return this.AgendaField;
            }
            set {
                if ((this.AgendaField.Equals(value) != true)) {
                    this.AgendaField = value;
                    this.RaisePropertyChanged("Agenda");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AvisMedical {
            get {
                return this.AvisMedicalField;
            }
            set {
                if ((this.AvisMedicalField.Equals(value) != true)) {
                    this.AvisMedicalField = value;
                    this.RaisePropertyChanged("AvisMedical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallSessions {
            get {
                return this.CallSessionsField;
            }
            set {
                if ((this.CallSessionsField.Equals(value) != true)) {
                    this.CallSessionsField = value;
                    this.RaisePropertyChanged("CallSessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormuleId {
            get {
                return this.FormuleIdField;
            }
            set {
                if ((this.FormuleIdField.Equals(value) != true)) {
                    this.FormuleIdField = value;
                    this.RaisePropertyChanged("FormuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Geolocalisation {
            get {
                return this.GeolocalisationField;
            }
            set {
                if ((this.GeolocalisationField.Equals(value) != true)) {
                    this.GeolocalisationField = value;
                    this.RaisePropertyChanged("Geolocalisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlineChat {
            get {
                return this.OnlineChatField;
            }
            set {
                if ((this.OnlineChatField.Equals(value) != true)) {
                    this.OnlineChatField = value;
                    this.RaisePropertyChanged("OnlineChat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Pharmacies {
            get {
                return this.PharmaciesField;
            }
            set {
                if ((this.PharmaciesField.Equals(value) != true)) {
                    this.PharmaciesField = value;
                    this.RaisePropertyChanged("Pharmacies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Regulation {
            get {
                return this.RegulationField;
            }
            set {
                if ((this.RegulationField.Equals(value) != true)) {
                    this.RegulationField = value;
                    this.RaisePropertyChanged("Regulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sms {
            get {
                return this.SmsField;
            }
            set {
                if ((this.SmsField.Equals(value) != true)) {
                    this.SmsField = value;
                    this.RaisePropertyChanged("Sms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Storage {
            get {
                return this.StorageField;
            }
            set {
                if ((this.StorageField.Equals(value) != true)) {
                    this.StorageField = value;
                    this.RaisePropertyChanged("Storage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Teleconsultation {
            get {
                return this.TeleconsultationField;
            }
            set {
                if ((this.TeleconsultationField.Equals(value) != true)) {
                    this.TeleconsultationField = value;
                    this.RaisePropertyChanged("Teleconsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Urgences {
            get {
                return this.UrgencesField;
            }
            set {
                if ((this.UrgencesField.Equals(value) != true)) {
                    this.UrgencesField = value;
                    this.RaisePropertyChanged("Urgences");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupeExtraInfos", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SureNkap.EsameService.Entreprises))]
    public partial class GroupeExtraInfos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.GroupeExtraInfos.GroupeInfoType InfoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAdress {
            get {
                return this.EmailAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAdressField, value) != true)) {
                    this.EmailAdressField = value;
                    this.RaisePropertyChanged("EmailAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.GroupeExtraInfos.GroupeInfoType InfoType {
            get {
                return this.InfoTypeField;
            }
            set {
                if ((this.InfoTypeField.Equals(value) != true)) {
                    this.InfoTypeField = value;
                    this.RaisePropertyChanged("InfoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="GroupeExtraInfos.GroupeInfoType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum GroupeInfoType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Family = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Enterprise = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entreprises", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Entreprises : SureNkap.EsameService.GroupeExtraInfos {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnterpriseExtraInfoViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class EnterpriseExtraInfoViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorSurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.GroupeExtraInfos.GroupeInfoType GroupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorAdresse {
            get {
                return this.DoctorAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorAdresseField, value) != true)) {
                    this.DoctorAdresseField = value;
                    this.RaisePropertyChanged("DoctorAdresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorContact {
            get {
                return this.DoctorContactField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorContactField, value) != true)) {
                    this.DoctorContactField = value;
                    this.RaisePropertyChanged("DoctorContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorNames {
            get {
                return this.DoctorNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorNamesField, value) != true)) {
                    this.DoctorNamesField = value;
                    this.RaisePropertyChanged("DoctorNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorSurname {
            get {
                return this.DoctorSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorSurnameField, value) != true)) {
                    this.DoctorSurnameField = value;
                    this.RaisePropertyChanged("DoctorSurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAdresse {
            get {
                return this.EmailAdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAdresseField, value) != true)) {
                    this.EmailAdresseField = value;
                    this.RaisePropertyChanged("EmailAdresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.GroupeExtraInfos.GroupeInfoType GroupType {
            get {
                return this.GroupTypeField;
            }
            set {
                if ((this.GroupTypeField.Equals(value) != true)) {
                    this.GroupTypeField = value;
                    this.RaisePropertyChanged("GroupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceDto", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class InvoiceDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeneficiereField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeneficiereIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.PaymentMethod PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.InvoiceStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Beneficiere {
            get {
                return this.BeneficiereField;
            }
            set {
                if ((object.ReferenceEquals(this.BeneficiereField, value) != true)) {
                    this.BeneficiereField = value;
                    this.RaisePropertyChanged("Beneficiere");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeneficiereId {
            get {
                return this.BeneficiereIdField;
            }
            set {
                if ((this.BeneficiereIdField.Equals(value) != true)) {
                    this.BeneficiereIdField = value;
                    this.RaisePropertyChanged("BeneficiereId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.PaymentMethod PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.InvoiceStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum PaymentMethod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MTMM = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PP = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CASH = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum InvoiceStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paid = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoices", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Invoices : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeneficiereIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.PaymentMethod PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.InvoiceStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeneficiereId {
            get {
                return this.BeneficiereIdField;
            }
            set {
                if ((this.BeneficiereIdField.Equals(value) != true)) {
                    this.BeneficiereIdField = value;
                    this.RaisePropertyChanged("BeneficiereId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.PaymentMethod PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((this.PaymentMethodField.Equals(value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sku {
            get {
                return this.SkuField;
            }
            set {
                if ((this.SkuField.Equals(value) != true)) {
                    this.SkuField = value;
                    this.RaisePropertyChanged("Sku");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.InvoiceStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxRate {
            get {
                return this.TaxRateField;
            }
            set {
                if ((this.TaxRateField.Equals(value) != true)) {
                    this.TaxRateField = value;
                    this.RaisePropertyChanged("TaxRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceDetails", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class InvoiceDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceHtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceIdField, value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPriceHt {
            get {
                return this.UnitPriceHtField;
            }
            set {
                if ((this.UnitPriceHtField.Equals(value) != true)) {
                    this.UnitPriceHtField = value;
                    this.RaisePropertyChanged("UnitPriceHt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parametres", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Parametres : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.TypeParametres TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.TypeParametres Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeParametres", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    public enum TypeParametres : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tension = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Glycémie = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pulsation = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturation = -2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvisRequest", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class AvisRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resume {
            get {
                return this.ResumeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResumeField, value) != true)) {
                    this.ResumeField = value;
                    this.RaisePropertyChanged("Resume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvisResponses", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class AvisResponses : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvisRequestViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class AvisRequestViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroDossierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.AvisResponseViewModel[] ReponsesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeroDossier {
            get {
                return this.NumeroDossierField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroDossierField, value) != true)) {
                    this.NumeroDossierField = value;
                    this.RaisePropertyChanged("NumeroDossier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.AvisResponseViewModel[] Reponses {
            get {
                return this.ReponsesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReponsesField, value) != true)) {
                    this.ReponsesField = value;
                    this.RaisePropertyChanged("Reponses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resume {
            get {
                return this.ResumeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResumeField, value) != true)) {
                    this.ResumeField = value;
                    this.RaisePropertyChanged("Resume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialty {
            get {
                return this.SpecialtyField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyField, value) != true)) {
                    this.SpecialtyField = value;
                    this.RaisePropertyChanged("Specialty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvisResponseViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class AvisResponseViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedecinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medecin {
            get {
                return this.MedecinField;
            }
            set {
                if ((object.ReferenceEquals(this.MedecinField, value) != true)) {
                    this.MedecinField = value;
                    this.RaisePropertyChanged("Medecin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvisRequestFiles", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class AvisRequestFiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvisIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvisId {
            get {
                return this.AvisIdField;
            }
            set {
                if ((this.AvisIdField.Equals(value) != true)) {
                    this.AvisIdField = value;
                    this.RaisePropertyChanged("AvisId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageServices", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class StorageServices : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageServiceDto", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Dto")]
    [System.SerializableAttribute()]
    public partial class StorageServiceDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DueDateField, value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriptionDate {
            get {
                return this.SubscriptionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionDateField, value) != true)) {
                    this.SubscriptionDateField = value;
                    this.RaisePropertyChanged("SubscriptionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Antecedants", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Antecedants : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Keys", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Keys : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DossierRegistrationRequest", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class DossierRegistrationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DossierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.DossierRequestStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DossierId {
            get {
                return this.DossierIdField;
            }
            set {
                if ((this.DossierIdField.Equals(value) != true)) {
                    this.DossierIdField = value;
                    this.RaisePropertyChanged("DossierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.DossierRequestStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DossierRequestStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum DossierRequestStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Submitted = -2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dossiers", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Dossiers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOpen {
            get {
                return this.IsOpenField;
            }
            set {
                if ((this.IsOpenField.Equals(value) != true)) {
                    this.IsOpenField = value;
                    this.RaisePropertyChanged("IsOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TraitementsHabituels", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class TraitementsHabituels : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarquesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Periode {
            get {
                return this.PeriodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodeField, value) != true)) {
                    this.PeriodeField = value;
                    this.RaisePropertyChanged("Periode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prise {
            get {
                return this.PriseField;
            }
            set {
                if ((object.ReferenceEquals(this.PriseField, value) != true)) {
                    this.PriseField = value;
                    this.RaisePropertyChanged("Prise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quand {
            get {
                return this.QuandField;
            }
            set {
                if ((object.ReferenceEquals(this.QuandField, value) != true)) {
                    this.QuandField = value;
                    this.RaisePropertyChanged("Quand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarques {
            get {
                return this.RemarquesField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarquesField, value) != true)) {
                    this.RemarquesField = value;
                    this.RaisePropertyChanged("Remarques");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Allergies", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Allergies : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubAccountsViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class SubAccountsViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubAccounts", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class SubAccounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdressEmail {
            get {
                return this.AdressEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressEmailField, value) != true)) {
                    this.AdressEmailField = value;
                    this.RaisePropertyChanged("AdressEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pharmacies", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Pharmacies : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommercialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RccmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommercialName {
            get {
                return this.CommercialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommercialNameField, value) != true)) {
                    this.CommercialNameField = value;
                    this.RaisePropertyChanged("CommercialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Country {
            get {
                return this.CountryField;
            }
            set {
                if ((this.CountryField.Equals(value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerContact {
            get {
                return this.ManagerContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerContactField, value) != true)) {
                    this.ManagerContactField = value;
                    this.RaisePropertyChanged("ManagerContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerNames {
            get {
                return this.ManagerNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerNamesField, value) != true)) {
                    this.ManagerNamesField = value;
                    this.RaisePropertyChanged("ManagerNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rccm {
            get {
                return this.RccmField;
            }
            set {
                if ((object.ReferenceEquals(this.RccmField, value) != true)) {
                    this.RccmField = value;
                    this.RaisePropertyChanged("Rccm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tva {
            get {
                return this.TvaField;
            }
            set {
                if ((this.TvaField.Equals(value) != true)) {
                    this.TvaField = value;
                    this.RaisePropertyChanged("Tva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevisViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class DevisViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrdonnanceRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PharmacieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalProduitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrdonnanceRef {
            get {
                return this.OrdonnanceRefField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdonnanceRefField, value) != true)) {
                    this.OrdonnanceRefField = value;
                    this.RaisePropertyChanged("OrdonnanceRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pharmacie {
            get {
                return this.PharmacieField;
            }
            set {
                if ((object.ReferenceEquals(this.PharmacieField, value) != true)) {
                    this.PharmacieField = value;
                    this.RaisePropertyChanged("Pharmacie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalProduits {
            get {
                return this.TotalProduitsField;
            }
            set {
                if ((this.TotalProduitsField.Equals(value) != true)) {
                    this.TotalProduitsField = value;
                    this.RaisePropertyChanged("TotalProduits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proforma", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Proforma : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrdonnanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmacyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrdonnanceId {
            get {
                return this.OrdonnanceIdField;
            }
            set {
                if ((this.OrdonnanceIdField.Equals(value) != true)) {
                    this.OrdonnanceIdField = value;
                    this.RaisePropertyChanged("OrdonnanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmacyId {
            get {
                return this.PharmacyIdField;
            }
            set {
                if ((this.PharmacyIdField.Equals(value) != true)) {
                    this.PharmacyIdField = value;
                    this.RaisePropertyChanged("PharmacyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProformaDetails", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class ProformaDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquivalentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProformaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Equivalent {
            get {
                return this.EquivalentField;
            }
            set {
                if ((object.ReferenceEquals(this.EquivalentField, value) != true)) {
                    this.EquivalentField = value;
                    this.RaisePropertyChanged("Equivalent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProformaId {
            get {
                return this.ProformaIdField;
            }
            set {
                if ((this.ProformaIdField.Equals(value) != true)) {
                    this.ProformaIdField = value;
                    this.RaisePropertyChanged("ProformaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuoteRequests", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class QuoteRequests : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrdonnanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmacyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrdonnanceId {
            get {
                return this.OrdonnanceIdField;
            }
            set {
                if ((this.OrdonnanceIdField.Equals(value) != true)) {
                    this.OrdonnanceIdField = value;
                    this.RaisePropertyChanged("OrdonnanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmacyId {
            get {
                return this.PharmacyIdField;
            }
            set {
                if ((this.PharmacyIdField.Equals(value) != true)) {
                    this.PharmacyIdField = value;
                    this.RaisePropertyChanged("PharmacyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Settings", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Settings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PharmacyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataSource {
            get {
                return this.DataSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSourceField, value) != true)) {
                    this.DataSourceField = value;
                    this.RaisePropertyChanged("DataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PharmacyId {
            get {
                return this.PharmacyIdField;
            }
            set {
                if ((this.PharmacyIdField.Equals(value) != true)) {
                    this.PharmacyIdField = value;
                    this.RaisePropertyChanged("PharmacyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Orders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOrderedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrdonnanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Orders.Statut StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOrdered {
            get {
                return this.DateOrderedField;
            }
            set {
                if ((this.DateOrderedField.Equals(value) != true)) {
                    this.DateOrderedField = value;
                    this.RaisePropertyChanged("DateOrdered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrdonnanceId {
            get {
                return this.OrdonnanceIdField;
            }
            set {
                if ((this.OrdonnanceIdField.Equals(value) != true)) {
                    this.OrdonnanceIdField = value;
                    this.RaisePropertyChanged("OrdonnanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paid {
            get {
                return this.PaidField;
            }
            set {
                if ((this.PaidField.Equals(value) != true)) {
                    this.PaidField = value;
                    this.RaisePropertyChanged("Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Orders.Statut Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Orders.Statut", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum Statut : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Pending = -2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ready = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Delivered = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Paid = 0,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetails", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OrderDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPdf", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OrderPdf : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNomberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Orders.Statut StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.OrderDetails[] detailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNomber {
            get {
                return this.OrderNomberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNomberField, value) != true)) {
                    this.OrderNomberField = value;
                    this.RaisePropertyChanged("OrderNomber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Orders.Statut Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupAddress {
            get {
                return this.SupAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SupAddressField, value) != true)) {
                    this.SupAddressField = value;
                    this.RaisePropertyChanged("SupAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupContact {
            get {
                return this.SupContactField;
            }
            set {
                if ((object.ReferenceEquals(this.SupContactField, value) != true)) {
                    this.SupContactField = value;
                    this.RaisePropertyChanged("SupContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tva {
            get {
                return this.TvaField;
            }
            set {
                if ((this.TvaField.Equals(value) != true)) {
                    this.TvaField = value;
                    this.RaisePropertyChanged("Tva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.OrderDetails[] details {
            get {
                return this.detailsField;
            }
            set {
                if ((object.ReferenceEquals(this.detailsField, value) != true)) {
                    this.detailsField = value;
                    this.RaisePropertyChanged("details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrdersViewModel", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OrdersViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateOrderedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PharmacyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Orders.Statut StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateOrdered {
            get {
                return this.DateOrderedField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOrderedField, value) != true)) {
                    this.DateOrderedField = value;
                    this.RaisePropertyChanged("DateOrdered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paid {
            get {
                return this.PaidField;
            }
            set {
                if ((this.PaidField.Equals(value) != true)) {
                    this.PaidField = value;
                    this.RaisePropertyChanged("Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pharmacy {
            get {
                return this.PharmacyField;
            }
            set {
                if ((object.ReferenceEquals(this.PharmacyField, value) != true)) {
                    this.PharmacyField = value;
                    this.RaisePropertyChanged("Pharmacy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductCount {
            get {
                return this.ProductCountField;
            }
            set {
                if ((this.ProductCountField.Equals(value) != true)) {
                    this.ProductCountField = value;
                    this.RaisePropertyChanged("ProductCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Orders.Statut Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPdfs", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OrderPdfs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNomberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TvaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDateField, value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNomber {
            get {
                return this.OrderNomberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNomberField, value) != true)) {
                    this.OrderNomberField = value;
                    this.RaisePropertyChanged("OrderNomber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupAddress {
            get {
                return this.SupAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SupAddressField, value) != true)) {
                    this.SupAddressField = value;
                    this.RaisePropertyChanged("SupAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupContact {
            get {
                return this.SupContactField;
            }
            set {
                if ((object.ReferenceEquals(this.SupContactField, value) != true)) {
                    this.SupContactField = value;
                    this.RaisePropertyChanged("SupContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tva {
            get {
                return this.TvaField;
            }
            set {
                if ((this.TvaField.Equals(value) != true)) {
                    this.TvaField = value;
                    this.RaisePropertyChanged("Tva");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Meetings", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Meetings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeratorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Meetings.MeetingStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeUsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConsultationIdField, value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModeratorId {
            get {
                return this.ModeratorIdField;
            }
            set {
                if ((this.ModeratorIdField.Equals(value) != true)) {
                    this.ModeratorIdField = value;
                    this.RaisePropertyChanged("ModeratorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Meetings.MeetingStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeUsed {
            get {
                return this.TimeUsedField;
            }
            set {
                if ((this.TimeUsedField.Equals(value) != true)) {
                    this.TimeUsedField = value;
                    this.RaisePropertyChanged("TimeUsed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Meetings.MeetingStatus", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum MeetingStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Open = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Closed = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Completed = -1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingParticipants", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class MeetingParticipants : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeetingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessCode {
            get {
                return this.AccessCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessCodeField, value) != true)) {
                    this.AccessCodeField = value;
                    this.RaisePropertyChanged("AccessCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeetingId {
            get {
                return this.MeetingIdField;
            }
            set {
                if ((this.MeetingIdField.Equals(value) != true)) {
                    this.MeetingIdField = value;
                    this.RaisePropertyChanged("MeetingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartDetails", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class CartDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CartIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CartId {
            get {
                return this.CartIdField;
            }
            set {
                if ((this.CartIdField.Equals(value) != true)) {
                    this.CartIdField = value;
                    this.RaisePropertyChanged("CartId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceIdField, value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeneficiereIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.PaymentMethod PaymentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.InvoiceStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeneficiereId {
            get {
                return this.BeneficiereIdField;
            }
            set {
                if ((this.BeneficiereIdField.Equals(value) != true)) {
                    this.BeneficiereIdField = value;
                    this.RaisePropertyChanged("BeneficiereId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceIdField, value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.PaymentMethod PaymentMode {
            get {
                return this.PaymentModeField;
            }
            set {
                if ((this.PaymentModeField.Equals(value) != true)) {
                    this.PaymentModeField = value;
                    this.RaisePropertyChanged("PaymentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.InvoiceStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OMPaymentRequest", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class OMPaymentRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeneficiereIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.ServicesType ServiceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeneficiereId {
            get {
                return this.BeneficiereIdField;
            }
            set {
                if ((this.BeneficiereIdField.Equals(value) != true)) {
                    this.BeneficiereIdField = value;
                    this.RaisePropertyChanged("BeneficiereId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.ServicesType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicesType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Models.Enums")]
    public enum ServicesType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AVISMEDICAL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RDV = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SERVSTOCKAGE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOSSIER = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TELEEXPERTISE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PHARMACIE = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Events", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Events : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedecinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Events.Alert NotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrepaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Events.StatusEvent StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.Events.EventType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedecinId {
            get {
                return this.MedecinIdField;
            }
            set {
                if ((this.MedecinIdField.Equals(value) != true)) {
                    this.MedecinIdField = value;
                    this.RaisePropertyChanged("MedecinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Events.Alert Notification {
            get {
                return this.NotificationField;
            }
            set {
                if ((this.NotificationField.Equals(value) != true)) {
                    this.NotificationField = value;
                    this.RaisePropertyChanged("Notification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Prepaid {
            get {
                return this.PrepaidField;
            }
            set {
                if ((this.PrepaidField.Equals(value) != true)) {
                    this.PrepaidField = value;
                    this.RaisePropertyChanged("Prepaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesId {
            get {
                return this.SeriesIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesIdField, value) != true)) {
                    this.SeriesIdField = value;
                    this.RaisePropertyChanged("SeriesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Events.StatusEvent Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.Events.EventType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Events.Alert", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum Alert : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            None = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FifteenMinutes = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ThirtyMinutes = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            OneHour = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TwelveHours = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TwentyFourHours = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            OneWeek = 6,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Events.StatusEvent", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum StatusEvent : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            All = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Open = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Booked = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Completed = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Paid = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Processing = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Cancelled = -2,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Events.EventType", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum EventType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            All = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Cabinet = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Urgence = -1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Teleconsultation = 0,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSeries", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EventSeries : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.DayOfWeeks EventDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SureNkap.EsameService.EventSeries.Period RepeatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.DayOfWeeks EventDays {
            get {
                return this.EventDaysField;
            }
            set {
                if ((this.EventDaysField.Equals(value) != true)) {
                    this.EventDaysField = value;
                    this.RaisePropertyChanged("EventDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SureNkap.EsameService.EventSeries.Period Repeated {
            get {
                return this.RepeatedField;
            }
            set {
                if ((this.RepeatedField.Equals(value) != true)) {
                    this.RepeatedField = value;
                    this.RaisePropertyChanged("Repeated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="EventSeries.Period", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
        public enum Period : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Day = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Week = 1,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayOfWeeks", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    public enum DayOfWeeks : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dimanche = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lundi = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mardi = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mercredi = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jeudi = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vendredi = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Samedi = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Calendar", Namespace="http://schemas.datacontract.org/2004/07/Africamed.Esame.Buisness")]
    [System.SerializableAttribute()]
    public partial class Calendar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultationId {
            get {
                return this.ConsultationIdField;
            }
            set {
                if ((this.ConsultationIdField.Equals(value) != true)) {
                    this.ConsultationIdField = value;
                    this.RaisePropertyChanged("ConsultationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EsameService.IData")]
    public interface IData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListUsers", ReplyAction="http://tempuri.org/IUserService/GetListUsersResponse")]
        SureNkap.EsameService.Users[] GetListUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListUsers", ReplyAction="http://tempuri.org/IUserService/GetListUsersResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Users[]> GetListUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        SureNkap.EsameService.Users GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Users> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUserByEmail", ReplyAction="http://tempuri.org/IUserService/FindUserByEmailResponse")]
        SureNkap.EsameService.Users FindUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FindUserByEmail", ReplyAction="http://tempuri.org/IUserService/FindUserByEmailResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Users> FindUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        int CreateUser(SureNkap.EsameService.Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(SureNkap.EsameService.Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        bool UpdateUser(SureNkap.EsameService.Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(SureNkap.EsameService.Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserExists", ReplyAction="http://tempuri.org/IUserService/UserExistsResponse")]
        bool UserExists(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserExists", ReplyAction="http://tempuri.org/IUserService/UserExistsResponse")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListMedecinsByPatient", ReplyAction="http://tempuri.org/IUserService/GetListMedecinsByPatientResponse")]
        SureNkap.EsameService.Medecins[] GetListMedecinsByPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListMedecinsByPatient", ReplyAction="http://tempuri.org/IUserService/GetListMedecinsByPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetListMedecinsByPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListPatientsByMedecin", ReplyAction="http://tempuri.org/IUserService/GetListPatientsByMedecinResponse")]
        SureNkap.EsameService.PatientViewModel[] GetListPatientsByMedecin(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListPatientsByMedecin", ReplyAction="http://tempuri.org/IUserService/GetListPatientsByMedecinResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.PatientViewModel[]> GetListPatientsByMedecinAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateInvitationRequest", ReplyAction="http://tempuri.org/IUserService/CreateInvitationRequestResponse")]
        void CreateInvitationRequest(SureNkap.EsameService.MedecinPatients request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateInvitationRequest", ReplyAction="http://tempuri.org/IUserService/CreateInvitationRequestResponse")]
        System.Threading.Tasks.Task CreateInvitationRequestAsync(SureNkap.EsameService.MedecinPatients request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateInvitationRequest", ReplyAction="http://tempuri.org/IUserService/UpdateInvitationRequestResponse")]
        bool UpdateInvitationRequest(SureNkap.EsameService.MedecinPatients invit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateInvitationRequest", ReplyAction="http://tempuri.org/IUserService/UpdateInvitationRequestResponse")]
        System.Threading.Tasks.Task<bool> UpdateInvitationRequestAsync(SureNkap.EsameService.MedecinPatients invit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserChildrens", ReplyAction="http://tempuri.org/IUserService/GetUserChildrensResponse")]
        int GetUserChildrens(int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserChildrens", ReplyAction="http://tempuri.org/IUserService/GetUserChildrensResponse")]
        System.Threading.Tasks.Task<int> GetUserChildrensAsync(int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPasswordPharmacy", ReplyAction="http://tempuri.org/IUserService/ResetPasswordPharmacyResponse")]
        bool ResetPasswordPharmacy(System.Guid uid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPasswordPharmacy", ReplyAction="http://tempuri.org/IUserService/ResetPasswordPharmacyResponse")]
        System.Threading.Tasks.Task<bool> ResetPasswordPharmacyAsync(System.Guid uid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPasswordEsame", ReplyAction="http://tempuri.org/IUserService/ResetPasswordEsameResponse")]
        bool ResetPasswordEsame(System.Guid uid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPasswordEsame", ReplyAction="http://tempuri.org/IUserService/ResetPasswordEsameResponse")]
        System.Threading.Tasks.Task<bool> ResetPasswordEsameAsync(System.Guid uid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsValidPasswordResetLink", ReplyAction="http://tempuri.org/IUserService/IsValidPasswordResetLinkResponse")]
        bool IsValidPasswordResetLink(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsValidPasswordResetLink", ReplyAction="http://tempuri.org/IUserService/IsValidPasswordResetLinkResponse")]
        System.Threading.Tasks.Task<bool> IsValidPasswordResetLinkAsync(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsValidPasswordResetLink2", ReplyAction="http://tempuri.org/IUserService/IsValidPasswordResetLink2Response")]
        bool IsValidPasswordResetLink2(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/IsValidPasswordResetLink2", ReplyAction="http://tempuri.org/IUserService/IsValidPasswordResetLink2Response")]
        System.Threading.Tasks.Task<bool> IsValidPasswordResetLink2Async(System.Guid uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPasswordRequestLink", ReplyAction="http://tempuri.org/IUserService/GetPasswordRequestLinkResponse")]
        SureNkap.EsameService.PasswordResetData GetPasswordRequestLink(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPasswordRequestLink", ReplyAction="http://tempuri.org/IUserService/GetPasswordRequestLinkResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.PasswordResetData> GetPasswordRequestLinkAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPasswordRequestLink2", ReplyAction="http://tempuri.org/IUserService/GetPasswordRequestLink2Response")]
        SureNkap.EsameService.PasswordResetData GetPasswordRequestLink2(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPasswordRequestLink2", ReplyAction="http://tempuri.org/IUserService/GetPasswordRequestLink2Response")]
        System.Threading.Tasks.Task<SureNkap.EsameService.PasswordResetData> GetPasswordRequestLink2Async(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetInvitationRequest", ReplyAction="http://tempuri.org/IUserService/GetInvitationRequestResponse")]
        SureNkap.EsameService.MedecinPatients GetInvitationRequest(int p, int m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetInvitationRequest", ReplyAction="http://tempuri.org/IUserService/GetInvitationRequestResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.MedecinPatients> GetInvitationRequestAsync(int p, int m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/GetCaseById", ReplyAction="http://tempuri.org/IExpertises/GetCaseByIdResponse")]
        SureNkap.EsameService.Expertises GetCaseById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/GetCaseById", ReplyAction="http://tempuri.org/IExpertises/GetCaseByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Expertises> GetCaseByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/AddCase", ReplyAction="http://tempuri.org/IExpertises/AddCaseResponse")]
        int AddCase(SureNkap.EsameService.Expertises exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/AddCase", ReplyAction="http://tempuri.org/IExpertises/AddCaseResponse")]
        System.Threading.Tasks.Task<int> AddCaseAsync(SureNkap.EsameService.Expertises exp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/GetAllCases", ReplyAction="http://tempuri.org/IExpertises/GetAllCasesResponse")]
        SureNkap.EsameService.CaseViewModel[] GetAllCases(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/GetAllCases", ReplyAction="http://tempuri.org/IExpertises/GetAllCasesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.CaseViewModel[]> GetAllCasesAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/GetAllDemandes", ReplyAction="http://tempuri.org/IExpertises/GetAllDemandesResponse")]
        SureNkap.EsameService.CaseViewModel[] GetAllDemandes(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/GetAllDemandes", ReplyAction="http://tempuri.org/IExpertises/GetAllDemandesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.CaseViewModel[]> GetAllDemandesAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CloseCase", ReplyAction="http://tempuri.org/IExpertises/CloseCaseResponse")]
        void CloseCase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CloseCase", ReplyAction="http://tempuri.org/IExpertises/CloseCaseResponse")]
        System.Threading.Tasks.Task CloseCaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CreateCaseResponse", ReplyAction="http://tempuri.org/IExpertises/CreateCaseResponseResponse")]
        void CreateCaseResponse(int id, string response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CreateCaseResponse", ReplyAction="http://tempuri.org/IExpertises/CreateCaseResponseResponse")]
        System.Threading.Tasks.Task CreateCaseResponseAsync(int id, string response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CaseSharefile", ReplyAction="http://tempuri.org/IExpertises/CaseSharefileResponse")]
        void CaseSharefile(SureNkap.EsameService.ExpertiseFiles file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CaseSharefile", ReplyAction="http://tempuri.org/IExpertises/CaseSharefileResponse")]
        System.Threading.Tasks.Task CaseSharefileAsync(SureNkap.EsameService.ExpertiseFiles file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CaseRemoveFile", ReplyAction="http://tempuri.org/IExpertises/CaseRemoveFileResponse")]
        void CaseRemoveFile(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CaseRemoveFile", ReplyAction="http://tempuri.org/IExpertises/CaseRemoveFileResponse")]
        System.Threading.Tasks.Task CaseRemoveFileAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CaseSharedfiles", ReplyAction="http://tempuri.org/IExpertises/CaseSharedfilesResponse")]
        SureNkap.EsameService.FilesViewModel[] CaseSharedfiles(int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CaseSharedfiles", ReplyAction="http://tempuri.org/IExpertises/CaseSharedfilesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> CaseSharedfilesAsync(int caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CreateExpertise", ReplyAction="http://tempuri.org/IExpertises/CreateExpertiseResponse")]
        int CreateExpertise(SureNkap.EsameService.Expertises e, string fileIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpertises/CreateExpertise", ReplyAction="http://tempuri.org/IExpertises/CreateExpertiseResponse")]
        System.Threading.Tasks.Task<int> CreateExpertiseAsync(SureNkap.EsameService.Expertises e, string fileIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetFileByFileId", ReplyAction="http://tempuri.org/IFileService/_GetFileByFileIdResponse")]
        SureNkap.EsameService.Fichiers _GetFileByFileId(string fileId, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetFileByFileId", ReplyAction="http://tempuri.org/IFileService/_GetFileByFileIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers> _GetFileByFileIdAsync(string fileId, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetAllPatientFiles", ReplyAction="http://tempuri.org/IFileService/_GetAllPatientFilesResponse")]
        SureNkap.EsameService.Fichiers[] _GetAllPatientFiles(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetAllPatientFiles", ReplyAction="http://tempuri.org/IFileService/_GetAllPatientFilesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers[]> _GetAllPatientFilesAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetFileById", ReplyAction="http://tempuri.org/IFileService/_GetFileByIdResponse")]
        SureNkap.EsameService.Fichiers _GetFileById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetFileById", ReplyAction="http://tempuri.org/IFileService/_GetFileByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers> _GetFileByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_AddFile", ReplyAction="http://tempuri.org/IFileService/_AddFileResponse")]
        void _AddFile(SureNkap.EsameService.Fichiers f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_AddFile", ReplyAction="http://tempuri.org/IFileService/_AddFileResponse")]
        System.Threading.Tasks.Task _AddFileAsync(SureNkap.EsameService.Fichiers f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_DeleteFile", ReplyAction="http://tempuri.org/IFileService/_DeleteFileResponse")]
        void _DeleteFile(int id, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_DeleteFile", ReplyAction="http://tempuri.org/IFileService/_DeleteFileResponse")]
        System.Threading.Tasks.Task _DeleteFileAsync(int id, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_ShareFiles", ReplyAction="http://tempuri.org/IFileService/_ShareFilesResponse")]
        void _ShareFiles(int medecinId, int patientId, string[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_ShareFiles", ReplyAction="http://tempuri.org/IFileService/_ShareFilesResponse")]
        System.Threading.Tasks.Task _ShareFilesAsync(int medecinId, int patientId, string[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_StopShare", ReplyAction="http://tempuri.org/IFileService/_StopShareResponse")]
        void _StopShare(int fileId, int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_StopShare", ReplyAction="http://tempuri.org/IFileService/_StopShareResponse")]
        System.Threading.Tasks.Task _StopShareAsync(int fileId, int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetSharedFiles", ReplyAction="http://tempuri.org/IFileService/_GetSharedFilesResponse")]
        SureNkap.EsameService.FilesViewModel[] _GetSharedFiles(int med, int pat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetSharedFiles", ReplyAction="http://tempuri.org/IFileService/_GetSharedFilesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> _GetSharedFilesAsync(int med, int pat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_AddFileReport", ReplyAction="http://tempuri.org/IFileService/_AddFileReportResponse")]
        void _AddFileReport(int id, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_AddFileReport", ReplyAction="http://tempuri.org/IFileService/_AddFileReportResponse")]
        System.Threading.Tasks.Task _AddFileReportAsync(int id, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UpdateFilePath", ReplyAction="http://tempuri.org/IFileService/UpdateFilePathResponse")]
        void UpdateFilePath(int fileId, string path, SureNkap.EsameService.Fichiers.FilesType typ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UpdateFilePath", ReplyAction="http://tempuri.org/IFileService/UpdateFilePathResponse")]
        System.Threading.Tasks.Task UpdateFilePathAsync(int fileId, string path, SureNkap.EsameService.Fichiers.FilesType typ);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/CreateTask", ReplyAction="http://tempuri.org/IFileService/CreateTaskResponse")]
        SureNkap.EsameService.FileTask CreateTask(SureNkap.EsameService.FileTask t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/CreateTask", ReplyAction="http://tempuri.org/IFileService/CreateTaskResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FileTask> CreateTaskAsync(SureNkap.EsameService.FileTask t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DeleteTask", ReplyAction="http://tempuri.org/IFileService/DeleteTaskResponse")]
        void DeleteTask(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/DeleteTask", ReplyAction="http://tempuri.org/IFileService/DeleteTaskResponse")]
        System.Threading.Tasks.Task DeleteTaskAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetAllFileTasks", ReplyAction="http://tempuri.org/IFileService/_GetAllFileTasksResponse")]
        SureNkap.EsameService.FileTask[] _GetAllFileTasks(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetAllFileTasks", ReplyAction="http://tempuri.org/IFileService/_GetAllFileTasksResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FileTask[]> _GetAllFileTasksAsync(int uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/SetStatus", ReplyAction="http://tempuri.org/IFileService/SetStatusResponse")]
        void SetStatus(int id, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/SetStatus", ReplyAction="http://tempuri.org/IFileService/SetStatusResponse")]
        System.Threading.Tasks.Task SetStatusAsync(int id, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetFileTaskById", ReplyAction="http://tempuri.org/IFileService/_GetFileTaskByIdResponse")]
        SureNkap.EsameService.FileTask _GetFileTaskById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/_GetFileTaskById", ReplyAction="http://tempuri.org/IFileService/_GetFileTaskByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FileTask> _GetFileTaskByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetFileTask", ReplyAction="http://tempuri.org/IFileService/GetFileTaskResponse")]
        SureNkap.EsameService.FileTask GetFileTask(int patientId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetFileTask", ReplyAction="http://tempuri.org/IFileService/GetFileTaskResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FileTask> GetFileTaskAsync(int patientId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UpdateTask", ReplyAction="http://tempuri.org/IFileService/UpdateTaskResponse")]
        bool UpdateTask(SureNkap.EsameService.FileTask task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/UpdateTask", ReplyAction="http://tempuri.org/IFileService/UpdateTaskResponse")]
        System.Threading.Tasks.Task<bool> UpdateTaskAsync(SureNkap.EsameService.FileTask task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetFileAccessStatus", ReplyAction="http://tempuri.org/IFileService/GetFileAccessStatusResponse")]
        SureNkap.EsameService.FileAccessStatus[] GetFileAccessStatus(int fileId, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetFileAccessStatus", ReplyAction="http://tempuri.org/IFileService/GetFileAccessStatusResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FileAccessStatus[]> GetFileAccessStatusAsync(int fileId, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetCompteRendus", ReplyAction="http://tempuri.org/IFileService/GetCompteRendusResponse")]
        SureNkap.EsameService.Fichiers[] GetCompteRendus(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetCompteRendus", ReplyAction="http://tempuri.org/IFileService/GetCompteRendusResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers[]> GetCompteRendusAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/CreateConsultation", ReplyAction="http://tempuri.org/IConsultationService/CreateConsultationResponse")]
        SureNkap.EsameService.Consultations CreateConsultation(SureNkap.EsameService.Consultations c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/CreateConsultation", ReplyAction="http://tempuri.org/IConsultationService/CreateConsultationResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Consultations> CreateConsultationAsync(SureNkap.EsameService.Consultations c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetListConsultationsPerPatient", ReplyAction="http://tempuri.org/IConsultationService/GetListConsultationsPerPatientResponse")]
        SureNkap.EsameService.ConsultationViewModel[] GetListConsultationsPerPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetListConsultationsPerPatient", ReplyAction="http://tempuri.org/IConsultationService/GetListConsultationsPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ConsultationViewModel[]> GetListConsultationsPerPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetListConsultationsPerMedecin", ReplyAction="http://tempuri.org/IConsultationService/GetListConsultationsPerMedecinResponse")]
        SureNkap.EsameService.ConsultationViewModel[] GetListConsultationsPerMedecin(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetListConsultationsPerMedecin", ReplyAction="http://tempuri.org/IConsultationService/GetListConsultationsPerMedecinResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ConsultationViewModel[]> GetListConsultationsPerMedecinAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetConsultationById", ReplyAction="http://tempuri.org/IConsultationService/GetConsultationByIdResponse")]
        SureNkap.EsameService.Consultations GetConsultationById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetConsultationById", ReplyAction="http://tempuri.org/IConsultationService/GetConsultationByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Consultations> GetConsultationByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetConsultationByRef", ReplyAction="http://tempuri.org/IConsultationService/GetConsultationByRefResponse")]
        SureNkap.EsameService.Consultations GetConsultationByRef(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetConsultationByRef", ReplyAction="http://tempuri.org/IConsultationService/GetConsultationByRefResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Consultations> GetConsultationByRefAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeleteConsultation", ReplyAction="http://tempuri.org/IConsultationService/DeleteConsultationResponse")]
        bool DeleteConsultation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeleteConsultation", ReplyAction="http://tempuri.org/IConsultationService/DeleteConsultationResponse")]
        System.Threading.Tasks.Task<bool> DeleteConsultationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_PrintReport", ReplyAction="http://tempuri.org/IConsultationService/_PrintReportResponse")]
        SureNkap.EsameService.PrintReportViewModel _PrintReport(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_PrintReport", ReplyAction="http://tempuri.org/IConsultationService/_PrintReportResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.PrintReportViewModel> _PrintReportAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetListConsultations", ReplyAction="http://tempuri.org/IConsultationService/GetListConsultationsResponse")]
        SureNkap.EsameService.Consultations[] GetListConsultations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetListConsultations", ReplyAction="http://tempuri.org/IConsultationService/GetListConsultationsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Consultations[]> GetListConsultationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_SetConference", ReplyAction="http://tempuri.org/IConsultationService/_SetConferenceResponse")]
        void _SetConference(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_SetConference", ReplyAction="http://tempuri.org/IConsultationService/_SetConferenceResponse")]
        System.Threading.Tasks.Task _SetConferenceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/AddMessage", ReplyAction="http://tempuri.org/IConsultationService/AddMessageResponse")]
        void AddMessage(SureNkap.EsameService.Messages m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/AddMessage", ReplyAction="http://tempuri.org/IConsultationService/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(SureNkap.EsameService.Messages m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeleteMessage", ReplyAction="http://tempuri.org/IConsultationService/DeleteMessageResponse")]
        void DeleteMessage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeleteMessage", ReplyAction="http://tempuri.org/IConsultationService/DeleteMessageResponse")]
        System.Threading.Tasks.Task DeleteMessageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_GetAllMessagesByConsultationId", ReplyAction="http://tempuri.org/IConsultationService/_GetAllMessagesByConsultationIdResponse")]
        SureNkap.EsameService.Messages[] _GetAllMessagesByConsultationId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_GetAllMessagesByConsultationId", ReplyAction="http://tempuri.org/IConsultationService/_GetAllMessagesByConsultationIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Messages[]> _GetAllMessagesByConsultationIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_GetAllMessagesByUser", ReplyAction="http://tempuri.org/IConsultationService/_GetAllMessagesByUserResponse")]
        SureNkap.EsameService.Messages[] _GetAllMessagesByUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/_GetAllMessagesByUser", ReplyAction="http://tempuri.org/IConsultationService/_GetAllMessagesByUserResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Messages[]> _GetAllMessagesByUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/CreateNote", ReplyAction="http://tempuri.org/IConsultationService/CreateNoteResponse")]
        bool CreateNote(int consultationId, int UserId, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/CreateNote", ReplyAction="http://tempuri.org/IConsultationService/CreateNoteResponse")]
        System.Threading.Tasks.Task<bool> CreateNoteAsync(int consultationId, int UserId, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeleteNote", ReplyAction="http://tempuri.org/IConsultationService/DeleteNoteResponse")]
        bool DeleteNote(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/DeleteNote", ReplyAction="http://tempuri.org/IConsultationService/DeleteNoteResponse")]
        System.Threading.Tasks.Task<bool> DeleteNoteAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetAllNotes", ReplyAction="http://tempuri.org/IConsultationService/GetAllNotesResponse")]
        SureNkap.EsameService.Notes[] GetAllNotes(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetAllNotes", ReplyAction="http://tempuri.org/IConsultationService/GetAllNotesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Notes[]> GetAllNotesAsync(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetSharedFilesOnConsultation", ReplyAction="http://tempuri.org/IConsultationService/GetSharedFilesOnConsultationResponse")]
        SureNkap.EsameService.FilesViewModel[] GetSharedFilesOnConsultation(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/GetSharedFilesOnConsultation", ReplyAction="http://tempuri.org/IConsultationService/GetSharedFilesOnConsultationResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> GetSharedFilesOnConsultationAsync(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/AddFileToConsultation", ReplyAction="http://tempuri.org/IConsultationService/AddFileToConsultationResponse")]
        void AddFileToConsultation(SureNkap.EsameService.ConsultationFiles file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/AddFileToConsultation", ReplyAction="http://tempuri.org/IConsultationService/AddFileToConsultationResponse")]
        System.Threading.Tasks.Task AddFileToConsultationAsync(SureNkap.EsameService.ConsultationFiles file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/RemoveFileOnConsultation", ReplyAction="http://tempuri.org/IConsultationService/RemoveFileOnConsultationResponse")]
        void RemoveFileOnConsultation(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/RemoveFileOnConsultation", ReplyAction="http://tempuri.org/IConsultationService/RemoveFileOnConsultationResponse")]
        System.Threading.Tasks.Task RemoveFileOnConsultationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/UpdateConsultation", ReplyAction="http://tempuri.org/IConsultationService/UpdateConsultationResponse")]
        bool UpdateConsultation(SureNkap.EsameService.Consultations upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/UpdateConsultation", ReplyAction="http://tempuri.org/IConsultationService/UpdateConsultationResponse")]
        System.Threading.Tasks.Task<bool> UpdateConsultationAsync(SureNkap.EsameService.Consultations upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/CountAllConsultation", ReplyAction="http://tempuri.org/IConsultationService/CountAllConsultationResponse")]
        int CountAllConsultation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultationService/CountAllConsultation", ReplyAction="http://tempuri.org/IConsultationService/CountAllConsultationResponse")]
        System.Threading.Tasks.Task<int> CountAllConsultationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetListBilanPerConsultation", ReplyAction="http://tempuri.org/IBilanService/GetListBilanPerConsultationResponse")]
        SureNkap.EsameService.BilanViewModel[] GetListBilanPerConsultation(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetListBilanPerConsultation", ReplyAction="http://tempuri.org/IBilanService/GetListBilanPerConsultationResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.BilanViewModel[]> GetListBilanPerConsultationAsync(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/CreateBilan", ReplyAction="http://tempuri.org/IBilanService/CreateBilanResponse")]
        void CreateBilan(SureNkap.EsameService.Bilans b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/CreateBilan", ReplyAction="http://tempuri.org/IBilanService/CreateBilanResponse")]
        System.Threading.Tasks.Task CreateBilanAsync(SureNkap.EsameService.Bilans b);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBilanService/DeleteBilan")]
        void DeleteBilan(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IBilanService/DeleteBilan")]
        System.Threading.Tasks.Task DeleteBilanAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetBilanById", ReplyAction="http://tempuri.org/IBilanService/GetBilanByIdResponse")]
        SureNkap.EsameService.Bilans GetBilanById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetBilanById", ReplyAction="http://tempuri.org/IBilanService/GetBilanByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Bilans> GetBilanByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetListBilansPerPatient", ReplyAction="http://tempuri.org/IBilanService/GetListBilansPerPatientResponse")]
        SureNkap.EsameService.BilanViewModel[] GetListBilansPerPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetListBilansPerPatient", ReplyAction="http://tempuri.org/IBilanService/GetListBilansPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.BilanViewModel[]> GetListBilansPerPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/UpdateBilan", ReplyAction="http://tempuri.org/IBilanService/UpdateBilanResponse")]
        bool UpdateBilan(SureNkap.EsameService.Bilans upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/UpdateBilan", ReplyAction="http://tempuri.org/IBilanService/UpdateBilanResponse")]
        System.Threading.Tasks.Task<bool> UpdateBilanAsync(SureNkap.EsameService.Bilans upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetBilanAsPdf", ReplyAction="http://tempuri.org/IBilanService/GetBilanAsPdfResponse")]
        SureNkap.EsameService.BilanPrintViewModel GetBilanAsPdf(int patientId, int medecinId, string[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBilanService/GetBilanAsPdf", ReplyAction="http://tempuri.org/IBilanService/GetBilanAsPdfResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.BilanPrintViewModel> GetBilanAsPdfAsync(int patientId, int medecinId, string[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_AddCertfificat", ReplyAction="http://tempuri.org/ICertificatService/_AddCertfificatResponse")]
        void _AddCertfificat(SureNkap.EsameService.Certificats c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_AddCertfificat", ReplyAction="http://tempuri.org/ICertificatService/_AddCertfificatResponse")]
        System.Threading.Tasks.Task _AddCertfificatAsync(SureNkap.EsameService.Certificats c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_GetAllCertificatPerConsultations", ReplyAction="http://tempuri.org/ICertificatService/_GetAllCertificatPerConsultationsResponse")]
        SureNkap.EsameService.Certificats[] _GetAllCertificatPerConsultations(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_GetAllCertificatPerConsultations", ReplyAction="http://tempuri.org/ICertificatService/_GetAllCertificatPerConsultationsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Certificats[]> _GetAllCertificatPerConsultationsAsync(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_PrintCertificat", ReplyAction="http://tempuri.org/ICertificatService/_PrintCertificatResponse")]
        SureNkap.EsameService.CertificatsPrintModel _PrintCertificat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_PrintCertificat", ReplyAction="http://tempuri.org/ICertificatService/_PrintCertificatResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.CertificatsPrintModel> _PrintCertificatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_DeleteCertificat", ReplyAction="http://tempuri.org/ICertificatService/_DeleteCertificatResponse")]
        void _DeleteCertificat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICertificatService/_DeleteCertificat", ReplyAction="http://tempuri.org/ICertificatService/_DeleteCertificatResponse")]
        System.Threading.Tasks.Task _DeleteCertificatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/_AssignTaskOnFolder", ReplyAction="http://tempuri.org/IPatientService/_AssignTaskOnFolderResponse")]
        void _AssignTaskOnFolder(int patientId, int to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/_AssignTaskOnFolder", ReplyAction="http://tempuri.org/IPatientService/_AssignTaskOnFolderResponse")]
        System.Threading.Tasks.Task _AssignTaskOnFolderAsync(int patientId, int to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreatePatient", ReplyAction="http://tempuri.org/IPatientService/CreatePatientResponse")]
        void CreatePatient(SureNkap.EsameService.Patients p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreatePatient", ReplyAction="http://tempuri.org/IPatientService/CreatePatientResponse")]
        System.Threading.Tasks.Task CreatePatientAsync(SureNkap.EsameService.Patients p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetSysPatients", ReplyAction="http://tempuri.org/IPatientService/GetSysPatientsResponse")]
        SureNkap.EsameService.Patients[] GetSysPatients(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetSysPatients", ReplyAction="http://tempuri.org/IPatientService/GetSysPatientsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Patients[]> GetSysPatientsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetInvitations", ReplyAction="http://tempuri.org/IPatientService/GetInvitationsResponse")]
        SureNkap.EsameService.Patients[] GetInvitations(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetInvitations", ReplyAction="http://tempuri.org/IPatientService/GetInvitationsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Patients[]> GetInvitationsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPendingInvitations", ReplyAction="http://tempuri.org/IPatientService/GetPendingInvitationsResponse")]
        SureNkap.EsameService.Medecins[] GetPendingInvitations(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPendingInvitations", ReplyAction="http://tempuri.org/IPatientService/GetPendingInvitationsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetPendingInvitationsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreateBillingAddress", ReplyAction="http://tempuri.org/IPatientService/CreateBillingAddressResponse")]
        SureNkap.EsameService.BillingAdress CreateBillingAddress(SureNkap.EsameService.BillingAdress adr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreateBillingAddress", ReplyAction="http://tempuri.org/IPatientService/CreateBillingAddressResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.BillingAdress> CreateBillingAddressAsync(SureNkap.EsameService.BillingAdress adr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetListBillingAddresses", ReplyAction="http://tempuri.org/IPatientService/GetListBillingAddressesResponse")]
        SureNkap.EsameService.BillingAdress[] GetListBillingAddresses(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetListBillingAddresses", ReplyAction="http://tempuri.org/IPatientService/GetListBillingAddressesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.BillingAdress[]> GetListBillingAddressesAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdateBillingAddress", ReplyAction="http://tempuri.org/IPatientService/UpdateBillingAddressResponse")]
        void UpdateBillingAddress(SureNkap.EsameService.BillingAdress adr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdateBillingAddress", ReplyAction="http://tempuri.org/IPatientService/UpdateBillingAddressResponse")]
        System.Threading.Tasks.Task UpdateBillingAddressAsync(SureNkap.EsameService.BillingAdress adr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetBillingAddressById", ReplyAction="http://tempuri.org/IPatientService/GetBillingAddressByIdResponse")]
        SureNkap.EsameService.BillingAdress GetBillingAddressById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetBillingAddressById", ReplyAction="http://tempuri.org/IPatientService/GetBillingAddressByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.BillingAdress> GetBillingAddressByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreateMedecinTraitant", ReplyAction="http://tempuri.org/IPatientService/CreateMedecinTraitantResponse")]
        void CreateMedecinTraitant(SureNkap.EsameService.MedecinsTraitants mt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreateMedecinTraitant", ReplyAction="http://tempuri.org/IPatientService/CreateMedecinTraitantResponse")]
        System.Threading.Tasks.Task CreateMedecinTraitantAsync(SureNkap.EsameService.MedecinsTraitants mt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetListMedecinsTraitants", ReplyAction="http://tempuri.org/IPatientService/GetListMedecinsTraitantsResponse")]
        SureNkap.EsameService.MedecinsTraitants[] GetListMedecinsTraitants(int patientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetListMedecinsTraitants", ReplyAction="http://tempuri.org/IPatientService/GetListMedecinsTraitantsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.MedecinsTraitants[]> GetListMedecinsTraitantsAsync(int patientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/DeleteMedecinTraitant", ReplyAction="http://tempuri.org/IPatientService/DeleteMedecinTraitantResponse")]
        void DeleteMedecinTraitant(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/DeleteMedecinTraitant", ReplyAction="http://tempuri.org/IPatientService/DeleteMedecinTraitantResponse")]
        System.Threading.Tasks.Task DeleteMedecinTraitantAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientById", ReplyAction="http://tempuri.org/IPatientService/GetPatientByIdResponse")]
        SureNkap.EsameService.Patients GetPatientById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientById", ReplyAction="http://tempuri.org/IPatientService/GetPatientByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Patients> GetPatientByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetListPatients", ReplyAction="http://tempuri.org/IPatientService/GetListPatientsResponse")]
        SureNkap.EsameService.Patients[] GetListPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetListPatients", ReplyAction="http://tempuri.org/IPatientService/GetListPatientsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Patients[]> GetListPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatient", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientResponse")]
        bool UpdatePatient(SureNkap.EsameService.Patients upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatient", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientResponse")]
        System.Threading.Tasks.Task<bool> UpdatePatientAsync(SureNkap.EsameService.Patients upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CountAllPatients", ReplyAction="http://tempuri.org/IPatientService/CountAllPatientsResponse")]
        int CountAllPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CountAllPatients", ReplyAction="http://tempuri.org/IPatientService/CountAllPatientsResponse")]
        System.Threading.Tasks.Task<int> CountAllPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/CountAllMedecins", ReplyAction="http://tempuri.org/IMedecinService/CountAllMedecinsResponse")]
        int CountAllMedecins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/CountAllMedecins", ReplyAction="http://tempuri.org/IMedecinService/CountAllMedecinsResponse")]
        System.Threading.Tasks.Task<int> CountAllMedecinsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetSysMedecins", ReplyAction="http://tempuri.org/IMedecinService/GetSysMedecinsResponse")]
        SureNkap.EsameService.Medecins[] GetSysMedecins(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetSysMedecins", ReplyAction="http://tempuri.org/IMedecinService/GetSysMedecinsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetSysMedecinsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/AutoCompleteListMedecins", ReplyAction="http://tempuri.org/IMedecinService/AutoCompleteListMedecinsResponse")]
        SureNkap.EsameService.Medecins[] AutoCompleteListMedecins(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/AutoCompleteListMedecins", ReplyAction="http://tempuri.org/IMedecinService/AutoCompleteListMedecinsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> AutoCompleteListMedecinsAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetTransactionHistory", ReplyAction="http://tempuri.org/IMedecinService/GetTransactionHistoryResponse")]
        SureNkap.EsameService.OperationDto[] GetTransactionHistory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetTransactionHistory", ReplyAction="http://tempuri.org/IMedecinService/GetTransactionHistoryResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OperationDto[]> GetTransactionHistoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetTransactionHistoryByPeriod", ReplyAction="http://tempuri.org/IMedecinService/GetTransactionHistoryByPeriodResponse")]
        SureNkap.EsameService.OperationDto[] GetTransactionHistoryByPeriod(int id, System.DateTime from, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetTransactionHistoryByPeriod", ReplyAction="http://tempuri.org/IMedecinService/GetTransactionHistoryByPeriodResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OperationDto[]> GetTransactionHistoryByPeriodAsync(int id, System.DateTime from, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/CompleteTaskOnFolder", ReplyAction="http://tempuri.org/IMedecinService/CompleteTaskOnFolderResponse")]
        void CompleteTaskOnFolder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/CompleteTaskOnFolder", ReplyAction="http://tempuri.org/IMedecinService/CompleteTaskOnFolderResponse")]
        System.Threading.Tasks.Task CompleteTaskOnFolderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetAllDossierRegistrationRequests", ReplyAction="http://tempuri.org/IMedecinService/GetAllDossierRegistrationRequestsResponse")]
        SureNkap.EsameService.DossierRequestViewModel[] GetAllDossierRegistrationRequests(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetAllDossierRegistrationRequests", ReplyAction="http://tempuri.org/IMedecinService/GetAllDossierRegistrationRequestsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DossierRequestViewModel[]> GetAllDossierRegistrationRequestsAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/AddToSubscriptionGroup", ReplyAction="http://tempuri.org/IMedecinService/AddToSubscriptionGroupResponse")]
        void AddToSubscriptionGroup(int medecinId, int abonnementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/AddToSubscriptionGroup", ReplyAction="http://tempuri.org/IMedecinService/AddToSubscriptionGroupResponse")]
        System.Threading.Tasks.Task AddToSubscriptionGroupAsync(int medecinId, int abonnementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetRendezVousCabinet", ReplyAction="http://tempuri.org/IMedecinService/GetRendezVousCabinetResponse")]
        SureNkap.EsameService.AppointementViewModel[] GetRendezVousCabinet(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetRendezVousCabinet", ReplyAction="http://tempuri.org/IMedecinService/GetRendezVousCabinetResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.AppointementViewModel[]> GetRendezVousCabinetAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/UpdateMedecin", ReplyAction="http://tempuri.org/IMedecinService/UpdateMedecinResponse")]
        void UpdateMedecin(SureNkap.EsameService.Medecins m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/UpdateMedecin", ReplyAction="http://tempuri.org/IMedecinService/UpdateMedecinResponse")]
        System.Threading.Tasks.Task UpdateMedecinAsync(SureNkap.EsameService.Medecins m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetMedecinById", ReplyAction="http://tempuri.org/IMedecinService/GetMedecinByIdResponse")]
        SureNkap.EsameService.Medecins GetMedecinById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetMedecinById", ReplyAction="http://tempuri.org/IMedecinService/GetMedecinByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Medecins> GetMedecinByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetListMedecins", ReplyAction="http://tempuri.org/IMedecinService/GetListMedecinsResponse")]
        SureNkap.EsameService.Medecins[] GetListMedecins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedecinService/GetListMedecins", ReplyAction="http://tempuri.org/IMedecinService/GetListMedecinsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetListMedecinsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CreateOrdonnance", ReplyAction="http://tempuri.org/IPrescriptionService/CreateOrdonnanceResponse")]
        int CreateOrdonnance(SureNkap.EsameService.Ordonnances o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CreateOrdonnance", ReplyAction="http://tempuri.org/IPrescriptionService/CreateOrdonnanceResponse")]
        System.Threading.Tasks.Task<int> CreateOrdonnanceAsync(SureNkap.EsameService.Ordonnances o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CreatePrescription", ReplyAction="http://tempuri.org/IPrescriptionService/CreatePrescriptionResponse")]
        void CreatePrescription(SureNkap.EsameService.Prescriptions p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CreatePrescription", ReplyAction="http://tempuri.org/IPrescriptionService/CreatePrescriptionResponse")]
        System.Threading.Tasks.Task CreatePrescriptionAsync(SureNkap.EsameService.Prescriptions p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetPrescriptionById", ReplyAction="http://tempuri.org/IPrescriptionService/GetPrescriptionByIdResponse")]
        SureNkap.EsameService.Prescriptions GetPrescriptionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetPrescriptionById", ReplyAction="http://tempuri.org/IPrescriptionService/GetPrescriptionByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prescriptions> GetPrescriptionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/DeletePrescription", ReplyAction="http://tempuri.org/IPrescriptionService/DeletePrescriptionResponse")]
        bool DeletePrescription(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/DeletePrescription", ReplyAction="http://tempuri.org/IPrescriptionService/DeletePrescriptionResponse")]
        System.Threading.Tasks.Task<bool> DeletePrescriptionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/UpdatePrescription", ReplyAction="http://tempuri.org/IPrescriptionService/UpdatePrescriptionResponse")]
        bool UpdatePrescription(SureNkap.EsameService.Prescriptions upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/UpdatePrescription", ReplyAction="http://tempuri.org/IPrescriptionService/UpdatePrescriptionResponse")]
        System.Threading.Tasks.Task<bool> UpdatePrescriptionAsync(SureNkap.EsameService.Prescriptions upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetAllPrescriptionsPerPatient", ReplyAction="http://tempuri.org/IPrescriptionService/GetAllPrescriptionsPerPatientResponse")]
        SureNkap.EsameService.Prescriptions[] GetAllPrescriptionsPerPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetAllPrescriptionsPerPatient", ReplyAction="http://tempuri.org/IPrescriptionService/GetAllPrescriptionsPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prescriptions[]> GetAllPrescriptionsPerPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetOrdonnanceAsPdf", ReplyAction="http://tempuri.org/IPrescriptionService/GetOrdonnanceAsPdfResponse")]
        SureNkap.EsameService.OrdonnancePrintViewModel GetOrdonnanceAsPdf(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetOrdonnanceAsPdf", ReplyAction="http://tempuri.org/IPrescriptionService/GetOrdonnanceAsPdfResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrdonnancePrintViewModel> GetOrdonnanceAsPdfAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetPrescriptionsPerConsultation", ReplyAction="http://tempuri.org/IPrescriptionService/GetPrescriptionsPerConsultationResponse")]
        SureNkap.EsameService.Prescriptions[] GetPrescriptionsPerConsultation(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/GetPrescriptionsPerConsultation", ReplyAction="http://tempuri.org/IPrescriptionService/GetPrescriptionsPerConsultationResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prescriptions[]> GetPrescriptionsPerConsultationAsync(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CreateOrdDetails", ReplyAction="http://tempuri.org/IPrescriptionService/CreateOrdDetailsResponse")]
        void CreateOrdDetails(SureNkap.EsameService.OrdonnanceDetails det);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CreateOrdDetails", ReplyAction="http://tempuri.org/IPrescriptionService/CreateOrdDetailsResponse")]
        System.Threading.Tasks.Task CreateOrdDetailsAsync(SureNkap.EsameService.OrdonnanceDetails det);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CountAllOrdonnances", ReplyAction="http://tempuri.org/IPrescriptionService/CountAllOrdonnancesResponse")]
        int CountAllOrdonnances();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrescriptionService/CountAllOrdonnances", ReplyAction="http://tempuri.org/IPrescriptionService/CountAllOrdonnancesResponse")]
        System.Threading.Tasks.Task<int> CountAllOrdonnancesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetAllAppointementsPerPatient", ReplyAction="http://tempuri.org/IDiaryService/_GetAllAppointementsPerPatientResponse")]
        SureNkap.EsameService.DiaryViewModel[] _GetAllAppointementsPerPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetAllAppointementsPerPatient", ReplyAction="http://tempuri.org/IDiaryService/_GetAllAppointementsPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetAllAppointementsPerPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetAllAppointementsPerMedecin", ReplyAction="http://tempuri.org/IDiaryService/_GetAllAppointementsPerMedecinResponse")]
        SureNkap.EsameService.DiaryViewModel[] _GetAllAppointementsPerMedecin(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetAllAppointementsPerMedecin", ReplyAction="http://tempuri.org/IDiaryService/_GetAllAppointementsPerMedecinResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetAllAppointementsPerMedecinAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetAppointement", ReplyAction="http://tempuri.org/IDiaryService/_GetAppointementResponse")]
        SureNkap.EsameService.DiaryViewModel _GetAppointement(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetAppointement", ReplyAction="http://tempuri.org/IDiaryService/_GetAppointementResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel> _GetAppointementAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetFreePeriods", ReplyAction="http://tempuri.org/IDiaryService/_GetFreePeriodsResponse")]
        SureNkap.EsameService.DiaryViewModel[] _GetFreePeriods(int medecinId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetFreePeriods", ReplyAction="http://tempuri.org/IDiaryService/_GetFreePeriodsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetFreePeriodsAsync(int medecinId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetMedecinDiary", ReplyAction="http://tempuri.org/IDiaryService/_GetMedecinDiaryResponse")]
        SureNkap.EsameService.DiaryViewModel[] _GetMedecinDiary(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetMedecinDiary", ReplyAction="http://tempuri.org/IDiaryService/_GetMedecinDiaryResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetMedecinDiaryAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_AddFreePeriod", ReplyAction="http://tempuri.org/IDiaryService/_AddFreePeriodResponse")]
        bool _AddFreePeriod(SureNkap.EsameService.Periods p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_AddFreePeriod", ReplyAction="http://tempuri.org/IDiaryService/_AddFreePeriodResponse")]
        System.Threading.Tasks.Task<bool> _AddFreePeriodAsync(SureNkap.EsameService.Periods p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_DeleteFreePeriod", ReplyAction="http://tempuri.org/IDiaryService/_DeleteFreePeriodResponse")]
        void _DeleteFreePeriod(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_DeleteFreePeriod", ReplyAction="http://tempuri.org/IDiaryService/_DeleteFreePeriodResponse")]
        System.Threading.Tasks.Task _DeleteFreePeriodAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetPeriodById", ReplyAction="http://tempuri.org/IDiaryService/_GetPeriodByIdResponse")]
        SureNkap.EsameService.Periods _GetPeriodById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetPeriodById", ReplyAction="http://tempuri.org/IDiaryService/_GetPeriodByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Periods> _GetPeriodByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_BookAppointement", ReplyAction="http://tempuri.org/IDiaryService/_BookAppointementResponse")]
        void _BookAppointement(int id, int patientId, int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_BookAppointement", ReplyAction="http://tempuri.org/IDiaryService/_BookAppointementResponse")]
        System.Threading.Tasks.Task _BookAppointementAsync(int id, int patientId, int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_CancelAppointement", ReplyAction="http://tempuri.org/IDiaryService/_CancelAppointementResponse")]
        void _CancelAppointement(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_CancelAppointement", ReplyAction="http://tempuri.org/IDiaryService/_CancelAppointementResponse")]
        System.Threading.Tasks.Task _CancelAppointementAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_PostPoneAppointement", ReplyAction="http://tempuri.org/IDiaryService/_PostPoneAppointementResponse")]
        bool _PostPoneAppointement(int id, System.DateTime utcStart, System.DateTime utcEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_PostPoneAppointement", ReplyAction="http://tempuri.org/IDiaryService/_PostPoneAppointementResponse")]
        System.Threading.Tasks.Task<bool> _PostPoneAppointementAsync(int id, System.DateTime utcStart, System.DateTime utcEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_UpdateFreePeriod", ReplyAction="http://tempuri.org/IDiaryService/_UpdateFreePeriodResponse")]
        bool _UpdateFreePeriod(SureNkap.EsameService.Periods p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_UpdateFreePeriod", ReplyAction="http://tempuri.org/IDiaryService/_UpdateFreePeriodResponse")]
        System.Threading.Tasks.Task<bool> _UpdateFreePeriodAsync(SureNkap.EsameService.Periods p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_ReserveAndProcess", ReplyAction="http://tempuri.org/IDiaryService/_ReserveAndProcessResponse")]
        bool _ReserveAndProcess(int id, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_ReserveAndProcess", ReplyAction="http://tempuri.org/IDiaryService/_ReserveAndProcessResponse")]
        System.Threading.Tasks.Task<bool> _ReserveAndProcessAsync(int id, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_BookNewAppointement", ReplyAction="http://tempuri.org/IDiaryService/_BookNewAppointementResponse")]
        bool _BookNewAppointement(SureNkap.EsameService.Periods p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_BookNewAppointement", ReplyAction="http://tempuri.org/IDiaryService/_BookNewAppointementResponse")]
        System.Threading.Tasks.Task<bool> _BookNewAppointementAsync(SureNkap.EsameService.Periods p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetPeriod", ReplyAction="http://tempuri.org/IDiaryService/_GetPeriodResponse")]
        SureNkap.EsameService.PeriodViewModel _GetPeriod(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetPeriod", ReplyAction="http://tempuri.org/IDiaryService/_GetPeriodResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.PeriodViewModel> _GetPeriodAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetPeriodByConsultationId", ReplyAction="http://tempuri.org/IDiaryService/_GetPeriodByConsultationIdResponse")]
        SureNkap.EsameService.PeriodViewModel _GetPeriodByConsultationId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetPeriodByConsultationId", ReplyAction="http://tempuri.org/IDiaryService/_GetPeriodByConsultationIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.PeriodViewModel> _GetPeriodByConsultationIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetFreePeriodsOnDate", ReplyAction="http://tempuri.org/IDiaryService/_GetFreePeriodsOnDateResponse")]
        SureNkap.EsameService.Periods[] _GetFreePeriodsOnDate(System.DateTime dt, System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDiaryService/_GetFreePeriodsOnDate", ReplyAction="http://tempuri.org/IDiaryService/_GetFreePeriodsOnDateResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Periods[]> _GetFreePeriodsOnDateAsync(System.DateTime dt, System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCountries", ReplyAction="http://tempuri.org/IApplicationService/GetListCountriesResponse")]
        SureNkap.EsameService.Countries[] GetListCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCountries", ReplyAction="http://tempuri.org/IApplicationService/GetListCountriesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Countries[]> GetListCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCim10", ReplyAction="http://tempuri.org/IApplicationService/GetListCim10Response")]
        SureNkap.EsameService.Cim2015[] GetListCim10();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCim10", ReplyAction="http://tempuri.org/IApplicationService/GetListCim10Response")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Cim2015[]> GetListCim10Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetPriceById", ReplyAction="http://tempuri.org/IApplicationService/GetPriceByIdResponse")]
        SureNkap.EsameService.Prices GetPriceById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetPriceById", ReplyAction="http://tempuri.org/IApplicationService/GetPriceByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prices> GetPriceByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CreateCim10", ReplyAction="http://tempuri.org/IApplicationService/CreateCim10Response")]
        void CreateCim10(SureNkap.EsameService.Cim2015 s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CreateCim10", ReplyAction="http://tempuri.org/IApplicationService/CreateCim10Response")]
        System.Threading.Tasks.Task CreateCim10Async(SureNkap.EsameService.Cim2015 s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CountCim10", ReplyAction="http://tempuri.org/IApplicationService/CountCim10Response")]
        int CountCim10();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CountCim10", ReplyAction="http://tempuri.org/IApplicationService/CountCim10Response")]
        System.Threading.Tasks.Task<int> CountCim10Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListSymptomes", ReplyAction="http://tempuri.org/IApplicationService/GetListSymptomesResponse")]
        SureNkap.EsameService.Symptomes[] GetListSymptomes(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListSymptomes", ReplyAction="http://tempuri.org/IApplicationService/GetListSymptomesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Symptomes[]> GetListSymptomesAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListProducts", ReplyAction="http://tempuri.org/IApplicationService/GetListProductsResponse")]
        SureNkap.EsameService.ProductSettings[] GetListProducts(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListProducts", ReplyAction="http://tempuri.org/IApplicationService/GetListProductsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ProductSettings[]> GetListProductsAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/SearchSymptomes", ReplyAction="http://tempuri.org/IApplicationService/SearchSymptomesResponse")]
        SureNkap.EsameService.Symptomes[] SearchSymptomes(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/SearchSymptomes", ReplyAction="http://tempuri.org/IApplicationService/SearchSymptomesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Symptomes[]> SearchSymptomesAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/SearchSpecialties", ReplyAction="http://tempuri.org/IApplicationService/SearchSpecialtiesResponse")]
        SureNkap.EsameService.Specialites[] SearchSpecialties(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/SearchSpecialties", ReplyAction="http://tempuri.org/IApplicationService/SearchSpecialtiesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Specialites[]> SearchSpecialtiesAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetApplicationSettings", ReplyAction="http://tempuri.org/IApplicationService/GetApplicationSettingsResponse")]
        SureNkap.EsameService.ApplicationSettings GetApplicationSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetApplicationSettings", ReplyAction="http://tempuri.org/IApplicationService/GetApplicationSettingsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ApplicationSettings> GetApplicationSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCurrencies", ReplyAction="http://tempuri.org/IApplicationService/GetListCurrenciesResponse")]
        SureNkap.EsameService.DropList[] GetListCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCurrencies", ReplyAction="http://tempuri.org/IApplicationService/GetListCurrenciesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DropList[]> GetListCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListFormules", ReplyAction="http://tempuri.org/IApplicationService/GetListFormulesResponse")]
        SureNkap.EsameService.Formules[] GetListFormules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListFormules", ReplyAction="http://tempuri.org/IApplicationService/GetListFormulesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Formules[]> GetListFormulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListPeriodes", ReplyAction="http://tempuri.org/IApplicationService/GetListPeriodesResponse")]
        SureNkap.EsameService.Periodes[] GetListPeriodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListPeriodes", ReplyAction="http://tempuri.org/IApplicationService/GetListPeriodesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Periodes[]> GetListPeriodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetPrice", ReplyAction="http://tempuri.org/IApplicationService/GetPriceResponse")]
        SureNkap.EsameService.Prices GetPrice(int formuleId, int periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetPrice", ReplyAction="http://tempuri.org/IApplicationService/GetPriceResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prices> GetPriceAsync(int formuleId, int periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetFormuleById", ReplyAction="http://tempuri.org/IApplicationService/GetFormuleByIdResponse")]
        SureNkap.EsameService.FormuleViewModel GetFormuleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetFormuleById", ReplyAction="http://tempuri.org/IApplicationService/GetFormuleByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FormuleViewModel> GetFormuleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetAddOnById", ReplyAction="http://tempuri.org/IApplicationService/GetAddOnByIdResponse")]
        SureNkap.EsameService.ExtraServices GetAddOnById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetAddOnById", ReplyAction="http://tempuri.org/IApplicationService/GetAddOnByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ExtraServices> GetAddOnByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCountryCodes", ReplyAction="http://tempuri.org/IApplicationService/GetListCountryCodesResponse")]
        SureNkap.EsameService.CountryCodes[] GetListCountryCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListCountryCodes", ReplyAction="http://tempuri.org/IApplicationService/GetListCountryCodesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.CountryCodes[]> GetListCountryCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListPrices", ReplyAction="http://tempuri.org/IApplicationService/GetListPricesResponse")]
        SureNkap.EsameService.Prices[] GetListPrices(int formuleId, int periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetListPrices", ReplyAction="http://tempuri.org/IApplicationService/GetListPricesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prices[]> GetListPricesAsync(int formuleId, int periodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetServices", ReplyAction="http://tempuri.org/IApplicationService/GetServicesResponse")]
        SureNkap.EsameService.Services GetServices(int formuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetServices", ReplyAction="http://tempuri.org/IApplicationService/GetServicesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Services> GetServicesAsync(int formuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetAllPrices", ReplyAction="http://tempuri.org/IApplicationService/GetAllPricesResponse")]
        SureNkap.EsameService.Prices[] GetAllPrices(int formuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetAllPrices", ReplyAction="http://tempuri.org/IApplicationService/GetAllPricesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Prices[]> GetAllPricesAsync(int formuleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CreateExtraInfos", ReplyAction="http://tempuri.org/IApplicationService/CreateExtraInfosResponse")]
        void CreateExtraInfos(SureNkap.EsameService.GroupeExtraInfos info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/CreateExtraInfos", ReplyAction="http://tempuri.org/IApplicationService/CreateExtraInfosResponse")]
        System.Threading.Tasks.Task CreateExtraInfosAsync(SureNkap.EsameService.GroupeExtraInfos info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetExtraInfos", ReplyAction="http://tempuri.org/IApplicationService/GetExtraInfosResponse")]
        SureNkap.EsameService.EnterpriseExtraInfoViewModel GetExtraInfos(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplicationService/GetExtraInfos", ReplyAction="http://tempuri.org/IApplicationService/GetExtraInfosResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.EnterpriseExtraInfoViewModel> GetExtraInfosAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetAllInvoicesByPatient", ReplyAction="http://tempuri.org/IInvoiceService/GetAllInvoicesByPatientResponse")]
        SureNkap.EsameService.InvoiceDto[] GetAllInvoicesByPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetAllInvoicesByPatient", ReplyAction="http://tempuri.org/IInvoiceService/GetAllInvoicesByPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDto[]> GetAllInvoicesByPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/CreateInvoice", ReplyAction="http://tempuri.org/IInvoiceService/CreateInvoiceResponse")]
        void CreateInvoice(SureNkap.EsameService.Invoices inv, SureNkap.EsameService.InvoiceDetails[] details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/CreateInvoice", ReplyAction="http://tempuri.org/IInvoiceService/CreateInvoiceResponse")]
        System.Threading.Tasks.Task CreateInvoiceAsync(SureNkap.EsameService.Invoices inv, SureNkap.EsameService.InvoiceDetails[] details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/DeleteInvoice", ReplyAction="http://tempuri.org/IInvoiceService/DeleteInvoiceResponse")]
        void DeleteInvoice(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/DeleteInvoice", ReplyAction="http://tempuri.org/IInvoiceService/DeleteInvoiceResponse")]
        System.Threading.Tasks.Task DeleteInvoiceAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/CreateSettlement", ReplyAction="http://tempuri.org/IInvoiceService/CreateSettlementResponse")]
        void CreateSettlement(string invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/CreateSettlement", ReplyAction="http://tempuri.org/IInvoiceService/CreateSettlementResponse")]
        System.Threading.Tasks.Task CreateSettlementAsync(string invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetInvoiceById", ReplyAction="http://tempuri.org/IInvoiceService/GetInvoiceByIdResponse")]
        SureNkap.EsameService.InvoiceDto GetInvoiceById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetInvoiceById", ReplyAction="http://tempuri.org/IInvoiceService/GetInvoiceByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDto> GetInvoiceByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetInvoiceDetails", ReplyAction="http://tempuri.org/IInvoiceService/GetInvoiceDetailsResponse")]
        SureNkap.EsameService.InvoiceDetails[] GetInvoiceDetails(string invoiceId, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetInvoiceDetails", ReplyAction="http://tempuri.org/IInvoiceService/GetInvoiceDetailsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDetails[]> GetInvoiceDetailsAsync(string invoiceId, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetTransactions", ReplyAction="http://tempuri.org/IInvoiceService/GetTransactionsResponse")]
        decimal GetTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetTransactions", ReplyAction="http://tempuri.org/IInvoiceService/GetTransactionsResponse")]
        System.Threading.Tasks.Task<decimal> GetTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetAllPayments", ReplyAction="http://tempuri.org/IInvoiceService/GetAllPaymentsResponse")]
        SureNkap.EsameService.InvoiceDto[] GetAllPayments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/GetAllPayments", ReplyAction="http://tempuri.org/IInvoiceService/GetAllPaymentsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDto[]> GetAllPaymentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/TotalTransactions", ReplyAction="http://tempuri.org/IInvoiceService/TotalTransactionsResponse")]
        decimal TotalTransactions(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoiceService/TotalTransactions", ReplyAction="http://tempuri.org/IInvoiceService/TotalTransactionsResponse")]
        System.Threading.Tasks.Task<decimal> TotalTransactionsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/GetListParametresByDate", ReplyAction="http://tempuri.org/IParametreService/GetListParametresByDateResponse")]
        SureNkap.EsameService.Parametres[] GetListParametresByDate(string searchDate, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/GetListParametresByDate", ReplyAction="http://tempuri.org/IParametreService/GetListParametresByDateResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Parametres[]> GetListParametresByDateAsync(string searchDate, int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/GetParametreById", ReplyAction="http://tempuri.org/IParametreService/GetParametreByIdResponse")]
        SureNkap.EsameService.Parametres GetParametreById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/GetParametreById", ReplyAction="http://tempuri.org/IParametreService/GetParametreByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Parametres> GetParametreByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/GetListParametres", ReplyAction="http://tempuri.org/IParametreService/GetListParametresResponse")]
        SureNkap.EsameService.Parametres[] GetListParametres(int patientId, int t, string start, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/GetListParametres", ReplyAction="http://tempuri.org/IParametreService/GetListParametresResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Parametres[]> GetListParametresAsync(int patientId, int t, string start, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/CreateParametre", ReplyAction="http://tempuri.org/IParametreService/CreateParametreResponse")]
        void CreateParametre(SureNkap.EsameService.Parametres p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/CreateParametre", ReplyAction="http://tempuri.org/IParametreService/CreateParametreResponse")]
        System.Threading.Tasks.Task CreateParametreAsync(SureNkap.EsameService.Parametres p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/UpdateParametre", ReplyAction="http://tempuri.org/IParametreService/UpdateParametreResponse")]
        bool UpdateParametre(SureNkap.EsameService.Parametres p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParametreService/UpdateParametre", ReplyAction="http://tempuri.org/IParametreService/UpdateParametreResponse")]
        System.Threading.Tasks.Task<bool> UpdateParametreAsync(SureNkap.EsameService.Parametres p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/CreateAvis", ReplyAction="http://tempuri.org/IAvisService/CreateAvisResponse")]
        int CreateAvis(SureNkap.EsameService.AvisRequest a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/CreateAvis", ReplyAction="http://tempuri.org/IAvisService/CreateAvisResponse")]
        System.Threading.Tasks.Task<int> CreateAvisAsync(SureNkap.EsameService.AvisRequest a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/CreateAvisResp", ReplyAction="http://tempuri.org/IAvisService/CreateAvisRespResponse")]
        void CreateAvisResp(SureNkap.EsameService.AvisResponses response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/CreateAvisResp", ReplyAction="http://tempuri.org/IAvisService/CreateAvisRespResponse")]
        System.Threading.Tasks.Task CreateAvisRespAsync(SureNkap.EsameService.AvisResponses response);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetListAvisMedecins", ReplyAction="http://tempuri.org/IAvisService/GetListAvisMedecinsResponse")]
        SureNkap.EsameService.AvisRequestViewModel[] GetListAvisMedecins(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetListAvisMedecins", ReplyAction="http://tempuri.org/IAvisService/GetListAvisMedecinsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.AvisRequestViewModel[]> GetListAvisMedecinsAsync(int medecinId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetListAvisPerConsultations", ReplyAction="http://tempuri.org/IAvisService/GetListAvisPerConsultationsResponse")]
        SureNkap.EsameService.AvisResponseViewModel[] GetListAvisPerConsultations(int consultationId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetListAvisPerConsultations", ReplyAction="http://tempuri.org/IAvisService/GetListAvisPerConsultationsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.AvisResponseViewModel[]> GetListAvisPerConsultationsAsync(int consultationId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetAvisById", ReplyAction="http://tempuri.org/IAvisService/GetAvisByIdResponse")]
        SureNkap.EsameService.AvisRequest GetAvisById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetAvisById", ReplyAction="http://tempuri.org/IAvisService/GetAvisByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.AvisRequest> GetAvisByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetFilesOnAvisRequest", ReplyAction="http://tempuri.org/IAvisService/GetFilesOnAvisRequestResponse")]
        SureNkap.EsameService.FilesViewModel[] GetFilesOnAvisRequest(int avisId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/GetFilesOnAvisRequest", ReplyAction="http://tempuri.org/IAvisService/GetFilesOnAvisRequestResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> GetFilesOnAvisRequestAsync(int avisId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/AddFileToAvisRequest", ReplyAction="http://tempuri.org/IAvisService/AddFileToAvisRequestResponse")]
        void AddFileToAvisRequest(SureNkap.EsameService.AvisRequestFiles file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/AddFileToAvisRequest", ReplyAction="http://tempuri.org/IAvisService/AddFileToAvisRequestResponse")]
        System.Threading.Tasks.Task AddFileToAvisRequestAsync(SureNkap.EsameService.AvisRequestFiles file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/DeleteFileOnAvis", ReplyAction="http://tempuri.org/IAvisService/DeleteFileOnAvisResponse")]
        void DeleteFileOnAvis(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/DeleteFileOnAvis", ReplyAction="http://tempuri.org/IAvisService/DeleteFileOnAvisResponse")]
        System.Threading.Tasks.Task DeleteFileOnAvisAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/UpdateAvisRequest", ReplyAction="http://tempuri.org/IAvisService/UpdateAvisRequestResponse")]
        bool UpdateAvisRequest(SureNkap.EsameService.AvisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/UpdateAvisRequest", ReplyAction="http://tempuri.org/IAvisService/UpdateAvisRequestResponse")]
        System.Threading.Tasks.Task<bool> UpdateAvisRequestAsync(SureNkap.EsameService.AvisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/DeleteAvisRequest", ReplyAction="http://tempuri.org/IAvisService/DeleteAvisRequestResponse")]
        bool DeleteAvisRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAvisService/DeleteAvisRequest", ReplyAction="http://tempuri.org/IAvisService/DeleteAvisRequestResponse")]
        System.Threading.Tasks.Task<bool> DeleteAvisRequestAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/UpdateServiceStorage", ReplyAction="http://tempuri.org/IServices/UpdateServiceStorageResponse")]
        bool UpdateServiceStorage(SureNkap.EsameService.StorageServices serv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/UpdateServiceStorage", ReplyAction="http://tempuri.org/IServices/UpdateServiceStorageResponse")]
        System.Threading.Tasks.Task<bool> UpdateServiceStorageAsync(SureNkap.EsameService.StorageServices serv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/SubscribeToStorageService", ReplyAction="http://tempuri.org/IServices/SubscribeToStorageServiceResponse")]
        void SubscribeToStorageService(SureNkap.EsameService.StorageServices serv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/SubscribeToStorageService", ReplyAction="http://tempuri.org/IServices/SubscribeToStorageServiceResponse")]
        System.Threading.Tasks.Task SubscribeToStorageServiceAsync(SureNkap.EsameService.StorageServices serv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetActiveStorageSubscription", ReplyAction="http://tempuri.org/IServices/GetActiveStorageSubscriptionResponse")]
        SureNkap.EsameService.StorageServices GetActiveStorageSubscription(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetActiveStorageSubscription", ReplyAction="http://tempuri.org/IServices/GetActiveStorageSubscriptionResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.StorageServices> GetActiveStorageSubscriptionAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetListExtraServices", ReplyAction="http://tempuri.org/IServices/GetListExtraServicesResponse")]
        SureNkap.EsameService.ExtraServices[] GetListExtraServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetListExtraServices", ReplyAction="http://tempuri.org/IServices/GetListExtraServicesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ExtraServices[]> GetListExtraServicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetStorageSubscripton", ReplyAction="http://tempuri.org/IServices/GetStorageSubscriptonResponse")]
        SureNkap.EsameService.StorageServices GetStorageSubscripton(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetStorageSubscripton", ReplyAction="http://tempuri.org/IServices/GetStorageSubscriptonResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.StorageServices> GetStorageSubscriptonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetStorageSubscriptions", ReplyAction="http://tempuri.org/IServices/GetStorageSubscriptionsResponse")]
        SureNkap.EsameService.StorageServiceDto[] GetStorageSubscriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/GetStorageSubscriptions", ReplyAction="http://tempuri.org/IServices/GetStorageSubscriptionsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.StorageServiceDto[]> GetStorageSubscriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/CreateEsameSub", ReplyAction="http://tempuri.org/IServices/CreateEsameSubResponse")]
        void CreateEsameSub(int userId, int quantity, int patientId, SureNkap.EsameService.PaymentMethod method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServices/CreateEsameSub", ReplyAction="http://tempuri.org/IServices/CreateEsameSubResponse")]
        System.Threading.Tasks.Task CreateEsameSubAsync(int userId, int quantity, int patientId, SureNkap.EsameService.PaymentMethod method);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/CreateAntecedent", ReplyAction="http://tempuri.org/IAntecedentService/CreateAntecedentResponse")]
        void CreateAntecedent(SureNkap.EsameService.Antecedants a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/CreateAntecedent", ReplyAction="http://tempuri.org/IAntecedentService/CreateAntecedentResponse")]
        System.Threading.Tasks.Task CreateAntecedentAsync(SureNkap.EsameService.Antecedants a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/DeleteAntecedents", ReplyAction="http://tempuri.org/IAntecedentService/DeleteAntecedentsResponse")]
        void DeleteAntecedents(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/DeleteAntecedents", ReplyAction="http://tempuri.org/IAntecedentService/DeleteAntecedentsResponse")]
        System.Threading.Tasks.Task DeleteAntecedentsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/UpdateAntecedants", ReplyAction="http://tempuri.org/IAntecedentService/UpdateAntecedantsResponse")]
        bool UpdateAntecedants(SureNkap.EsameService.Antecedants upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/UpdateAntecedants", ReplyAction="http://tempuri.org/IAntecedentService/UpdateAntecedantsResponse")]
        System.Threading.Tasks.Task<bool> UpdateAntecedantsAsync(SureNkap.EsameService.Antecedants upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/GetAntecedantsById", ReplyAction="http://tempuri.org/IAntecedentService/GetAntecedantsByIdResponse")]
        SureNkap.EsameService.Antecedants GetAntecedantsById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/GetAntecedantsById", ReplyAction="http://tempuri.org/IAntecedentService/GetAntecedantsByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Antecedants> GetAntecedantsByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/GetListAntecedentsByPatient", ReplyAction="http://tempuri.org/IAntecedentService/GetListAntecedentsByPatientResponse")]
        SureNkap.EsameService.Antecedants[] GetListAntecedentsByPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/GetListAntecedentsByPatient", ReplyAction="http://tempuri.org/IAntecedentService/GetListAntecedentsByPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Antecedants[]> GetListAntecedentsByPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/SearchAntecedents", ReplyAction="http://tempuri.org/IAntecedentService/SearchAntecedentsResponse")]
        SureNkap.EsameService.Keys[] SearchAntecedents(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAntecedentService/SearchAntecedents", ReplyAction="http://tempuri.org/IAntecedentService/SearchAntecedentsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Keys[]> SearchAntecedentsAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/CreateDir", ReplyAction="http://tempuri.org/IDossierService/CreateDirResponse")]
        string CreateDir(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/CreateDir", ReplyAction="http://tempuri.org/IDossierService/CreateDirResponse")]
        System.Threading.Tasks.Task<string> CreateDirAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/CreateDossierRegistrationRequest", ReplyAction="http://tempuri.org/IDossierService/CreateDossierRegistrationRequestResponse")]
        int CreateDossierRegistrationRequest(SureNkap.EsameService.DossierRegistrationRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/CreateDossierRegistrationRequest", ReplyAction="http://tempuri.org/IDossierService/CreateDossierRegistrationRequestResponse")]
        System.Threading.Tasks.Task<int> CreateDossierRegistrationRequestAsync(SureNkap.EsameService.DossierRegistrationRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/GetDossierRequestById", ReplyAction="http://tempuri.org/IDossierService/GetDossierRequestByIdResponse")]
        SureNkap.EsameService.DossierRegistrationRequest GetDossierRequestById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/GetDossierRequestById", ReplyAction="http://tempuri.org/IDossierService/GetDossierRequestByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DossierRegistrationRequest> GetDossierRequestByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/DeleteDossierRequest", ReplyAction="http://tempuri.org/IDossierService/DeleteDossierRequestResponse")]
        bool DeleteDossierRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/DeleteDossierRequest", ReplyAction="http://tempuri.org/IDossierService/DeleteDossierRequestResponse")]
        System.Threading.Tasks.Task<bool> DeleteDossierRequestAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/GetDossierPatient", ReplyAction="http://tempuri.org/IDossierService/GetDossierPatientResponse")]
        SureNkap.EsameService.Dossiers GetDossierPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDossierService/GetDossierPatient", ReplyAction="http://tempuri.org/IDossierService/GetDossierPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Dossiers> GetDossierPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitementHService/GetListTraitementsHabituels", ReplyAction="http://tempuri.org/ITraitementHService/GetListTraitementsHabituelsResponse")]
        SureNkap.EsameService.TraitementsHabituels[] GetListTraitementsHabituels(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitementHService/GetListTraitementsHabituels", ReplyAction="http://tempuri.org/ITraitementHService/GetListTraitementsHabituelsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.TraitementsHabituels[]> GetListTraitementsHabituelsAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitementHService/CreateTraitementH", ReplyAction="http://tempuri.org/ITraitementHService/CreateTraitementHResponse")]
        void CreateTraitementH(SureNkap.EsameService.TraitementsHabituels t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitementHService/CreateTraitementH", ReplyAction="http://tempuri.org/ITraitementHService/CreateTraitementHResponse")]
        System.Threading.Tasks.Task CreateTraitementHAsync(SureNkap.EsameService.TraitementsHabituels t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitementHService/DeleteTraitementH", ReplyAction="http://tempuri.org/ITraitementHService/DeleteTraitementHResponse")]
        bool DeleteTraitementH(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITraitementHService/DeleteTraitementH", ReplyAction="http://tempuri.org/ITraitementHService/DeleteTraitementHResponse")]
        System.Threading.Tasks.Task<bool> DeleteTraitementHAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAllergieService/CreateAllergie", ReplyAction="http://tempuri.org/IAllergieService/CreateAllergieResponse")]
        void CreateAllergie(SureNkap.EsameService.Allergies a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAllergieService/CreateAllergie", ReplyAction="http://tempuri.org/IAllergieService/CreateAllergieResponse")]
        System.Threading.Tasks.Task CreateAllergieAsync(SureNkap.EsameService.Allergies a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAllergieService/DeleteAllergie", ReplyAction="http://tempuri.org/IAllergieService/DeleteAllergieResponse")]
        bool DeleteAllergie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAllergieService/DeleteAllergie", ReplyAction="http://tempuri.org/IAllergieService/DeleteAllergieResponse")]
        System.Threading.Tasks.Task<bool> DeleteAllergieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAllergieService/GetListAllergiesByPatient", ReplyAction="http://tempuri.org/IAllergieService/GetListAllergiesByPatientResponse")]
        SureNkap.EsameService.Allergies[] GetListAllergiesByPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAllergieService/GetListAllergiesByPatient", ReplyAction="http://tempuri.org/IAllergieService/GetListAllergiesByPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Allergies[]> GetListAllergiesByPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/GetListSubAccounts", ReplyAction="http://tempuri.org/IAccounts/GetListSubAccountsResponse")]
        SureNkap.EsameService.SubAccountsViewModel[] GetListSubAccounts(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/GetListSubAccounts", ReplyAction="http://tempuri.org/IAccounts/GetListSubAccountsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.SubAccountsViewModel[]> GetListSubAccountsAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/CreateSubAccount", ReplyAction="http://tempuri.org/IAccounts/CreateSubAccountResponse")]
        int CreateSubAccount(SureNkap.EsameService.SubAccounts a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/CreateSubAccount", ReplyAction="http://tempuri.org/IAccounts/CreateSubAccountResponse")]
        System.Threading.Tasks.Task<int> CreateSubAccountAsync(SureNkap.EsameService.SubAccounts a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/GetSubAccountById", ReplyAction="http://tempuri.org/IAccounts/GetSubAccountByIdResponse")]
        SureNkap.EsameService.SubAccounts GetSubAccountById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/GetSubAccountById", ReplyAction="http://tempuri.org/IAccounts/GetSubAccountByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.SubAccounts> GetSubAccountByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/GetSubAccountByEmail", ReplyAction="http://tempuri.org/IAccounts/GetSubAccountByEmailResponse")]
        SureNkap.EsameService.SubAccounts GetSubAccountByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/GetSubAccountByEmail", ReplyAction="http://tempuri.org/IAccounts/GetSubAccountByEmailResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.SubAccounts> GetSubAccountByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/DeleteSubAccount", ReplyAction="http://tempuri.org/IAccounts/DeleteSubAccountResponse")]
        void DeleteSubAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccounts/DeleteSubAccount", ReplyAction="http://tempuri.org/IAccounts/DeleteSubAccountResponse")]
        System.Threading.Tasks.Task DeleteSubAccountAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CountAllPharmacies", ReplyAction="http://tempuri.org/IPharmacies/CountAllPharmaciesResponse")]
        int CountAllPharmacies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CountAllPharmacies", ReplyAction="http://tempuri.org/IPharmacies/CountAllPharmaciesResponse")]
        System.Threading.Tasks.Task<int> CountAllPharmaciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/PharmaciesTotalRevenue", ReplyAction="http://tempuri.org/IPharmacies/PharmaciesTotalRevenueResponse")]
        decimal PharmaciesTotalRevenue(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/PharmaciesTotalRevenue", ReplyAction="http://tempuri.org/IPharmacies/PharmaciesTotalRevenueResponse")]
        System.Threading.Tasks.Task<decimal> PharmaciesTotalRevenueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreatePharmacy", ReplyAction="http://tempuri.org/IPharmacies/CreatePharmacyResponse")]
        int CreatePharmacy(SureNkap.EsameService.Pharmacies p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreatePharmacy", ReplyAction="http://tempuri.org/IPharmacies/CreatePharmacyResponse")]
        System.Threading.Tasks.Task<int> CreatePharmacyAsync(SureNkap.EsameService.Pharmacies p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuotesPerPharmacy", ReplyAction="http://tempuri.org/IPharmacies/GetQuotesPerPharmacyResponse")]
        SureNkap.EsameService.DevisViewModel[] GetQuotesPerPharmacy(int pharmacieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuotesPerPharmacy", ReplyAction="http://tempuri.org/IPharmacies/GetQuotesPerPharmacyResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DevisViewModel[]> GetQuotesPerPharmacyAsync(int pharmacieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuotesPerPatient", ReplyAction="http://tempuri.org/IPharmacies/GetQuotesPerPatientResponse")]
        SureNkap.EsameService.DevisViewModel[] GetQuotesPerPatient(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuotesPerPatient", ReplyAction="http://tempuri.org/IPharmacies/GetQuotesPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DevisViewModel[]> GetQuotesPerPatientAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreateProforma", ReplyAction="http://tempuri.org/IPharmacies/CreateProformaResponse")]
        void CreateProforma(SureNkap.EsameService.Proforma p, SureNkap.EsameService.ProformaDetails[] pdts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreateProforma", ReplyAction="http://tempuri.org/IPharmacies/CreateProformaResponse")]
        System.Threading.Tasks.Task CreateProformaAsync(SureNkap.EsameService.Proforma p, SureNkap.EsameService.ProformaDetails[] pdts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/OpenSesson", ReplyAction="http://tempuri.org/IPharmacies/OpenSessonResponse")]
        SureNkap.EsameService.Pharmacies OpenSesson(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/OpenSesson", ReplyAction="http://tempuri.org/IPharmacies/OpenSessonResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies> OpenSessonAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetPharmacieById", ReplyAction="http://tempuri.org/IPharmacies/GetPharmacieByIdResponse")]
        SureNkap.EsameService.Pharmacies GetPharmacieById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetPharmacieById", ReplyAction="http://tempuri.org/IPharmacies/GetPharmacieByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies> GetPharmacieByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetDetailsPerOrdonnance", ReplyAction="http://tempuri.org/IPharmacies/GetDetailsPerOrdonnanceResponse")]
        SureNkap.EsameService.OrdonnanceDetails[] GetDetailsPerOrdonnance(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetDetailsPerOrdonnance", ReplyAction="http://tempuri.org/IPharmacies/GetDetailsPerOrdonnanceResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrdonnanceDetails[]> GetDetailsPerOrdonnanceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrdonnancesPerPatient", ReplyAction="http://tempuri.org/IPharmacies/GetOrdonnancesPerPatientResponse")]
        SureNkap.EsameService.Ordonnances[] GetOrdonnancesPerPatient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrdonnancesPerPatient", ReplyAction="http://tempuri.org/IPharmacies/GetOrdonnancesPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Ordonnances[]> GetOrdonnancesPerPatientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreateQuoteRequest", ReplyAction="http://tempuri.org/IPharmacies/CreateQuoteRequestResponse")]
        int CreateQuoteRequest(SureNkap.EsameService.QuoteRequests l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreateQuoteRequest", ReplyAction="http://tempuri.org/IPharmacies/CreateQuoteRequestResponse")]
        System.Threading.Tasks.Task<int> CreateQuoteRequestAsync(SureNkap.EsameService.QuoteRequests l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteRequestPerPharmacy", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteRequestPerPharmacyResponse")]
        SureNkap.EsameService.QuoteRequests[] GetQuoteRequestPerPharmacy(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteRequestPerPharmacy", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteRequestPerPharmacyResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests[]> GetQuoteRequestPerPharmacyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteRequestsPerPatient", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteRequestsPerPatientResponse")]
        SureNkap.EsameService.QuoteRequests[] GetQuoteRequestsPerPatient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteRequestsPerPatient", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteRequestsPerPatientResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests[]> GetQuoteRequestsPerPatientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetListPharmacies", ReplyAction="http://tempuri.org/IPharmacies/GetListPharmaciesResponse")]
        SureNkap.EsameService.Pharmacies[] GetListPharmacies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetListPharmacies", ReplyAction="http://tempuri.org/IPharmacies/GetListPharmaciesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies[]> GetListPharmaciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteRequestById", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteRequestByIdResponse")]
        SureNkap.EsameService.QuoteRequests GetQuoteRequestById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteRequestById", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteRequestByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests> GetQuoteRequestByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteById", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteByIdResponse")]
        SureNkap.EsameService.Proforma GetQuoteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetQuoteById", ReplyAction="http://tempuri.org/IPharmacies/GetQuoteByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Proforma> GetQuoteByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetProformaDetails", ReplyAction="http://tempuri.org/IPharmacies/GetProformaDetailsResponse")]
        SureNkap.EsameService.ProformaDetails[] GetProformaDetails(int proformaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetProformaDetails", ReplyAction="http://tempuri.org/IPharmacies/GetProformaDetailsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.ProformaDetails[]> GetProformaDetailsAsync(int proformaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdatePharmacy", ReplyAction="http://tempuri.org/IPharmacies/UpdatePharmacyResponse")]
        bool UpdatePharmacy(SureNkap.EsameService.Pharmacies p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdatePharmacy", ReplyAction="http://tempuri.org/IPharmacies/UpdatePharmacyResponse")]
        System.Threading.Tasks.Task<bool> UpdatePharmacyAsync(SureNkap.EsameService.Pharmacies p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetPharmacySettings", ReplyAction="http://tempuri.org/IPharmacies/GetPharmacySettingsResponse")]
        SureNkap.EsameService.Settings GetPharmacySettings(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetPharmacySettings", ReplyAction="http://tempuri.org/IPharmacies/GetPharmacySettingsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Settings> GetPharmacySettingsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetListPharmacyInvoices", ReplyAction="http://tempuri.org/IPharmacies/GetListPharmacyInvoicesResponse")]
        SureNkap.EsameService.Invoices[] GetListPharmacyInvoices(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetListPharmacyInvoices", ReplyAction="http://tempuri.org/IPharmacies/GetListPharmacyInvoicesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Invoices[]> GetListPharmacyInvoicesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetPharmacyById", ReplyAction="http://tempuri.org/IPharmacies/GetPharmacyByIdResponse")]
        SureNkap.EsameService.Pharmacies GetPharmacyById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetPharmacyById", ReplyAction="http://tempuri.org/IPharmacies/GetPharmacyByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies> GetPharmacyByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdateOrdonnance", ReplyAction="http://tempuri.org/IPharmacies/UpdateOrdonnanceResponse")]
        void UpdateOrdonnance(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdateOrdonnance", ReplyAction="http://tempuri.org/IPharmacies/UpdateOrdonnanceResponse")]
        System.Threading.Tasks.Task UpdateOrdonnanceAsync(string ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdateProforma", ReplyAction="http://tempuri.org/IPharmacies/UpdateProformaResponse")]
        bool UpdateProforma(SureNkap.EsameService.Proforma upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdateProforma", ReplyAction="http://tempuri.org/IPharmacies/UpdateProformaResponse")]
        System.Threading.Tasks.Task<bool> UpdateProformaAsync(SureNkap.EsameService.Proforma upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreateOrder", ReplyAction="http://tempuri.org/IPharmacies/CreateOrderResponse")]
        SureNkap.EsameService.Orders CreateOrder(int proformaId, System.DateTime utcDate, string products);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/CreateOrder", ReplyAction="http://tempuri.org/IPharmacies/CreateOrderResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Orders> CreateOrderAsync(int proformaId, System.DateTime utcDate, string products);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/DeleteProforma", ReplyAction="http://tempuri.org/IPharmacies/DeleteProformaResponse")]
        bool DeleteProforma(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/DeleteProforma", ReplyAction="http://tempuri.org/IPharmacies/DeleteProformaResponse")]
        System.Threading.Tasks.Task<bool> DeleteProformaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdateOrder", ReplyAction="http://tempuri.org/IPharmacies/UpdateOrderResponse")]
        bool UpdateOrder(SureNkap.EsameService.Orders ord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/UpdateOrder", ReplyAction="http://tempuri.org/IPharmacies/UpdateOrderResponse")]
        System.Threading.Tasks.Task<bool> UpdateOrderAsync(SureNkap.EsameService.Orders ord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderDetails", ReplyAction="http://tempuri.org/IPharmacies/GetOrderDetailsResponse")]
        SureNkap.EsameService.OrderDetails[] GetOrderDetails(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderDetails", ReplyAction="http://tempuri.org/IPharmacies/GetOrderDetailsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrderDetails[]> GetOrderDetailsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderAsPdf", ReplyAction="http://tempuri.org/IPharmacies/GetOrderAsPdfResponse")]
        SureNkap.EsameService.OrderPdf GetOrderAsPdf(int id, bool pharmacie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderAsPdf", ReplyAction="http://tempuri.org/IPharmacies/GetOrderAsPdfResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrderPdf> GetOrderAsPdfAsync(int id, bool pharmacie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrders", ReplyAction="http://tempuri.org/IPharmacies/GetOrdersResponse")]
        SureNkap.EsameService.OrdersViewModel[] GetOrders(int id, bool asPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrders", ReplyAction="http://tempuri.org/IPharmacies/GetOrdersResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrdersViewModel[]> GetOrdersAsync(int id, bool asPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetRequestDetails", ReplyAction="http://tempuri.org/IPharmacies/GetRequestDetailsResponse")]
        SureNkap.EsameService.OrdonnanceDetails[] GetRequestDetails(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetRequestDetails", ReplyAction="http://tempuri.org/IPharmacies/GetRequestDetailsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrdonnanceDetails[]> GetRequestDetailsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetRequestById", ReplyAction="http://tempuri.org/IPharmacies/GetRequestByIdResponse")]
        SureNkap.EsameService.QuoteRequests GetRequestById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetRequestById", ReplyAction="http://tempuri.org/IPharmacies/GetRequestByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests> GetRequestByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderToPrint", ReplyAction="http://tempuri.org/IPharmacies/GetOrderToPrintResponse")]
        SureNkap.EsameService.OrderPdfs[] GetOrderToPrint(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderToPrint", ReplyAction="http://tempuri.org/IPharmacies/GetOrderToPrintResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OrderPdfs[]> GetOrderToPrintAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetProformaById", ReplyAction="http://tempuri.org/IPharmacies/GetProformaByIdResponse")]
        SureNkap.EsameService.Proforma GetProformaById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetProformaById", ReplyAction="http://tempuri.org/IPharmacies/GetProformaByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Proforma> GetProformaByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderById", ReplyAction="http://tempuri.org/IPharmacies/GetOrderByIdResponse")]
        SureNkap.EsameService.Orders GetOrderById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPharmacies/GetOrderById", ReplyAction="http://tempuri.org/IPharmacies/GetOrderByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Orders> GetOrderByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/Create", ReplyAction="http://tempuri.org/IMeetings/CreateResponse")]
        int Create(SureNkap.EsameService.Meetings meet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/Create", ReplyAction="http://tempuri.org/IMeetings/CreateResponse")]
        System.Threading.Tasks.Task<int> CreateAsync(SureNkap.EsameService.Meetings meet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/Update", ReplyAction="http://tempuri.org/IMeetings/UpdateResponse")]
        bool Update(SureNkap.EsameService.Meetings upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/Update", ReplyAction="http://tempuri.org/IMeetings/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(SureNkap.EsameService.Meetings upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/DeleteMeeting", ReplyAction="http://tempuri.org/IMeetings/DeleteMeetingResponse")]
        bool DeleteMeeting(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/DeleteMeeting", ReplyAction="http://tempuri.org/IMeetings/DeleteMeetingResponse")]
        System.Threading.Tasks.Task<bool> DeleteMeetingAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/DeleteParticipant", ReplyAction="http://tempuri.org/IMeetings/DeleteParticipantResponse")]
        bool DeleteParticipant(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/DeleteParticipant", ReplyAction="http://tempuri.org/IMeetings/DeleteParticipantResponse")]
        System.Threading.Tasks.Task<bool> DeleteParticipantAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetMeetingById", ReplyAction="http://tempuri.org/IMeetings/GetMeetingByIdResponse")]
        SureNkap.EsameService.Meetings GetMeetingById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetMeetingById", ReplyAction="http://tempuri.org/IMeetings/GetMeetingByIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Meetings> GetMeetingByIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetMeetingByConsultationId", ReplyAction="http://tempuri.org/IMeetings/GetMeetingByConsultationIdResponse")]
        SureNkap.EsameService.Meetings GetMeetingByConsultationId(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetMeetingByConsultationId", ReplyAction="http://tempuri.org/IMeetings/GetMeetingByConsultationIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Meetings> GetMeetingByConsultationIdAsync(int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetAll", ReplyAction="http://tempuri.org/IMeetings/GetAllResponse")]
        SureNkap.EsameService.Meetings[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetAll", ReplyAction="http://tempuri.org/IMeetings/GetAllResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Meetings[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/AddMeetingParticipant", ReplyAction="http://tempuri.org/IMeetings/AddMeetingParticipantResponse")]
        void AddMeetingParticipant(SureNkap.EsameService.MeetingParticipants part);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/AddMeetingParticipant", ReplyAction="http://tempuri.org/IMeetings/AddMeetingParticipantResponse")]
        System.Threading.Tasks.Task AddMeetingParticipantAsync(SureNkap.EsameService.MeetingParticipants part);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/DeleteMeetingParticipant", ReplyAction="http://tempuri.org/IMeetings/DeleteMeetingParticipantResponse")]
        void DeleteMeetingParticipant(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/DeleteMeetingParticipant", ReplyAction="http://tempuri.org/IMeetings/DeleteMeetingParticipantResponse")]
        System.Threading.Tasks.Task DeleteMeetingParticipantAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/UpdateMeetingParticipant", ReplyAction="http://tempuri.org/IMeetings/UpdateMeetingParticipantResponse")]
        void UpdateMeetingParticipant(SureNkap.EsameService.MeetingParticipants upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/UpdateMeetingParticipant", ReplyAction="http://tempuri.org/IMeetings/UpdateMeetingParticipantResponse")]
        System.Threading.Tasks.Task UpdateMeetingParticipantAsync(SureNkap.EsameService.MeetingParticipants upd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetParticipant", ReplyAction="http://tempuri.org/IMeetings/GetParticipantResponse")]
        SureNkap.EsameService.MeetingParticipants GetParticipant(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetParticipant", ReplyAction="http://tempuri.org/IMeetings/GetParticipantResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.MeetingParticipants> GetParticipantAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetAllParticipants", ReplyAction="http://tempuri.org/IMeetings/GetAllParticipantsResponse")]
        SureNkap.EsameService.MeetingParticipants[] GetAllParticipants(int meetingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMeetings/GetAllParticipants", ReplyAction="http://tempuri.org/IMeetings/GetAllParticipantsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.MeetingParticipants[]> GetAllParticipantsAsync(int meetingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/AddToCart", ReplyAction="http://tempuri.org/IPaymentService/AddToCartResponse")]
        void AddToCart(SureNkap.EsameService.CartDetails det);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/AddToCart", ReplyAction="http://tempuri.org/IPaymentService/AddToCartResponse")]
        System.Threading.Tasks.Task AddToCartAsync(SureNkap.EsameService.CartDetails det);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CreateCart", ReplyAction="http://tempuri.org/IPaymentService/CreateCartResponse")]
        void CreateCart(SureNkap.EsameService.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CreateCart", ReplyAction="http://tempuri.org/IPaymentService/CreateCartResponse")]
        System.Threading.Tasks.Task CreateCartAsync(SureNkap.EsameService.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/DeleteCart", ReplyAction="http://tempuri.org/IPaymentService/DeleteCartResponse")]
        void DeleteCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/DeleteCart", ReplyAction="http://tempuri.org/IPaymentService/DeleteCartResponse")]
        System.Threading.Tasks.Task DeleteCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/UpdateCart", ReplyAction="http://tempuri.org/IPaymentService/UpdateCartResponse")]
        void UpdateCart(SureNkap.EsameService.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/UpdateCart", ReplyAction="http://tempuri.org/IPaymentService/UpdateCartResponse")]
        System.Threading.Tasks.Task UpdateCartAsync(SureNkap.EsameService.Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetCartByInvoiceId", ReplyAction="http://tempuri.org/IPaymentService/GetCartByInvoiceIdResponse")]
        SureNkap.EsameService.Cart GetCartByInvoiceId(string invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetCartByInvoiceId", ReplyAction="http://tempuri.org/IPaymentService/GetCartByInvoiceIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Cart> GetCartByInvoiceIdAsync(string invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetCartDetails", ReplyAction="http://tempuri.org/IPaymentService/GetCartDetailsResponse")]
        SureNkap.EsameService.CartDetails[] GetCartDetails(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetCartDetails", ReplyAction="http://tempuri.org/IPaymentService/GetCartDetailsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.CartDetails[]> GetCartDetailsAsync(int cartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForAM", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForAMResponse")]
        bool CompleteServiceForAM(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForAM", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForAMResponse")]
        System.Threading.Tasks.Task<bool> CompleteServiceForAMAsync(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForTE", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForTEResponse")]
        bool CompleteServiceForTE(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForTE", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForTEResponse")]
        System.Threading.Tasks.Task<bool> CompleteServiceForTEAsync(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForRDV", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForRDVResponse")]
        bool CompleteServiceForRDV(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForRDV", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForRDVResponse")]
        System.Threading.Tasks.Task<bool> CompleteServiceForRDVAsync(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForES", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForESResponse")]
        bool CompleteServiceForES(int serviceId, int patientId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForES", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForESResponse")]
        System.Threading.Tasks.Task<bool> CompleteServiceForESAsync(int serviceId, int patientId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForDir", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForDirResponse")]
        bool CompleteServiceForDir(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForDir", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForDirResponse")]
        System.Threading.Tasks.Task<bool> CompleteServiceForDirAsync(int serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForOrdonnance", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForOrdonnanceResponse")]
        bool CompleteServiceForOrdonnance(int serviceId, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CompleteServiceForOrdonnance", ReplyAction="http://tempuri.org/IPaymentService/CompleteServiceForOrdonnanceResponse")]
        System.Threading.Tasks.Task<bool> CompleteServiceForOrdonnanceAsync(int serviceId, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetAllOMRequests", ReplyAction="http://tempuri.org/IPaymentService/GetAllOMRequestsResponse")]
        SureNkap.EsameService.OMPaymentRequest[] GetAllOMRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetAllOMRequests", ReplyAction="http://tempuri.org/IPaymentService/GetAllOMRequestsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OMPaymentRequest[]> GetAllOMRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetOMRequest", ReplyAction="http://tempuri.org/IPaymentService/GetOMRequestResponse")]
        SureNkap.EsameService.OMPaymentRequest GetOMRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/GetOMRequest", ReplyAction="http://tempuri.org/IPaymentService/GetOMRequestResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.OMPaymentRequest> GetOMRequestAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/DeleteOMRequest", ReplyAction="http://tempuri.org/IPaymentService/DeleteOMRequestResponse")]
        void DeleteOMRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/DeleteOMRequest", ReplyAction="http://tempuri.org/IPaymentService/DeleteOMRequestResponse")]
        System.Threading.Tasks.Task DeleteOMRequestAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CreateOMRequest", ReplyAction="http://tempuri.org/IPaymentService/CreateOMRequestResponse")]
        int CreateOMRequest(SureNkap.EsameService.OMPaymentRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaymentService/CreateOMRequest", ReplyAction="http://tempuri.org/IPaymentService/CreateOMRequestResponse")]
        System.Threading.Tasks.Task<int> CreateOMRequestAsync(SureNkap.EsameService.OMPaymentRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/CreateEventSeries", ReplyAction="http://tempuri.org/IEvents/CreateEventSeriesResponse")]
        void CreateEventSeries(SureNkap.EsameService.Events[] evts, SureNkap.EsameService.EventSeries serie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/CreateEventSeries", ReplyAction="http://tempuri.org/IEvents/CreateEventSeriesResponse")]
        System.Threading.Tasks.Task CreateEventSeriesAsync(SureNkap.EsameService.Events[] evts, SureNkap.EsameService.EventSeries serie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/CreateEvent", ReplyAction="http://tempuri.org/IEvents/CreateEventResponse")]
        void CreateEvent(SureNkap.EsameService.Events evt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/CreateEvent", ReplyAction="http://tempuri.org/IEvents/CreateEventResponse")]
        System.Threading.Tasks.Task CreateEventAsync(SureNkap.EsameService.Events evt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/UpdateEvent", ReplyAction="http://tempuri.org/IEvents/UpdateEventResponse")]
        void UpdateEvent(SureNkap.EsameService.Events evt, bool updateSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/UpdateEvent", ReplyAction="http://tempuri.org/IEvents/UpdateEventResponse")]
        System.Threading.Tasks.Task UpdateEventAsync(SureNkap.EsameService.Events evt, bool updateSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/DeleteEvent", ReplyAction="http://tempuri.org/IEvents/DeleteEventResponse")]
        void DeleteEvent(int id, bool deleteSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/DeleteEvent", ReplyAction="http://tempuri.org/IEvents/DeleteEventResponse")]
        System.Threading.Tasks.Task DeleteEventAsync(int id, bool deleteSeries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetAllEvents", ReplyAction="http://tempuri.org/IEvents/GetAllEventsResponse")]
        SureNkap.EsameService.Events[] GetAllEvents(SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetAllEvents", ReplyAction="http://tempuri.org/IEvents/GetAllEventsResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Events[]> GetAllEventsAsync(SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetEvent", ReplyAction="http://tempuri.org/IEvents/GetEventResponse")]
        SureNkap.EsameService.Events GetEvent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetEvent", ReplyAction="http://tempuri.org/IEvents/GetEventResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Events> GetEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetAllEventsByMedecinId", ReplyAction="http://tempuri.org/IEvents/GetAllEventsByMedecinIdResponse")]
        SureNkap.EsameService.Events[] GetAllEventsByMedecinId(int medecinId, SureNkap.EsameService.Events.StatusEvent status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetAllEventsByMedecinId", ReplyAction="http://tempuri.org/IEvents/GetAllEventsByMedecinIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Events[]> GetAllEventsByMedecinIdAsync(int medecinId, SureNkap.EsameService.Events.StatusEvent status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetAllEventsByPatientId", ReplyAction="http://tempuri.org/IEvents/GetAllEventsByPatientIdResponse")]
        SureNkap.EsameService.DiaryViewModel[] GetAllEventsByPatientId(int patientId, SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetAllEventsByPatientId", ReplyAction="http://tempuri.org/IEvents/GetAllEventsByPatientIdResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> GetAllEventsByPatientIdAsync(int patientId, SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetSerie", ReplyAction="http://tempuri.org/IEvents/GetSerieResponse")]
        SureNkap.EsameService.EventSeries GetSerie(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/GetSerie", ReplyAction="http://tempuri.org/IEvents/GetSerieResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.EventSeries> GetSerieAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/BookEvent", ReplyAction="http://tempuri.org/IEvents/BookEventResponse")]
        int BookEvent(SureNkap.EsameService.Events evt, int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvents/BookEvent", ReplyAction="http://tempuri.org/IEvents/BookEventResponse")]
        System.Threading.Tasks.Task<int> BookEventAsync(SureNkap.EsameService.Events evt, int consultationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/AddToCalendar", ReplyAction="http://tempuri.org/ICalendar/AddToCalendarResponse")]
        void AddToCalendar(SureNkap.EsameService.Calendar c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/AddToCalendar", ReplyAction="http://tempuri.org/ICalendar/AddToCalendarResponse")]
        System.Threading.Tasks.Task AddToCalendarAsync(SureNkap.EsameService.Calendar c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/RemoveCalendar", ReplyAction="http://tempuri.org/ICalendar/RemoveCalendarResponse")]
        void RemoveCalendar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/RemoveCalendar", ReplyAction="http://tempuri.org/ICalendar/RemoveCalendarResponse")]
        System.Threading.Tasks.Task RemoveCalendarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/GetCalendar", ReplyAction="http://tempuri.org/ICalendar/GetCalendarResponse")]
        SureNkap.EsameService.Calendar GetCalendar(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/GetCalendar", ReplyAction="http://tempuri.org/ICalendar/GetCalendarResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.Calendar> GetCalendarAsync(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventSeries/CreateSeries", ReplyAction="http://tempuri.org/IEventSeries/CreateSeriesResponse")]
        SureNkap.EsameService.EventSeries CreateSeries(SureNkap.EsameService.EventSeries s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventSeries/CreateSeries", ReplyAction="http://tempuri.org/IEventSeries/CreateSeriesResponse")]
        System.Threading.Tasks.Task<SureNkap.EsameService.EventSeries> CreateSeriesAsync(SureNkap.EsameService.EventSeries s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/_Hello", ReplyAction="http://tempuri.org/IData/_HelloResponse")]
        void _Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/_Hello", ReplyAction="http://tempuri.org/IData/_HelloResponse")]
        System.Threading.Tasks.Task _HelloAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataChannel : SureNkap.EsameService.IData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataClient : System.ServiceModel.ClientBase<SureNkap.EsameService.IData>, SureNkap.EsameService.IData {
        
        public DataClient() {
        }
        
        public DataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SureNkap.EsameService.Users[] GetListUsers() {
            return base.Channel.GetListUsers();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Users[]> GetListUsersAsync() {
            return base.Channel.GetListUsersAsync();
        }
        
        public SureNkap.EsameService.Users GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Users> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public SureNkap.EsameService.Users FindUserByEmail(string email) {
            return base.Channel.FindUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Users> FindUserByEmailAsync(string email) {
            return base.Channel.FindUserByEmailAsync(email);
        }
        
        public int CreateUser(SureNkap.EsameService.Users u) {
            return base.Channel.CreateUser(u);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(SureNkap.EsameService.Users u) {
            return base.Channel.CreateUserAsync(u);
        }
        
        public bool UpdateUser(SureNkap.EsameService.Users u) {
            return base.Channel.UpdateUser(u);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(SureNkap.EsameService.Users u) {
            return base.Channel.UpdateUserAsync(u);
        }
        
        public bool UserExists(string username, string password) {
            return base.Channel.UserExists(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(string username, string password) {
            return base.Channel.UserExistsAsync(username, password);
        }
        
        public SureNkap.EsameService.Medecins[] GetListMedecinsByPatient(int patientId) {
            return base.Channel.GetListMedecinsByPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetListMedecinsByPatientAsync(int patientId) {
            return base.Channel.GetListMedecinsByPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.PatientViewModel[] GetListPatientsByMedecin(int medecinId) {
            return base.Channel.GetListPatientsByMedecin(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.PatientViewModel[]> GetListPatientsByMedecinAsync(int medecinId) {
            return base.Channel.GetListPatientsByMedecinAsync(medecinId);
        }
        
        public void CreateInvitationRequest(SureNkap.EsameService.MedecinPatients request) {
            base.Channel.CreateInvitationRequest(request);
        }
        
        public System.Threading.Tasks.Task CreateInvitationRequestAsync(SureNkap.EsameService.MedecinPatients request) {
            return base.Channel.CreateInvitationRequestAsync(request);
        }
        
        public bool UpdateInvitationRequest(SureNkap.EsameService.MedecinPatients invit) {
            return base.Channel.UpdateInvitationRequest(invit);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateInvitationRequestAsync(SureNkap.EsameService.MedecinPatients invit) {
            return base.Channel.UpdateInvitationRequestAsync(invit);
        }
        
        public int GetUserChildrens(int parentId) {
            return base.Channel.GetUserChildrens(parentId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserChildrensAsync(int parentId) {
            return base.Channel.GetUserChildrensAsync(parentId);
        }
        
        public bool ResetPasswordPharmacy(System.Guid uid, string password) {
            return base.Channel.ResetPasswordPharmacy(uid, password);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPasswordPharmacyAsync(System.Guid uid, string password) {
            return base.Channel.ResetPasswordPharmacyAsync(uid, password);
        }
        
        public bool ResetPasswordEsame(System.Guid uid, string password) {
            return base.Channel.ResetPasswordEsame(uid, password);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPasswordEsameAsync(System.Guid uid, string password) {
            return base.Channel.ResetPasswordEsameAsync(uid, password);
        }
        
        public bool IsValidPasswordResetLink(System.Guid uid) {
            return base.Channel.IsValidPasswordResetLink(uid);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidPasswordResetLinkAsync(System.Guid uid) {
            return base.Channel.IsValidPasswordResetLinkAsync(uid);
        }
        
        public bool IsValidPasswordResetLink2(System.Guid uid) {
            return base.Channel.IsValidPasswordResetLink2(uid);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidPasswordResetLink2Async(System.Guid uid) {
            return base.Channel.IsValidPasswordResetLink2Async(uid);
        }
        
        public SureNkap.EsameService.PasswordResetData GetPasswordRequestLink(string username) {
            return base.Channel.GetPasswordRequestLink(username);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.PasswordResetData> GetPasswordRequestLinkAsync(string username) {
            return base.Channel.GetPasswordRequestLinkAsync(username);
        }
        
        public SureNkap.EsameService.PasswordResetData GetPasswordRequestLink2(string username) {
            return base.Channel.GetPasswordRequestLink2(username);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.PasswordResetData> GetPasswordRequestLink2Async(string username) {
            return base.Channel.GetPasswordRequestLink2Async(username);
        }
        
        public SureNkap.EsameService.MedecinPatients GetInvitationRequest(int p, int m) {
            return base.Channel.GetInvitationRequest(p, m);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.MedecinPatients> GetInvitationRequestAsync(int p, int m) {
            return base.Channel.GetInvitationRequestAsync(p, m);
        }
        
        public SureNkap.EsameService.Expertises GetCaseById(int id) {
            return base.Channel.GetCaseById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Expertises> GetCaseByIdAsync(int id) {
            return base.Channel.GetCaseByIdAsync(id);
        }
        
        public int AddCase(SureNkap.EsameService.Expertises exp) {
            return base.Channel.AddCase(exp);
        }
        
        public System.Threading.Tasks.Task<int> AddCaseAsync(SureNkap.EsameService.Expertises exp) {
            return base.Channel.AddCaseAsync(exp);
        }
        
        public SureNkap.EsameService.CaseViewModel[] GetAllCases(int medecinId) {
            return base.Channel.GetAllCases(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.CaseViewModel[]> GetAllCasesAsync(int medecinId) {
            return base.Channel.GetAllCasesAsync(medecinId);
        }
        
        public SureNkap.EsameService.CaseViewModel[] GetAllDemandes(int medecinId) {
            return base.Channel.GetAllDemandes(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.CaseViewModel[]> GetAllDemandesAsync(int medecinId) {
            return base.Channel.GetAllDemandesAsync(medecinId);
        }
        
        public void CloseCase(int id) {
            base.Channel.CloseCase(id);
        }
        
        public System.Threading.Tasks.Task CloseCaseAsync(int id) {
            return base.Channel.CloseCaseAsync(id);
        }
        
        public void CreateCaseResponse(int id, string response) {
            base.Channel.CreateCaseResponse(id, response);
        }
        
        public System.Threading.Tasks.Task CreateCaseResponseAsync(int id, string response) {
            return base.Channel.CreateCaseResponseAsync(id, response);
        }
        
        public void CaseSharefile(SureNkap.EsameService.ExpertiseFiles file) {
            base.Channel.CaseSharefile(file);
        }
        
        public System.Threading.Tasks.Task CaseSharefileAsync(SureNkap.EsameService.ExpertiseFiles file) {
            return base.Channel.CaseSharefileAsync(file);
        }
        
        public void CaseRemoveFile(int id) {
            base.Channel.CaseRemoveFile(id);
        }
        
        public System.Threading.Tasks.Task CaseRemoveFileAsync(int id) {
            return base.Channel.CaseRemoveFileAsync(id);
        }
        
        public SureNkap.EsameService.FilesViewModel[] CaseSharedfiles(int caseId) {
            return base.Channel.CaseSharedfiles(caseId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> CaseSharedfilesAsync(int caseId) {
            return base.Channel.CaseSharedfilesAsync(caseId);
        }
        
        public int CreateExpertise(SureNkap.EsameService.Expertises e, string fileIds) {
            return base.Channel.CreateExpertise(e, fileIds);
        }
        
        public System.Threading.Tasks.Task<int> CreateExpertiseAsync(SureNkap.EsameService.Expertises e, string fileIds) {
            return base.Channel.CreateExpertiseAsync(e, fileIds);
        }
        
        public SureNkap.EsameService.Fichiers _GetFileByFileId(string fileId, int patientId) {
            return base.Channel._GetFileByFileId(fileId, patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers> _GetFileByFileIdAsync(string fileId, int patientId) {
            return base.Channel._GetFileByFileIdAsync(fileId, patientId);
        }
        
        public SureNkap.EsameService.Fichiers[] _GetAllPatientFiles(int patientId) {
            return base.Channel._GetAllPatientFiles(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers[]> _GetAllPatientFilesAsync(int patientId) {
            return base.Channel._GetAllPatientFilesAsync(patientId);
        }
        
        public SureNkap.EsameService.Fichiers _GetFileById(int id) {
            return base.Channel._GetFileById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers> _GetFileByIdAsync(int id) {
            return base.Channel._GetFileByIdAsync(id);
        }
        
        public void _AddFile(SureNkap.EsameService.Fichiers f) {
            base.Channel._AddFile(f);
        }
        
        public System.Threading.Tasks.Task _AddFileAsync(SureNkap.EsameService.Fichiers f) {
            return base.Channel._AddFileAsync(f);
        }
        
        public void _DeleteFile(int id, int patientId) {
            base.Channel._DeleteFile(id, patientId);
        }
        
        public System.Threading.Tasks.Task _DeleteFileAsync(int id, int patientId) {
            return base.Channel._DeleteFileAsync(id, patientId);
        }
        
        public void _ShareFiles(int medecinId, int patientId, string[] list) {
            base.Channel._ShareFiles(medecinId, patientId, list);
        }
        
        public System.Threading.Tasks.Task _ShareFilesAsync(int medecinId, int patientId, string[] list) {
            return base.Channel._ShareFilesAsync(medecinId, patientId, list);
        }
        
        public void _StopShare(int fileId, int medecinId) {
            base.Channel._StopShare(fileId, medecinId);
        }
        
        public System.Threading.Tasks.Task _StopShareAsync(int fileId, int medecinId) {
            return base.Channel._StopShareAsync(fileId, medecinId);
        }
        
        public SureNkap.EsameService.FilesViewModel[] _GetSharedFiles(int med, int pat) {
            return base.Channel._GetSharedFiles(med, pat);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> _GetSharedFilesAsync(int med, int pat) {
            return base.Channel._GetSharedFilesAsync(med, pat);
        }
        
        public void _AddFileReport(int id, string url) {
            base.Channel._AddFileReport(id, url);
        }
        
        public System.Threading.Tasks.Task _AddFileReportAsync(int id, string url) {
            return base.Channel._AddFileReportAsync(id, url);
        }
        
        public void UpdateFilePath(int fileId, string path, SureNkap.EsameService.Fichiers.FilesType typ) {
            base.Channel.UpdateFilePath(fileId, path, typ);
        }
        
        public System.Threading.Tasks.Task UpdateFilePathAsync(int fileId, string path, SureNkap.EsameService.Fichiers.FilesType typ) {
            return base.Channel.UpdateFilePathAsync(fileId, path, typ);
        }
        
        public SureNkap.EsameService.FileTask CreateTask(SureNkap.EsameService.FileTask t) {
            return base.Channel.CreateTask(t);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FileTask> CreateTaskAsync(SureNkap.EsameService.FileTask t) {
            return base.Channel.CreateTaskAsync(t);
        }
        
        public void DeleteTask(int id) {
            base.Channel.DeleteTask(id);
        }
        
        public System.Threading.Tasks.Task DeleteTaskAsync(int id) {
            return base.Channel.DeleteTaskAsync(id);
        }
        
        public SureNkap.EsameService.FileTask[] _GetAllFileTasks(int uid) {
            return base.Channel._GetAllFileTasks(uid);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FileTask[]> _GetAllFileTasksAsync(int uid) {
            return base.Channel._GetAllFileTasksAsync(uid);
        }
        
        public void SetStatus(int id, int status) {
            base.Channel.SetStatus(id, status);
        }
        
        public System.Threading.Tasks.Task SetStatusAsync(int id, int status) {
            return base.Channel.SetStatusAsync(id, status);
        }
        
        public SureNkap.EsameService.FileTask _GetFileTaskById(int id) {
            return base.Channel._GetFileTaskById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FileTask> _GetFileTaskByIdAsync(int id) {
            return base.Channel._GetFileTaskByIdAsync(id);
        }
        
        public SureNkap.EsameService.FileTask GetFileTask(int patientId, string name) {
            return base.Channel.GetFileTask(patientId, name);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FileTask> GetFileTaskAsync(int patientId, string name) {
            return base.Channel.GetFileTaskAsync(patientId, name);
        }
        
        public bool UpdateTask(SureNkap.EsameService.FileTask task) {
            return base.Channel.UpdateTask(task);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTaskAsync(SureNkap.EsameService.FileTask task) {
            return base.Channel.UpdateTaskAsync(task);
        }
        
        public SureNkap.EsameService.FileAccessStatus[] GetFileAccessStatus(int fileId, int patientId) {
            return base.Channel.GetFileAccessStatus(fileId, patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FileAccessStatus[]> GetFileAccessStatusAsync(int fileId, int patientId) {
            return base.Channel.GetFileAccessStatusAsync(fileId, patientId);
        }
        
        public SureNkap.EsameService.Fichiers[] GetCompteRendus(int id) {
            return base.Channel.GetCompteRendus(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Fichiers[]> GetCompteRendusAsync(int id) {
            return base.Channel.GetCompteRendusAsync(id);
        }
        
        public SureNkap.EsameService.Consultations CreateConsultation(SureNkap.EsameService.Consultations c) {
            return base.Channel.CreateConsultation(c);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Consultations> CreateConsultationAsync(SureNkap.EsameService.Consultations c) {
            return base.Channel.CreateConsultationAsync(c);
        }
        
        public SureNkap.EsameService.ConsultationViewModel[] GetListConsultationsPerPatient(int patientId) {
            return base.Channel.GetListConsultationsPerPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ConsultationViewModel[]> GetListConsultationsPerPatientAsync(int patientId) {
            return base.Channel.GetListConsultationsPerPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.ConsultationViewModel[] GetListConsultationsPerMedecin(int medecinId) {
            return base.Channel.GetListConsultationsPerMedecin(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ConsultationViewModel[]> GetListConsultationsPerMedecinAsync(int medecinId) {
            return base.Channel.GetListConsultationsPerMedecinAsync(medecinId);
        }
        
        public SureNkap.EsameService.Consultations GetConsultationById(int id) {
            return base.Channel.GetConsultationById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Consultations> GetConsultationByIdAsync(int id) {
            return base.Channel.GetConsultationByIdAsync(id);
        }
        
        public SureNkap.EsameService.Consultations GetConsultationByRef(string id) {
            return base.Channel.GetConsultationByRef(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Consultations> GetConsultationByRefAsync(string id) {
            return base.Channel.GetConsultationByRefAsync(id);
        }
        
        public bool DeleteConsultation(int id) {
            return base.Channel.DeleteConsultation(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteConsultationAsync(int id) {
            return base.Channel.DeleteConsultationAsync(id);
        }
        
        public SureNkap.EsameService.PrintReportViewModel _PrintReport(string id) {
            return base.Channel._PrintReport(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.PrintReportViewModel> _PrintReportAsync(string id) {
            return base.Channel._PrintReportAsync(id);
        }
        
        public SureNkap.EsameService.Consultations[] GetListConsultations() {
            return base.Channel.GetListConsultations();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Consultations[]> GetListConsultationsAsync() {
            return base.Channel.GetListConsultationsAsync();
        }
        
        public void _SetConference(int id) {
            base.Channel._SetConference(id);
        }
        
        public System.Threading.Tasks.Task _SetConferenceAsync(int id) {
            return base.Channel._SetConferenceAsync(id);
        }
        
        public void AddMessage(SureNkap.EsameService.Messages m) {
            base.Channel.AddMessage(m);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(SureNkap.EsameService.Messages m) {
            return base.Channel.AddMessageAsync(m);
        }
        
        public void DeleteMessage(int id) {
            base.Channel.DeleteMessage(id);
        }
        
        public System.Threading.Tasks.Task DeleteMessageAsync(int id) {
            return base.Channel.DeleteMessageAsync(id);
        }
        
        public SureNkap.EsameService.Messages[] _GetAllMessagesByConsultationId(int id) {
            return base.Channel._GetAllMessagesByConsultationId(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Messages[]> _GetAllMessagesByConsultationIdAsync(int id) {
            return base.Channel._GetAllMessagesByConsultationIdAsync(id);
        }
        
        public SureNkap.EsameService.Messages[] _GetAllMessagesByUser(int id) {
            return base.Channel._GetAllMessagesByUser(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Messages[]> _GetAllMessagesByUserAsync(int id) {
            return base.Channel._GetAllMessagesByUserAsync(id);
        }
        
        public bool CreateNote(int consultationId, int UserId, string msg) {
            return base.Channel.CreateNote(consultationId, UserId, msg);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNoteAsync(int consultationId, int UserId, string msg) {
            return base.Channel.CreateNoteAsync(consultationId, UserId, msg);
        }
        
        public bool DeleteNote(int Id) {
            return base.Channel.DeleteNote(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteNoteAsync(int Id) {
            return base.Channel.DeleteNoteAsync(Id);
        }
        
        public SureNkap.EsameService.Notes[] GetAllNotes(int consultationId) {
            return base.Channel.GetAllNotes(consultationId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Notes[]> GetAllNotesAsync(int consultationId) {
            return base.Channel.GetAllNotesAsync(consultationId);
        }
        
        public SureNkap.EsameService.FilesViewModel[] GetSharedFilesOnConsultation(int consultationId) {
            return base.Channel.GetSharedFilesOnConsultation(consultationId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> GetSharedFilesOnConsultationAsync(int consultationId) {
            return base.Channel.GetSharedFilesOnConsultationAsync(consultationId);
        }
        
        public void AddFileToConsultation(SureNkap.EsameService.ConsultationFiles file) {
            base.Channel.AddFileToConsultation(file);
        }
        
        public System.Threading.Tasks.Task AddFileToConsultationAsync(SureNkap.EsameService.ConsultationFiles file) {
            return base.Channel.AddFileToConsultationAsync(file);
        }
        
        public void RemoveFileOnConsultation(int id) {
            base.Channel.RemoveFileOnConsultation(id);
        }
        
        public System.Threading.Tasks.Task RemoveFileOnConsultationAsync(int id) {
            return base.Channel.RemoveFileOnConsultationAsync(id);
        }
        
        public bool UpdateConsultation(SureNkap.EsameService.Consultations upd) {
            return base.Channel.UpdateConsultation(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateConsultationAsync(SureNkap.EsameService.Consultations upd) {
            return base.Channel.UpdateConsultationAsync(upd);
        }
        
        public int CountAllConsultation() {
            return base.Channel.CountAllConsultation();
        }
        
        public System.Threading.Tasks.Task<int> CountAllConsultationAsync() {
            return base.Channel.CountAllConsultationAsync();
        }
        
        public SureNkap.EsameService.BilanViewModel[] GetListBilanPerConsultation(int consultationId) {
            return base.Channel.GetListBilanPerConsultation(consultationId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.BilanViewModel[]> GetListBilanPerConsultationAsync(int consultationId) {
            return base.Channel.GetListBilanPerConsultationAsync(consultationId);
        }
        
        public void CreateBilan(SureNkap.EsameService.Bilans b) {
            base.Channel.CreateBilan(b);
        }
        
        public System.Threading.Tasks.Task CreateBilanAsync(SureNkap.EsameService.Bilans b) {
            return base.Channel.CreateBilanAsync(b);
        }
        
        public void DeleteBilan(int id) {
            base.Channel.DeleteBilan(id);
        }
        
        public System.Threading.Tasks.Task DeleteBilanAsync(int id) {
            return base.Channel.DeleteBilanAsync(id);
        }
        
        public SureNkap.EsameService.Bilans GetBilanById(int id) {
            return base.Channel.GetBilanById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Bilans> GetBilanByIdAsync(int id) {
            return base.Channel.GetBilanByIdAsync(id);
        }
        
        public SureNkap.EsameService.BilanViewModel[] GetListBilansPerPatient(int patientId) {
            return base.Channel.GetListBilansPerPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.BilanViewModel[]> GetListBilansPerPatientAsync(int patientId) {
            return base.Channel.GetListBilansPerPatientAsync(patientId);
        }
        
        public bool UpdateBilan(SureNkap.EsameService.Bilans upd) {
            return base.Channel.UpdateBilan(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBilanAsync(SureNkap.EsameService.Bilans upd) {
            return base.Channel.UpdateBilanAsync(upd);
        }
        
        public SureNkap.EsameService.BilanPrintViewModel GetBilanAsPdf(int patientId, int medecinId, string[] list) {
            return base.Channel.GetBilanAsPdf(patientId, medecinId, list);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.BilanPrintViewModel> GetBilanAsPdfAsync(int patientId, int medecinId, string[] list) {
            return base.Channel.GetBilanAsPdfAsync(patientId, medecinId, list);
        }
        
        public void _AddCertfificat(SureNkap.EsameService.Certificats c) {
            base.Channel._AddCertfificat(c);
        }
        
        public System.Threading.Tasks.Task _AddCertfificatAsync(SureNkap.EsameService.Certificats c) {
            return base.Channel._AddCertfificatAsync(c);
        }
        
        public SureNkap.EsameService.Certificats[] _GetAllCertificatPerConsultations(int consultationId) {
            return base.Channel._GetAllCertificatPerConsultations(consultationId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Certificats[]> _GetAllCertificatPerConsultationsAsync(int consultationId) {
            return base.Channel._GetAllCertificatPerConsultationsAsync(consultationId);
        }
        
        public SureNkap.EsameService.CertificatsPrintModel _PrintCertificat(int id) {
            return base.Channel._PrintCertificat(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.CertificatsPrintModel> _PrintCertificatAsync(int id) {
            return base.Channel._PrintCertificatAsync(id);
        }
        
        public void _DeleteCertificat(int id) {
            base.Channel._DeleteCertificat(id);
        }
        
        public System.Threading.Tasks.Task _DeleteCertificatAsync(int id) {
            return base.Channel._DeleteCertificatAsync(id);
        }
        
        public void _AssignTaskOnFolder(int patientId, int to) {
            base.Channel._AssignTaskOnFolder(patientId, to);
        }
        
        public System.Threading.Tasks.Task _AssignTaskOnFolderAsync(int patientId, int to) {
            return base.Channel._AssignTaskOnFolderAsync(patientId, to);
        }
        
        public void CreatePatient(SureNkap.EsameService.Patients p) {
            base.Channel.CreatePatient(p);
        }
        
        public System.Threading.Tasks.Task CreatePatientAsync(SureNkap.EsameService.Patients p) {
            return base.Channel.CreatePatientAsync(p);
        }
        
        public SureNkap.EsameService.Patients[] GetSysPatients(int id) {
            return base.Channel.GetSysPatients(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Patients[]> GetSysPatientsAsync(int id) {
            return base.Channel.GetSysPatientsAsync(id);
        }
        
        public SureNkap.EsameService.Patients[] GetInvitations(int id) {
            return base.Channel.GetInvitations(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Patients[]> GetInvitationsAsync(int id) {
            return base.Channel.GetInvitationsAsync(id);
        }
        
        public SureNkap.EsameService.Medecins[] GetPendingInvitations(int id) {
            return base.Channel.GetPendingInvitations(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetPendingInvitationsAsync(int id) {
            return base.Channel.GetPendingInvitationsAsync(id);
        }
        
        public SureNkap.EsameService.BillingAdress CreateBillingAddress(SureNkap.EsameService.BillingAdress adr) {
            return base.Channel.CreateBillingAddress(adr);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.BillingAdress> CreateBillingAddressAsync(SureNkap.EsameService.BillingAdress adr) {
            return base.Channel.CreateBillingAddressAsync(adr);
        }
        
        public SureNkap.EsameService.BillingAdress[] GetListBillingAddresses(int patientId) {
            return base.Channel.GetListBillingAddresses(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.BillingAdress[]> GetListBillingAddressesAsync(int patientId) {
            return base.Channel.GetListBillingAddressesAsync(patientId);
        }
        
        public void UpdateBillingAddress(SureNkap.EsameService.BillingAdress adr) {
            base.Channel.UpdateBillingAddress(adr);
        }
        
        public System.Threading.Tasks.Task UpdateBillingAddressAsync(SureNkap.EsameService.BillingAdress adr) {
            return base.Channel.UpdateBillingAddressAsync(adr);
        }
        
        public SureNkap.EsameService.BillingAdress GetBillingAddressById(int id) {
            return base.Channel.GetBillingAddressById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.BillingAdress> GetBillingAddressByIdAsync(int id) {
            return base.Channel.GetBillingAddressByIdAsync(id);
        }
        
        public void CreateMedecinTraitant(SureNkap.EsameService.MedecinsTraitants mt) {
            base.Channel.CreateMedecinTraitant(mt);
        }
        
        public System.Threading.Tasks.Task CreateMedecinTraitantAsync(SureNkap.EsameService.MedecinsTraitants mt) {
            return base.Channel.CreateMedecinTraitantAsync(mt);
        }
        
        public SureNkap.EsameService.MedecinsTraitants[] GetListMedecinsTraitants(int patientid) {
            return base.Channel.GetListMedecinsTraitants(patientid);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.MedecinsTraitants[]> GetListMedecinsTraitantsAsync(int patientid) {
            return base.Channel.GetListMedecinsTraitantsAsync(patientid);
        }
        
        public void DeleteMedecinTraitant(int id) {
            base.Channel.DeleteMedecinTraitant(id);
        }
        
        public System.Threading.Tasks.Task DeleteMedecinTraitantAsync(int id) {
            return base.Channel.DeleteMedecinTraitantAsync(id);
        }
        
        public SureNkap.EsameService.Patients GetPatientById(int id) {
            return base.Channel.GetPatientById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Patients> GetPatientByIdAsync(int id) {
            return base.Channel.GetPatientByIdAsync(id);
        }
        
        public SureNkap.EsameService.Patients[] GetListPatients() {
            return base.Channel.GetListPatients();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Patients[]> GetListPatientsAsync() {
            return base.Channel.GetListPatientsAsync();
        }
        
        public bool UpdatePatient(SureNkap.EsameService.Patients upd) {
            return base.Channel.UpdatePatient(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePatientAsync(SureNkap.EsameService.Patients upd) {
            return base.Channel.UpdatePatientAsync(upd);
        }
        
        public int CountAllPatients() {
            return base.Channel.CountAllPatients();
        }
        
        public System.Threading.Tasks.Task<int> CountAllPatientsAsync() {
            return base.Channel.CountAllPatientsAsync();
        }
        
        public int CountAllMedecins() {
            return base.Channel.CountAllMedecins();
        }
        
        public System.Threading.Tasks.Task<int> CountAllMedecinsAsync() {
            return base.Channel.CountAllMedecinsAsync();
        }
        
        public SureNkap.EsameService.Medecins[] GetSysMedecins(int id) {
            return base.Channel.GetSysMedecins(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetSysMedecinsAsync(int id) {
            return base.Channel.GetSysMedecinsAsync(id);
        }
        
        public SureNkap.EsameService.Medecins[] AutoCompleteListMedecins(string term) {
            return base.Channel.AutoCompleteListMedecins(term);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> AutoCompleteListMedecinsAsync(string term) {
            return base.Channel.AutoCompleteListMedecinsAsync(term);
        }
        
        public SureNkap.EsameService.OperationDto[] GetTransactionHistory(int id) {
            return base.Channel.GetTransactionHistory(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OperationDto[]> GetTransactionHistoryAsync(int id) {
            return base.Channel.GetTransactionHistoryAsync(id);
        }
        
        public SureNkap.EsameService.OperationDto[] GetTransactionHistoryByPeriod(int id, System.DateTime from, System.DateTime toDate) {
            return base.Channel.GetTransactionHistoryByPeriod(id, from, toDate);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OperationDto[]> GetTransactionHistoryByPeriodAsync(int id, System.DateTime from, System.DateTime toDate) {
            return base.Channel.GetTransactionHistoryByPeriodAsync(id, from, toDate);
        }
        
        public void CompleteTaskOnFolder(int id) {
            base.Channel.CompleteTaskOnFolder(id);
        }
        
        public System.Threading.Tasks.Task CompleteTaskOnFolderAsync(int id) {
            return base.Channel.CompleteTaskOnFolderAsync(id);
        }
        
        public SureNkap.EsameService.DossierRequestViewModel[] GetAllDossierRegistrationRequests(int medecinId) {
            return base.Channel.GetAllDossierRegistrationRequests(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DossierRequestViewModel[]> GetAllDossierRegistrationRequestsAsync(int medecinId) {
            return base.Channel.GetAllDossierRegistrationRequestsAsync(medecinId);
        }
        
        public void AddToSubscriptionGroup(int medecinId, int abonnementId) {
            base.Channel.AddToSubscriptionGroup(medecinId, abonnementId);
        }
        
        public System.Threading.Tasks.Task AddToSubscriptionGroupAsync(int medecinId, int abonnementId) {
            return base.Channel.AddToSubscriptionGroupAsync(medecinId, abonnementId);
        }
        
        public SureNkap.EsameService.AppointementViewModel[] GetRendezVousCabinet(int medecinId) {
            return base.Channel.GetRendezVousCabinet(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.AppointementViewModel[]> GetRendezVousCabinetAsync(int medecinId) {
            return base.Channel.GetRendezVousCabinetAsync(medecinId);
        }
        
        public void UpdateMedecin(SureNkap.EsameService.Medecins m) {
            base.Channel.UpdateMedecin(m);
        }
        
        public System.Threading.Tasks.Task UpdateMedecinAsync(SureNkap.EsameService.Medecins m) {
            return base.Channel.UpdateMedecinAsync(m);
        }
        
        public SureNkap.EsameService.Medecins GetMedecinById(int id) {
            return base.Channel.GetMedecinById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Medecins> GetMedecinByIdAsync(int id) {
            return base.Channel.GetMedecinByIdAsync(id);
        }
        
        public SureNkap.EsameService.Medecins[] GetListMedecins() {
            return base.Channel.GetListMedecins();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Medecins[]> GetListMedecinsAsync() {
            return base.Channel.GetListMedecinsAsync();
        }
        
        public int CreateOrdonnance(SureNkap.EsameService.Ordonnances o) {
            return base.Channel.CreateOrdonnance(o);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrdonnanceAsync(SureNkap.EsameService.Ordonnances o) {
            return base.Channel.CreateOrdonnanceAsync(o);
        }
        
        public void CreatePrescription(SureNkap.EsameService.Prescriptions p) {
            base.Channel.CreatePrescription(p);
        }
        
        public System.Threading.Tasks.Task CreatePrescriptionAsync(SureNkap.EsameService.Prescriptions p) {
            return base.Channel.CreatePrescriptionAsync(p);
        }
        
        public SureNkap.EsameService.Prescriptions GetPrescriptionById(int id) {
            return base.Channel.GetPrescriptionById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prescriptions> GetPrescriptionByIdAsync(int id) {
            return base.Channel.GetPrescriptionByIdAsync(id);
        }
        
        public bool DeletePrescription(int id) {
            return base.Channel.DeletePrescription(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePrescriptionAsync(int id) {
            return base.Channel.DeletePrescriptionAsync(id);
        }
        
        public bool UpdatePrescription(SureNkap.EsameService.Prescriptions upd) {
            return base.Channel.UpdatePrescription(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePrescriptionAsync(SureNkap.EsameService.Prescriptions upd) {
            return base.Channel.UpdatePrescriptionAsync(upd);
        }
        
        public SureNkap.EsameService.Prescriptions[] GetAllPrescriptionsPerPatient(int patientId) {
            return base.Channel.GetAllPrescriptionsPerPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prescriptions[]> GetAllPrescriptionsPerPatientAsync(int patientId) {
            return base.Channel.GetAllPrescriptionsPerPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.OrdonnancePrintViewModel GetOrdonnanceAsPdf(int id) {
            return base.Channel.GetOrdonnanceAsPdf(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrdonnancePrintViewModel> GetOrdonnanceAsPdfAsync(int id) {
            return base.Channel.GetOrdonnanceAsPdfAsync(id);
        }
        
        public SureNkap.EsameService.Prescriptions[] GetPrescriptionsPerConsultation(int consultationId) {
            return base.Channel.GetPrescriptionsPerConsultation(consultationId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prescriptions[]> GetPrescriptionsPerConsultationAsync(int consultationId) {
            return base.Channel.GetPrescriptionsPerConsultationAsync(consultationId);
        }
        
        public void CreateOrdDetails(SureNkap.EsameService.OrdonnanceDetails det) {
            base.Channel.CreateOrdDetails(det);
        }
        
        public System.Threading.Tasks.Task CreateOrdDetailsAsync(SureNkap.EsameService.OrdonnanceDetails det) {
            return base.Channel.CreateOrdDetailsAsync(det);
        }
        
        public int CountAllOrdonnances() {
            return base.Channel.CountAllOrdonnances();
        }
        
        public System.Threading.Tasks.Task<int> CountAllOrdonnancesAsync() {
            return base.Channel.CountAllOrdonnancesAsync();
        }
        
        public SureNkap.EsameService.DiaryViewModel[] _GetAllAppointementsPerPatient(int patientId) {
            return base.Channel._GetAllAppointementsPerPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetAllAppointementsPerPatientAsync(int patientId) {
            return base.Channel._GetAllAppointementsPerPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.DiaryViewModel[] _GetAllAppointementsPerMedecin(int medecinId) {
            return base.Channel._GetAllAppointementsPerMedecin(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetAllAppointementsPerMedecinAsync(int medecinId) {
            return base.Channel._GetAllAppointementsPerMedecinAsync(medecinId);
        }
        
        public SureNkap.EsameService.DiaryViewModel _GetAppointement(int id) {
            return base.Channel._GetAppointement(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel> _GetAppointementAsync(int id) {
            return base.Channel._GetAppointementAsync(id);
        }
        
        public SureNkap.EsameService.DiaryViewModel[] _GetFreePeriods(int medecinId, int userId) {
            return base.Channel._GetFreePeriods(medecinId, userId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetFreePeriodsAsync(int medecinId, int userId) {
            return base.Channel._GetFreePeriodsAsync(medecinId, userId);
        }
        
        public SureNkap.EsameService.DiaryViewModel[] _GetMedecinDiary(int medecinId) {
            return base.Channel._GetMedecinDiary(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> _GetMedecinDiaryAsync(int medecinId) {
            return base.Channel._GetMedecinDiaryAsync(medecinId);
        }
        
        public bool _AddFreePeriod(SureNkap.EsameService.Periods p) {
            return base.Channel._AddFreePeriod(p);
        }
        
        public System.Threading.Tasks.Task<bool> _AddFreePeriodAsync(SureNkap.EsameService.Periods p) {
            return base.Channel._AddFreePeriodAsync(p);
        }
        
        public void _DeleteFreePeriod(int id) {
            base.Channel._DeleteFreePeriod(id);
        }
        
        public System.Threading.Tasks.Task _DeleteFreePeriodAsync(int id) {
            return base.Channel._DeleteFreePeriodAsync(id);
        }
        
        public SureNkap.EsameService.Periods _GetPeriodById(int id) {
            return base.Channel._GetPeriodById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Periods> _GetPeriodByIdAsync(int id) {
            return base.Channel._GetPeriodByIdAsync(id);
        }
        
        public void _BookAppointement(int id, int patientId, int consultationId) {
            base.Channel._BookAppointement(id, patientId, consultationId);
        }
        
        public System.Threading.Tasks.Task _BookAppointementAsync(int id, int patientId, int consultationId) {
            return base.Channel._BookAppointementAsync(id, patientId, consultationId);
        }
        
        public void _CancelAppointement(int id) {
            base.Channel._CancelAppointement(id);
        }
        
        public System.Threading.Tasks.Task _CancelAppointementAsync(int id) {
            return base.Channel._CancelAppointementAsync(id);
        }
        
        public bool _PostPoneAppointement(int id, System.DateTime utcStart, System.DateTime utcEnd) {
            return base.Channel._PostPoneAppointement(id, utcStart, utcEnd);
        }
        
        public System.Threading.Tasks.Task<bool> _PostPoneAppointementAsync(int id, System.DateTime utcStart, System.DateTime utcEnd) {
            return base.Channel._PostPoneAppointementAsync(id, utcStart, utcEnd);
        }
        
        public bool _UpdateFreePeriod(SureNkap.EsameService.Periods p) {
            return base.Channel._UpdateFreePeriod(p);
        }
        
        public System.Threading.Tasks.Task<bool> _UpdateFreePeriodAsync(SureNkap.EsameService.Periods p) {
            return base.Channel._UpdateFreePeriodAsync(p);
        }
        
        public bool _ReserveAndProcess(int id, int patientId) {
            return base.Channel._ReserveAndProcess(id, patientId);
        }
        
        public System.Threading.Tasks.Task<bool> _ReserveAndProcessAsync(int id, int patientId) {
            return base.Channel._ReserveAndProcessAsync(id, patientId);
        }
        
        public bool _BookNewAppointement(SureNkap.EsameService.Periods p) {
            return base.Channel._BookNewAppointement(p);
        }
        
        public System.Threading.Tasks.Task<bool> _BookNewAppointementAsync(SureNkap.EsameService.Periods p) {
            return base.Channel._BookNewAppointementAsync(p);
        }
        
        public SureNkap.EsameService.PeriodViewModel _GetPeriod(int id) {
            return base.Channel._GetPeriod(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.PeriodViewModel> _GetPeriodAsync(int id) {
            return base.Channel._GetPeriodAsync(id);
        }
        
        public SureNkap.EsameService.PeriodViewModel _GetPeriodByConsultationId(int id) {
            return base.Channel._GetPeriodByConsultationId(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.PeriodViewModel> _GetPeriodByConsultationIdAsync(int id) {
            return base.Channel._GetPeriodByConsultationIdAsync(id);
        }
        
        public SureNkap.EsameService.Periods[] _GetFreePeriodsOnDate(System.DateTime dt, System.Nullable<int> id) {
            return base.Channel._GetFreePeriodsOnDate(dt, id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Periods[]> _GetFreePeriodsOnDateAsync(System.DateTime dt, System.Nullable<int> id) {
            return base.Channel._GetFreePeriodsOnDateAsync(dt, id);
        }
        
        public SureNkap.EsameService.Countries[] GetListCountries() {
            return base.Channel.GetListCountries();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Countries[]> GetListCountriesAsync() {
            return base.Channel.GetListCountriesAsync();
        }
        
        public SureNkap.EsameService.Cim2015[] GetListCim10() {
            return base.Channel.GetListCim10();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Cim2015[]> GetListCim10Async() {
            return base.Channel.GetListCim10Async();
        }
        
        public SureNkap.EsameService.Prices GetPriceById(int id) {
            return base.Channel.GetPriceById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prices> GetPriceByIdAsync(int id) {
            return base.Channel.GetPriceByIdAsync(id);
        }
        
        public void CreateCim10(SureNkap.EsameService.Cim2015 s) {
            base.Channel.CreateCim10(s);
        }
        
        public System.Threading.Tasks.Task CreateCim10Async(SureNkap.EsameService.Cim2015 s) {
            return base.Channel.CreateCim10Async(s);
        }
        
        public int CountCim10() {
            return base.Channel.CountCim10();
        }
        
        public System.Threading.Tasks.Task<int> CountCim10Async() {
            return base.Channel.CountCim10Async();
        }
        
        public SureNkap.EsameService.Symptomes[] GetListSymptomes(string term) {
            return base.Channel.GetListSymptomes(term);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Symptomes[]> GetListSymptomesAsync(string term) {
            return base.Channel.GetListSymptomesAsync(term);
        }
        
        public SureNkap.EsameService.ProductSettings[] GetListProducts(string term) {
            return base.Channel.GetListProducts(term);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ProductSettings[]> GetListProductsAsync(string term) {
            return base.Channel.GetListProductsAsync(term);
        }
        
        public SureNkap.EsameService.Symptomes[] SearchSymptomes(string term) {
            return base.Channel.SearchSymptomes(term);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Symptomes[]> SearchSymptomesAsync(string term) {
            return base.Channel.SearchSymptomesAsync(term);
        }
        
        public SureNkap.EsameService.Specialites[] SearchSpecialties(string term) {
            return base.Channel.SearchSpecialties(term);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Specialites[]> SearchSpecialtiesAsync(string term) {
            return base.Channel.SearchSpecialtiesAsync(term);
        }
        
        public SureNkap.EsameService.ApplicationSettings GetApplicationSettings() {
            return base.Channel.GetApplicationSettings();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ApplicationSettings> GetApplicationSettingsAsync() {
            return base.Channel.GetApplicationSettingsAsync();
        }
        
        public SureNkap.EsameService.DropList[] GetListCurrencies() {
            return base.Channel.GetListCurrencies();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DropList[]> GetListCurrenciesAsync() {
            return base.Channel.GetListCurrenciesAsync();
        }
        
        public SureNkap.EsameService.Formules[] GetListFormules() {
            return base.Channel.GetListFormules();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Formules[]> GetListFormulesAsync() {
            return base.Channel.GetListFormulesAsync();
        }
        
        public SureNkap.EsameService.Periodes[] GetListPeriodes() {
            return base.Channel.GetListPeriodes();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Periodes[]> GetListPeriodesAsync() {
            return base.Channel.GetListPeriodesAsync();
        }
        
        public SureNkap.EsameService.Prices GetPrice(int formuleId, int periodId) {
            return base.Channel.GetPrice(formuleId, periodId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prices> GetPriceAsync(int formuleId, int periodId) {
            return base.Channel.GetPriceAsync(formuleId, periodId);
        }
        
        public SureNkap.EsameService.FormuleViewModel GetFormuleById(int id) {
            return base.Channel.GetFormuleById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FormuleViewModel> GetFormuleByIdAsync(int id) {
            return base.Channel.GetFormuleByIdAsync(id);
        }
        
        public SureNkap.EsameService.ExtraServices GetAddOnById(int id) {
            return base.Channel.GetAddOnById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ExtraServices> GetAddOnByIdAsync(int id) {
            return base.Channel.GetAddOnByIdAsync(id);
        }
        
        public SureNkap.EsameService.CountryCodes[] GetListCountryCodes() {
            return base.Channel.GetListCountryCodes();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.CountryCodes[]> GetListCountryCodesAsync() {
            return base.Channel.GetListCountryCodesAsync();
        }
        
        public SureNkap.EsameService.Prices[] GetListPrices(int formuleId, int periodId) {
            return base.Channel.GetListPrices(formuleId, periodId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prices[]> GetListPricesAsync(int formuleId, int periodId) {
            return base.Channel.GetListPricesAsync(formuleId, periodId);
        }
        
        public SureNkap.EsameService.Services GetServices(int formuleId) {
            return base.Channel.GetServices(formuleId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Services> GetServicesAsync(int formuleId) {
            return base.Channel.GetServicesAsync(formuleId);
        }
        
        public SureNkap.EsameService.Prices[] GetAllPrices(int formuleId) {
            return base.Channel.GetAllPrices(formuleId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Prices[]> GetAllPricesAsync(int formuleId) {
            return base.Channel.GetAllPricesAsync(formuleId);
        }
        
        public void CreateExtraInfos(SureNkap.EsameService.GroupeExtraInfos info) {
            base.Channel.CreateExtraInfos(info);
        }
        
        public System.Threading.Tasks.Task CreateExtraInfosAsync(SureNkap.EsameService.GroupeExtraInfos info) {
            return base.Channel.CreateExtraInfosAsync(info);
        }
        
        public SureNkap.EsameService.EnterpriseExtraInfoViewModel GetExtraInfos(int patientId) {
            return base.Channel.GetExtraInfos(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.EnterpriseExtraInfoViewModel> GetExtraInfosAsync(int patientId) {
            return base.Channel.GetExtraInfosAsync(patientId);
        }
        
        public SureNkap.EsameService.InvoiceDto[] GetAllInvoicesByPatient(int patientId) {
            return base.Channel.GetAllInvoicesByPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDto[]> GetAllInvoicesByPatientAsync(int patientId) {
            return base.Channel.GetAllInvoicesByPatientAsync(patientId);
        }
        
        public void CreateInvoice(SureNkap.EsameService.Invoices inv, SureNkap.EsameService.InvoiceDetails[] details) {
            base.Channel.CreateInvoice(inv, details);
        }
        
        public System.Threading.Tasks.Task CreateInvoiceAsync(SureNkap.EsameService.Invoices inv, SureNkap.EsameService.InvoiceDetails[] details) {
            return base.Channel.CreateInvoiceAsync(inv, details);
        }
        
        public void DeleteInvoice(string id) {
            base.Channel.DeleteInvoice(id);
        }
        
        public System.Threading.Tasks.Task DeleteInvoiceAsync(string id) {
            return base.Channel.DeleteInvoiceAsync(id);
        }
        
        public void CreateSettlement(string invoiceId) {
            base.Channel.CreateSettlement(invoiceId);
        }
        
        public System.Threading.Tasks.Task CreateSettlementAsync(string invoiceId) {
            return base.Channel.CreateSettlementAsync(invoiceId);
        }
        
        public SureNkap.EsameService.InvoiceDto GetInvoiceById(string id) {
            return base.Channel.GetInvoiceById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDto> GetInvoiceByIdAsync(string id) {
            return base.Channel.GetInvoiceByIdAsync(id);
        }
        
        public SureNkap.EsameService.InvoiceDetails[] GetInvoiceDetails(string invoiceId, string currency) {
            return base.Channel.GetInvoiceDetails(invoiceId, currency);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDetails[]> GetInvoiceDetailsAsync(string invoiceId, string currency) {
            return base.Channel.GetInvoiceDetailsAsync(invoiceId, currency);
        }
        
        public decimal GetTransactions() {
            return base.Channel.GetTransactions();
        }
        
        public System.Threading.Tasks.Task<decimal> GetTransactionsAsync() {
            return base.Channel.GetTransactionsAsync();
        }
        
        public SureNkap.EsameService.InvoiceDto[] GetAllPayments() {
            return base.Channel.GetAllPayments();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.InvoiceDto[]> GetAllPaymentsAsync() {
            return base.Channel.GetAllPaymentsAsync();
        }
        
        public decimal TotalTransactions(int id) {
            return base.Channel.TotalTransactions(id);
        }
        
        public System.Threading.Tasks.Task<decimal> TotalTransactionsAsync(int id) {
            return base.Channel.TotalTransactionsAsync(id);
        }
        
        public SureNkap.EsameService.Parametres[] GetListParametresByDate(string searchDate, int patientId) {
            return base.Channel.GetListParametresByDate(searchDate, patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Parametres[]> GetListParametresByDateAsync(string searchDate, int patientId) {
            return base.Channel.GetListParametresByDateAsync(searchDate, patientId);
        }
        
        public SureNkap.EsameService.Parametres GetParametreById(int id) {
            return base.Channel.GetParametreById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Parametres> GetParametreByIdAsync(int id) {
            return base.Channel.GetParametreByIdAsync(id);
        }
        
        public SureNkap.EsameService.Parametres[] GetListParametres(int patientId, int t, string start, string endDate) {
            return base.Channel.GetListParametres(patientId, t, start, endDate);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Parametres[]> GetListParametresAsync(int patientId, int t, string start, string endDate) {
            return base.Channel.GetListParametresAsync(patientId, t, start, endDate);
        }
        
        public void CreateParametre(SureNkap.EsameService.Parametres p) {
            base.Channel.CreateParametre(p);
        }
        
        public System.Threading.Tasks.Task CreateParametreAsync(SureNkap.EsameService.Parametres p) {
            return base.Channel.CreateParametreAsync(p);
        }
        
        public bool UpdateParametre(SureNkap.EsameService.Parametres p) {
            return base.Channel.UpdateParametre(p);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateParametreAsync(SureNkap.EsameService.Parametres p) {
            return base.Channel.UpdateParametreAsync(p);
        }
        
        public int CreateAvis(SureNkap.EsameService.AvisRequest a) {
            return base.Channel.CreateAvis(a);
        }
        
        public System.Threading.Tasks.Task<int> CreateAvisAsync(SureNkap.EsameService.AvisRequest a) {
            return base.Channel.CreateAvisAsync(a);
        }
        
        public void CreateAvisResp(SureNkap.EsameService.AvisResponses response) {
            base.Channel.CreateAvisResp(response);
        }
        
        public System.Threading.Tasks.Task CreateAvisRespAsync(SureNkap.EsameService.AvisResponses response) {
            return base.Channel.CreateAvisRespAsync(response);
        }
        
        public SureNkap.EsameService.AvisRequestViewModel[] GetListAvisMedecins(int medecinId) {
            return base.Channel.GetListAvisMedecins(medecinId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.AvisRequestViewModel[]> GetListAvisMedecinsAsync(int medecinId) {
            return base.Channel.GetListAvisMedecinsAsync(medecinId);
        }
        
        public SureNkap.EsameService.AvisResponseViewModel[] GetListAvisPerConsultations(int consultationId, int userId) {
            return base.Channel.GetListAvisPerConsultations(consultationId, userId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.AvisResponseViewModel[]> GetListAvisPerConsultationsAsync(int consultationId, int userId) {
            return base.Channel.GetListAvisPerConsultationsAsync(consultationId, userId);
        }
        
        public SureNkap.EsameService.AvisRequest GetAvisById(int id) {
            return base.Channel.GetAvisById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.AvisRequest> GetAvisByIdAsync(int id) {
            return base.Channel.GetAvisByIdAsync(id);
        }
        
        public SureNkap.EsameService.FilesViewModel[] GetFilesOnAvisRequest(int avisId) {
            return base.Channel.GetFilesOnAvisRequest(avisId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.FilesViewModel[]> GetFilesOnAvisRequestAsync(int avisId) {
            return base.Channel.GetFilesOnAvisRequestAsync(avisId);
        }
        
        public void AddFileToAvisRequest(SureNkap.EsameService.AvisRequestFiles file) {
            base.Channel.AddFileToAvisRequest(file);
        }
        
        public System.Threading.Tasks.Task AddFileToAvisRequestAsync(SureNkap.EsameService.AvisRequestFiles file) {
            return base.Channel.AddFileToAvisRequestAsync(file);
        }
        
        public void DeleteFileOnAvis(int id) {
            base.Channel.DeleteFileOnAvis(id);
        }
        
        public System.Threading.Tasks.Task DeleteFileOnAvisAsync(int id) {
            return base.Channel.DeleteFileOnAvisAsync(id);
        }
        
        public bool UpdateAvisRequest(SureNkap.EsameService.AvisRequest request) {
            return base.Channel.UpdateAvisRequest(request);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAvisRequestAsync(SureNkap.EsameService.AvisRequest request) {
            return base.Channel.UpdateAvisRequestAsync(request);
        }
        
        public bool DeleteAvisRequest(int id) {
            return base.Channel.DeleteAvisRequest(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAvisRequestAsync(int id) {
            return base.Channel.DeleteAvisRequestAsync(id);
        }
        
        public bool UpdateServiceStorage(SureNkap.EsameService.StorageServices serv) {
            return base.Channel.UpdateServiceStorage(serv);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateServiceStorageAsync(SureNkap.EsameService.StorageServices serv) {
            return base.Channel.UpdateServiceStorageAsync(serv);
        }
        
        public void SubscribeToStorageService(SureNkap.EsameService.StorageServices serv) {
            base.Channel.SubscribeToStorageService(serv);
        }
        
        public System.Threading.Tasks.Task SubscribeToStorageServiceAsync(SureNkap.EsameService.StorageServices serv) {
            return base.Channel.SubscribeToStorageServiceAsync(serv);
        }
        
        public SureNkap.EsameService.StorageServices GetActiveStorageSubscription(int patientId) {
            return base.Channel.GetActiveStorageSubscription(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.StorageServices> GetActiveStorageSubscriptionAsync(int patientId) {
            return base.Channel.GetActiveStorageSubscriptionAsync(patientId);
        }
        
        public SureNkap.EsameService.ExtraServices[] GetListExtraServices() {
            return base.Channel.GetListExtraServices();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ExtraServices[]> GetListExtraServicesAsync() {
            return base.Channel.GetListExtraServicesAsync();
        }
        
        public SureNkap.EsameService.StorageServices GetStorageSubscripton(int id) {
            return base.Channel.GetStorageSubscripton(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.StorageServices> GetStorageSubscriptonAsync(int id) {
            return base.Channel.GetStorageSubscriptonAsync(id);
        }
        
        public SureNkap.EsameService.StorageServiceDto[] GetStorageSubscriptions() {
            return base.Channel.GetStorageSubscriptions();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.StorageServiceDto[]> GetStorageSubscriptionsAsync() {
            return base.Channel.GetStorageSubscriptionsAsync();
        }
        
        public void CreateEsameSub(int userId, int quantity, int patientId, SureNkap.EsameService.PaymentMethod method) {
            base.Channel.CreateEsameSub(userId, quantity, patientId, method);
        }
        
        public System.Threading.Tasks.Task CreateEsameSubAsync(int userId, int quantity, int patientId, SureNkap.EsameService.PaymentMethod method) {
            return base.Channel.CreateEsameSubAsync(userId, quantity, patientId, method);
        }
        
        public void CreateAntecedent(SureNkap.EsameService.Antecedants a) {
            base.Channel.CreateAntecedent(a);
        }
        
        public System.Threading.Tasks.Task CreateAntecedentAsync(SureNkap.EsameService.Antecedants a) {
            return base.Channel.CreateAntecedentAsync(a);
        }
        
        public void DeleteAntecedents(int id) {
            base.Channel.DeleteAntecedents(id);
        }
        
        public System.Threading.Tasks.Task DeleteAntecedentsAsync(int id) {
            return base.Channel.DeleteAntecedentsAsync(id);
        }
        
        public bool UpdateAntecedants(SureNkap.EsameService.Antecedants upd) {
            return base.Channel.UpdateAntecedants(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAntecedantsAsync(SureNkap.EsameService.Antecedants upd) {
            return base.Channel.UpdateAntecedantsAsync(upd);
        }
        
        public SureNkap.EsameService.Antecedants GetAntecedantsById(int id) {
            return base.Channel.GetAntecedantsById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Antecedants> GetAntecedantsByIdAsync(int id) {
            return base.Channel.GetAntecedantsByIdAsync(id);
        }
        
        public SureNkap.EsameService.Antecedants[] GetListAntecedentsByPatient(int patientId) {
            return base.Channel.GetListAntecedentsByPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Antecedants[]> GetListAntecedentsByPatientAsync(int patientId) {
            return base.Channel.GetListAntecedentsByPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.Keys[] SearchAntecedents(string term) {
            return base.Channel.SearchAntecedents(term);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Keys[]> SearchAntecedentsAsync(string term) {
            return base.Channel.SearchAntecedentsAsync(term);
        }
        
        public string CreateDir(int patientId) {
            return base.Channel.CreateDir(patientId);
        }
        
        public System.Threading.Tasks.Task<string> CreateDirAsync(int patientId) {
            return base.Channel.CreateDirAsync(patientId);
        }
        
        public int CreateDossierRegistrationRequest(SureNkap.EsameService.DossierRegistrationRequest req) {
            return base.Channel.CreateDossierRegistrationRequest(req);
        }
        
        public System.Threading.Tasks.Task<int> CreateDossierRegistrationRequestAsync(SureNkap.EsameService.DossierRegistrationRequest req) {
            return base.Channel.CreateDossierRegistrationRequestAsync(req);
        }
        
        public SureNkap.EsameService.DossierRegistrationRequest GetDossierRequestById(int id) {
            return base.Channel.GetDossierRequestById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DossierRegistrationRequest> GetDossierRequestByIdAsync(int id) {
            return base.Channel.GetDossierRequestByIdAsync(id);
        }
        
        public bool DeleteDossierRequest(int id) {
            return base.Channel.DeleteDossierRequest(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDossierRequestAsync(int id) {
            return base.Channel.DeleteDossierRequestAsync(id);
        }
        
        public SureNkap.EsameService.Dossiers GetDossierPatient(int patientId) {
            return base.Channel.GetDossierPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Dossiers> GetDossierPatientAsync(int patientId) {
            return base.Channel.GetDossierPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.TraitementsHabituels[] GetListTraitementsHabituels(int patientId) {
            return base.Channel.GetListTraitementsHabituels(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.TraitementsHabituels[]> GetListTraitementsHabituelsAsync(int patientId) {
            return base.Channel.GetListTraitementsHabituelsAsync(patientId);
        }
        
        public void CreateTraitementH(SureNkap.EsameService.TraitementsHabituels t) {
            base.Channel.CreateTraitementH(t);
        }
        
        public System.Threading.Tasks.Task CreateTraitementHAsync(SureNkap.EsameService.TraitementsHabituels t) {
            return base.Channel.CreateTraitementHAsync(t);
        }
        
        public bool DeleteTraitementH(int id) {
            return base.Channel.DeleteTraitementH(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTraitementHAsync(int id) {
            return base.Channel.DeleteTraitementHAsync(id);
        }
        
        public void CreateAllergie(SureNkap.EsameService.Allergies a) {
            base.Channel.CreateAllergie(a);
        }
        
        public System.Threading.Tasks.Task CreateAllergieAsync(SureNkap.EsameService.Allergies a) {
            return base.Channel.CreateAllergieAsync(a);
        }
        
        public bool DeleteAllergie(int id) {
            return base.Channel.DeleteAllergie(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAllergieAsync(int id) {
            return base.Channel.DeleteAllergieAsync(id);
        }
        
        public SureNkap.EsameService.Allergies[] GetListAllergiesByPatient(int patientId) {
            return base.Channel.GetListAllergiesByPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Allergies[]> GetListAllergiesByPatientAsync(int patientId) {
            return base.Channel.GetListAllergiesByPatientAsync(patientId);
        }
        
        public SureNkap.EsameService.SubAccountsViewModel[] GetListSubAccounts(int patientId) {
            return base.Channel.GetListSubAccounts(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.SubAccountsViewModel[]> GetListSubAccountsAsync(int patientId) {
            return base.Channel.GetListSubAccountsAsync(patientId);
        }
        
        public int CreateSubAccount(SureNkap.EsameService.SubAccounts a) {
            return base.Channel.CreateSubAccount(a);
        }
        
        public System.Threading.Tasks.Task<int> CreateSubAccountAsync(SureNkap.EsameService.SubAccounts a) {
            return base.Channel.CreateSubAccountAsync(a);
        }
        
        public SureNkap.EsameService.SubAccounts GetSubAccountById(int id) {
            return base.Channel.GetSubAccountById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.SubAccounts> GetSubAccountByIdAsync(int id) {
            return base.Channel.GetSubAccountByIdAsync(id);
        }
        
        public SureNkap.EsameService.SubAccounts GetSubAccountByEmail(string email) {
            return base.Channel.GetSubAccountByEmail(email);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.SubAccounts> GetSubAccountByEmailAsync(string email) {
            return base.Channel.GetSubAccountByEmailAsync(email);
        }
        
        public void DeleteSubAccount(int id) {
            base.Channel.DeleteSubAccount(id);
        }
        
        public System.Threading.Tasks.Task DeleteSubAccountAsync(int id) {
            return base.Channel.DeleteSubAccountAsync(id);
        }
        
        public int CountAllPharmacies() {
            return base.Channel.CountAllPharmacies();
        }
        
        public System.Threading.Tasks.Task<int> CountAllPharmaciesAsync() {
            return base.Channel.CountAllPharmaciesAsync();
        }
        
        public decimal PharmaciesTotalRevenue(int id) {
            return base.Channel.PharmaciesTotalRevenue(id);
        }
        
        public System.Threading.Tasks.Task<decimal> PharmaciesTotalRevenueAsync(int id) {
            return base.Channel.PharmaciesTotalRevenueAsync(id);
        }
        
        public int CreatePharmacy(SureNkap.EsameService.Pharmacies p) {
            return base.Channel.CreatePharmacy(p);
        }
        
        public System.Threading.Tasks.Task<int> CreatePharmacyAsync(SureNkap.EsameService.Pharmacies p) {
            return base.Channel.CreatePharmacyAsync(p);
        }
        
        public SureNkap.EsameService.DevisViewModel[] GetQuotesPerPharmacy(int pharmacieId) {
            return base.Channel.GetQuotesPerPharmacy(pharmacieId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DevisViewModel[]> GetQuotesPerPharmacyAsync(int pharmacieId) {
            return base.Channel.GetQuotesPerPharmacyAsync(pharmacieId);
        }
        
        public SureNkap.EsameService.DevisViewModel[] GetQuotesPerPatient(int patientId) {
            return base.Channel.GetQuotesPerPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DevisViewModel[]> GetQuotesPerPatientAsync(int patientId) {
            return base.Channel.GetQuotesPerPatientAsync(patientId);
        }
        
        public void CreateProforma(SureNkap.EsameService.Proforma p, SureNkap.EsameService.ProformaDetails[] pdts) {
            base.Channel.CreateProforma(p, pdts);
        }
        
        public System.Threading.Tasks.Task CreateProformaAsync(SureNkap.EsameService.Proforma p, SureNkap.EsameService.ProformaDetails[] pdts) {
            return base.Channel.CreateProformaAsync(p, pdts);
        }
        
        public SureNkap.EsameService.Pharmacies OpenSesson(string username, string password) {
            return base.Channel.OpenSesson(username, password);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies> OpenSessonAsync(string username, string password) {
            return base.Channel.OpenSessonAsync(username, password);
        }
        
        public SureNkap.EsameService.Pharmacies GetPharmacieById(int id) {
            return base.Channel.GetPharmacieById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies> GetPharmacieByIdAsync(int id) {
            return base.Channel.GetPharmacieByIdAsync(id);
        }
        
        public SureNkap.EsameService.OrdonnanceDetails[] GetDetailsPerOrdonnance(int id) {
            return base.Channel.GetDetailsPerOrdonnance(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrdonnanceDetails[]> GetDetailsPerOrdonnanceAsync(int id) {
            return base.Channel.GetDetailsPerOrdonnanceAsync(id);
        }
        
        public SureNkap.EsameService.Ordonnances[] GetOrdonnancesPerPatient(int id) {
            return base.Channel.GetOrdonnancesPerPatient(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Ordonnances[]> GetOrdonnancesPerPatientAsync(int id) {
            return base.Channel.GetOrdonnancesPerPatientAsync(id);
        }
        
        public int CreateQuoteRequest(SureNkap.EsameService.QuoteRequests l) {
            return base.Channel.CreateQuoteRequest(l);
        }
        
        public System.Threading.Tasks.Task<int> CreateQuoteRequestAsync(SureNkap.EsameService.QuoteRequests l) {
            return base.Channel.CreateQuoteRequestAsync(l);
        }
        
        public SureNkap.EsameService.QuoteRequests[] GetQuoteRequestPerPharmacy(int id) {
            return base.Channel.GetQuoteRequestPerPharmacy(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests[]> GetQuoteRequestPerPharmacyAsync(int id) {
            return base.Channel.GetQuoteRequestPerPharmacyAsync(id);
        }
        
        public SureNkap.EsameService.QuoteRequests[] GetQuoteRequestsPerPatient(int id) {
            return base.Channel.GetQuoteRequestsPerPatient(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests[]> GetQuoteRequestsPerPatientAsync(int id) {
            return base.Channel.GetQuoteRequestsPerPatientAsync(id);
        }
        
        public SureNkap.EsameService.Pharmacies[] GetListPharmacies() {
            return base.Channel.GetListPharmacies();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies[]> GetListPharmaciesAsync() {
            return base.Channel.GetListPharmaciesAsync();
        }
        
        public SureNkap.EsameService.QuoteRequests GetQuoteRequestById(int id) {
            return base.Channel.GetQuoteRequestById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests> GetQuoteRequestByIdAsync(int id) {
            return base.Channel.GetQuoteRequestByIdAsync(id);
        }
        
        public SureNkap.EsameService.Proforma GetQuoteById(int id) {
            return base.Channel.GetQuoteById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Proforma> GetQuoteByIdAsync(int id) {
            return base.Channel.GetQuoteByIdAsync(id);
        }
        
        public SureNkap.EsameService.ProformaDetails[] GetProformaDetails(int proformaId) {
            return base.Channel.GetProformaDetails(proformaId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.ProformaDetails[]> GetProformaDetailsAsync(int proformaId) {
            return base.Channel.GetProformaDetailsAsync(proformaId);
        }
        
        public bool UpdatePharmacy(SureNkap.EsameService.Pharmacies p) {
            return base.Channel.UpdatePharmacy(p);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePharmacyAsync(SureNkap.EsameService.Pharmacies p) {
            return base.Channel.UpdatePharmacyAsync(p);
        }
        
        public SureNkap.EsameService.Settings GetPharmacySettings(int id) {
            return base.Channel.GetPharmacySettings(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Settings> GetPharmacySettingsAsync(int id) {
            return base.Channel.GetPharmacySettingsAsync(id);
        }
        
        public SureNkap.EsameService.Invoices[] GetListPharmacyInvoices(int id) {
            return base.Channel.GetListPharmacyInvoices(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Invoices[]> GetListPharmacyInvoicesAsync(int id) {
            return base.Channel.GetListPharmacyInvoicesAsync(id);
        }
        
        public SureNkap.EsameService.Pharmacies GetPharmacyById(int id) {
            return base.Channel.GetPharmacyById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Pharmacies> GetPharmacyByIdAsync(int id) {
            return base.Channel.GetPharmacyByIdAsync(id);
        }
        
        public void UpdateOrdonnance(string ids) {
            base.Channel.UpdateOrdonnance(ids);
        }
        
        public System.Threading.Tasks.Task UpdateOrdonnanceAsync(string ids) {
            return base.Channel.UpdateOrdonnanceAsync(ids);
        }
        
        public bool UpdateProforma(SureNkap.EsameService.Proforma upd) {
            return base.Channel.UpdateProforma(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProformaAsync(SureNkap.EsameService.Proforma upd) {
            return base.Channel.UpdateProformaAsync(upd);
        }
        
        public SureNkap.EsameService.Orders CreateOrder(int proformaId, System.DateTime utcDate, string products) {
            return base.Channel.CreateOrder(proformaId, utcDate, products);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Orders> CreateOrderAsync(int proformaId, System.DateTime utcDate, string products) {
            return base.Channel.CreateOrderAsync(proformaId, utcDate, products);
        }
        
        public bool DeleteProforma(int id) {
            return base.Channel.DeleteProforma(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProformaAsync(int id) {
            return base.Channel.DeleteProformaAsync(id);
        }
        
        public bool UpdateOrder(SureNkap.EsameService.Orders ord) {
            return base.Channel.UpdateOrder(ord);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderAsync(SureNkap.EsameService.Orders ord) {
            return base.Channel.UpdateOrderAsync(ord);
        }
        
        public SureNkap.EsameService.OrderDetails[] GetOrderDetails(int id) {
            return base.Channel.GetOrderDetails(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrderDetails[]> GetOrderDetailsAsync(int id) {
            return base.Channel.GetOrderDetailsAsync(id);
        }
        
        public SureNkap.EsameService.OrderPdf GetOrderAsPdf(int id, bool pharmacie) {
            return base.Channel.GetOrderAsPdf(id, pharmacie);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrderPdf> GetOrderAsPdfAsync(int id, bool pharmacie) {
            return base.Channel.GetOrderAsPdfAsync(id, pharmacie);
        }
        
        public SureNkap.EsameService.OrdersViewModel[] GetOrders(int id, bool asPatient) {
            return base.Channel.GetOrders(id, asPatient);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrdersViewModel[]> GetOrdersAsync(int id, bool asPatient) {
            return base.Channel.GetOrdersAsync(id, asPatient);
        }
        
        public SureNkap.EsameService.OrdonnanceDetails[] GetRequestDetails(int id) {
            return base.Channel.GetRequestDetails(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrdonnanceDetails[]> GetRequestDetailsAsync(int id) {
            return base.Channel.GetRequestDetailsAsync(id);
        }
        
        public SureNkap.EsameService.QuoteRequests GetRequestById(int id) {
            return base.Channel.GetRequestById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.QuoteRequests> GetRequestByIdAsync(int id) {
            return base.Channel.GetRequestByIdAsync(id);
        }
        
        public SureNkap.EsameService.OrderPdfs[] GetOrderToPrint(int id) {
            return base.Channel.GetOrderToPrint(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OrderPdfs[]> GetOrderToPrintAsync(int id) {
            return base.Channel.GetOrderToPrintAsync(id);
        }
        
        public SureNkap.EsameService.Proforma GetProformaById(int id) {
            return base.Channel.GetProformaById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Proforma> GetProformaByIdAsync(int id) {
            return base.Channel.GetProformaByIdAsync(id);
        }
        
        public SureNkap.EsameService.Orders GetOrderById(int id) {
            return base.Channel.GetOrderById(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Orders> GetOrderByIdAsync(int id) {
            return base.Channel.GetOrderByIdAsync(id);
        }
        
        public int Create(SureNkap.EsameService.Meetings meet) {
            return base.Channel.Create(meet);
        }
        
        public System.Threading.Tasks.Task<int> CreateAsync(SureNkap.EsameService.Meetings meet) {
            return base.Channel.CreateAsync(meet);
        }
        
        public bool Update(SureNkap.EsameService.Meetings upd) {
            return base.Channel.Update(upd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(SureNkap.EsameService.Meetings upd) {
            return base.Channel.UpdateAsync(upd);
        }
        
        public bool DeleteMeeting(int Id) {
            return base.Channel.DeleteMeeting(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMeetingAsync(int Id) {
            return base.Channel.DeleteMeetingAsync(Id);
        }
        
        public bool DeleteParticipant(int Id) {
            return base.Channel.DeleteParticipant(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteParticipantAsync(int Id) {
            return base.Channel.DeleteParticipantAsync(Id);
        }
        
        public SureNkap.EsameService.Meetings GetMeetingById(int Id) {
            return base.Channel.GetMeetingById(Id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Meetings> GetMeetingByIdAsync(int Id) {
            return base.Channel.GetMeetingByIdAsync(Id);
        }
        
        public SureNkap.EsameService.Meetings GetMeetingByConsultationId(int consultationId) {
            return base.Channel.GetMeetingByConsultationId(consultationId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Meetings> GetMeetingByConsultationIdAsync(int consultationId) {
            return base.Channel.GetMeetingByConsultationIdAsync(consultationId);
        }
        
        public SureNkap.EsameService.Meetings[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Meetings[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void AddMeetingParticipant(SureNkap.EsameService.MeetingParticipants part) {
            base.Channel.AddMeetingParticipant(part);
        }
        
        public System.Threading.Tasks.Task AddMeetingParticipantAsync(SureNkap.EsameService.MeetingParticipants part) {
            return base.Channel.AddMeetingParticipantAsync(part);
        }
        
        public void DeleteMeetingParticipant(int Id) {
            base.Channel.DeleteMeetingParticipant(Id);
        }
        
        public System.Threading.Tasks.Task DeleteMeetingParticipantAsync(int Id) {
            return base.Channel.DeleteMeetingParticipantAsync(Id);
        }
        
        public void UpdateMeetingParticipant(SureNkap.EsameService.MeetingParticipants upd) {
            base.Channel.UpdateMeetingParticipant(upd);
        }
        
        public System.Threading.Tasks.Task UpdateMeetingParticipantAsync(SureNkap.EsameService.MeetingParticipants upd) {
            return base.Channel.UpdateMeetingParticipantAsync(upd);
        }
        
        public SureNkap.EsameService.MeetingParticipants GetParticipant(int Id) {
            return base.Channel.GetParticipant(Id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.MeetingParticipants> GetParticipantAsync(int Id) {
            return base.Channel.GetParticipantAsync(Id);
        }
        
        public SureNkap.EsameService.MeetingParticipants[] GetAllParticipants(int meetingId) {
            return base.Channel.GetAllParticipants(meetingId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.MeetingParticipants[]> GetAllParticipantsAsync(int meetingId) {
            return base.Channel.GetAllParticipantsAsync(meetingId);
        }
        
        public void AddToCart(SureNkap.EsameService.CartDetails det) {
            base.Channel.AddToCart(det);
        }
        
        public System.Threading.Tasks.Task AddToCartAsync(SureNkap.EsameService.CartDetails det) {
            return base.Channel.AddToCartAsync(det);
        }
        
        public void CreateCart(SureNkap.EsameService.Cart cart) {
            base.Channel.CreateCart(cart);
        }
        
        public System.Threading.Tasks.Task CreateCartAsync(SureNkap.EsameService.Cart cart) {
            return base.Channel.CreateCartAsync(cart);
        }
        
        public void DeleteCart(int id) {
            base.Channel.DeleteCart(id);
        }
        
        public System.Threading.Tasks.Task DeleteCartAsync(int id) {
            return base.Channel.DeleteCartAsync(id);
        }
        
        public void UpdateCart(SureNkap.EsameService.Cart cart) {
            base.Channel.UpdateCart(cart);
        }
        
        public System.Threading.Tasks.Task UpdateCartAsync(SureNkap.EsameService.Cart cart) {
            return base.Channel.UpdateCartAsync(cart);
        }
        
        public SureNkap.EsameService.Cart GetCartByInvoiceId(string invoiceId) {
            return base.Channel.GetCartByInvoiceId(invoiceId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Cart> GetCartByInvoiceIdAsync(string invoiceId) {
            return base.Channel.GetCartByInvoiceIdAsync(invoiceId);
        }
        
        public SureNkap.EsameService.CartDetails[] GetCartDetails(int cartId) {
            return base.Channel.GetCartDetails(cartId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.CartDetails[]> GetCartDetailsAsync(int cartId) {
            return base.Channel.GetCartDetailsAsync(cartId);
        }
        
        public bool CompleteServiceForAM(int serviceId) {
            return base.Channel.CompleteServiceForAM(serviceId);
        }
        
        public System.Threading.Tasks.Task<bool> CompleteServiceForAMAsync(int serviceId) {
            return base.Channel.CompleteServiceForAMAsync(serviceId);
        }
        
        public bool CompleteServiceForTE(int serviceId) {
            return base.Channel.CompleteServiceForTE(serviceId);
        }
        
        public System.Threading.Tasks.Task<bool> CompleteServiceForTEAsync(int serviceId) {
            return base.Channel.CompleteServiceForTEAsync(serviceId);
        }
        
        public bool CompleteServiceForRDV(int serviceId) {
            return base.Channel.CompleteServiceForRDV(serviceId);
        }
        
        public System.Threading.Tasks.Task<bool> CompleteServiceForRDVAsync(int serviceId) {
            return base.Channel.CompleteServiceForRDVAsync(serviceId);
        }
        
        public bool CompleteServiceForES(int serviceId, int patientId, int quantity) {
            return base.Channel.CompleteServiceForES(serviceId, patientId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> CompleteServiceForESAsync(int serviceId, int patientId, int quantity) {
            return base.Channel.CompleteServiceForESAsync(serviceId, patientId, quantity);
        }
        
        public bool CompleteServiceForDir(int serviceId) {
            return base.Channel.CompleteServiceForDir(serviceId);
        }
        
        public System.Threading.Tasks.Task<bool> CompleteServiceForDirAsync(int serviceId) {
            return base.Channel.CompleteServiceForDirAsync(serviceId);
        }
        
        public bool CompleteServiceForOrdonnance(int serviceId, string code) {
            return base.Channel.CompleteServiceForOrdonnance(serviceId, code);
        }
        
        public System.Threading.Tasks.Task<bool> CompleteServiceForOrdonnanceAsync(int serviceId, string code) {
            return base.Channel.CompleteServiceForOrdonnanceAsync(serviceId, code);
        }
        
        public SureNkap.EsameService.OMPaymentRequest[] GetAllOMRequests() {
            return base.Channel.GetAllOMRequests();
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OMPaymentRequest[]> GetAllOMRequestsAsync() {
            return base.Channel.GetAllOMRequestsAsync();
        }
        
        public SureNkap.EsameService.OMPaymentRequest GetOMRequest(int id) {
            return base.Channel.GetOMRequest(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.OMPaymentRequest> GetOMRequestAsync(int id) {
            return base.Channel.GetOMRequestAsync(id);
        }
        
        public void DeleteOMRequest(int id) {
            base.Channel.DeleteOMRequest(id);
        }
        
        public System.Threading.Tasks.Task DeleteOMRequestAsync(int id) {
            return base.Channel.DeleteOMRequestAsync(id);
        }
        
        public int CreateOMRequest(SureNkap.EsameService.OMPaymentRequest req) {
            return base.Channel.CreateOMRequest(req);
        }
        
        public System.Threading.Tasks.Task<int> CreateOMRequestAsync(SureNkap.EsameService.OMPaymentRequest req) {
            return base.Channel.CreateOMRequestAsync(req);
        }
        
        public void CreateEventSeries(SureNkap.EsameService.Events[] evts, SureNkap.EsameService.EventSeries serie) {
            base.Channel.CreateEventSeries(evts, serie);
        }
        
        public System.Threading.Tasks.Task CreateEventSeriesAsync(SureNkap.EsameService.Events[] evts, SureNkap.EsameService.EventSeries serie) {
            return base.Channel.CreateEventSeriesAsync(evts, serie);
        }
        
        public void CreateEvent(SureNkap.EsameService.Events evt) {
            base.Channel.CreateEvent(evt);
        }
        
        public System.Threading.Tasks.Task CreateEventAsync(SureNkap.EsameService.Events evt) {
            return base.Channel.CreateEventAsync(evt);
        }
        
        public void UpdateEvent(SureNkap.EsameService.Events evt, bool updateSeries) {
            base.Channel.UpdateEvent(evt, updateSeries);
        }
        
        public System.Threading.Tasks.Task UpdateEventAsync(SureNkap.EsameService.Events evt, bool updateSeries) {
            return base.Channel.UpdateEventAsync(evt, updateSeries);
        }
        
        public void DeleteEvent(int id, bool deleteSeries) {
            base.Channel.DeleteEvent(id, deleteSeries);
        }
        
        public System.Threading.Tasks.Task DeleteEventAsync(int id, bool deleteSeries) {
            return base.Channel.DeleteEventAsync(id, deleteSeries);
        }
        
        public SureNkap.EsameService.Events[] GetAllEvents(SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type) {
            return base.Channel.GetAllEvents(status, type);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Events[]> GetAllEventsAsync(SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type) {
            return base.Channel.GetAllEventsAsync(status, type);
        }
        
        public SureNkap.EsameService.Events GetEvent(int id) {
            return base.Channel.GetEvent(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Events> GetEventAsync(int id) {
            return base.Channel.GetEventAsync(id);
        }
        
        public SureNkap.EsameService.Events[] GetAllEventsByMedecinId(int medecinId, SureNkap.EsameService.Events.StatusEvent status) {
            return base.Channel.GetAllEventsByMedecinId(medecinId, status);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Events[]> GetAllEventsByMedecinIdAsync(int medecinId, SureNkap.EsameService.Events.StatusEvent status) {
            return base.Channel.GetAllEventsByMedecinIdAsync(medecinId, status);
        }
        
        public SureNkap.EsameService.DiaryViewModel[] GetAllEventsByPatientId(int patientId, SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type) {
            return base.Channel.GetAllEventsByPatientId(patientId, status, type);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.DiaryViewModel[]> GetAllEventsByPatientIdAsync(int patientId, SureNkap.EsameService.Events.StatusEvent status, SureNkap.EsameService.Events.EventType type) {
            return base.Channel.GetAllEventsByPatientIdAsync(patientId, status, type);
        }
        
        public SureNkap.EsameService.EventSeries GetSerie(string id) {
            return base.Channel.GetSerie(id);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.EventSeries> GetSerieAsync(string id) {
            return base.Channel.GetSerieAsync(id);
        }
        
        public int BookEvent(SureNkap.EsameService.Events evt, int consultationId) {
            return base.Channel.BookEvent(evt, consultationId);
        }
        
        public System.Threading.Tasks.Task<int> BookEventAsync(SureNkap.EsameService.Events evt, int consultationId) {
            return base.Channel.BookEventAsync(evt, consultationId);
        }
        
        public void AddToCalendar(SureNkap.EsameService.Calendar c) {
            base.Channel.AddToCalendar(c);
        }
        
        public System.Threading.Tasks.Task AddToCalendarAsync(SureNkap.EsameService.Calendar c) {
            return base.Channel.AddToCalendarAsync(c);
        }
        
        public void RemoveCalendar(int id) {
            base.Channel.RemoveCalendar(id);
        }
        
        public System.Threading.Tasks.Task RemoveCalendarAsync(int id) {
            return base.Channel.RemoveCalendarAsync(id);
        }
        
        public SureNkap.EsameService.Calendar GetCalendar(int eventId) {
            return base.Channel.GetCalendar(eventId);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.Calendar> GetCalendarAsync(int eventId) {
            return base.Channel.GetCalendarAsync(eventId);
        }
        
        public SureNkap.EsameService.EventSeries CreateSeries(SureNkap.EsameService.EventSeries s) {
            return base.Channel.CreateSeries(s);
        }
        
        public System.Threading.Tasks.Task<SureNkap.EsameService.EventSeries> CreateSeriesAsync(SureNkap.EsameService.EventSeries s) {
            return base.Channel.CreateSeriesAsync(s);
        }
        
        public void _Hello() {
            base.Channel._Hello();
        }
        
        public System.Threading.Tasks.Task _HelloAsync() {
            return base.Channel._HelloAsync();
        }
    }
}
